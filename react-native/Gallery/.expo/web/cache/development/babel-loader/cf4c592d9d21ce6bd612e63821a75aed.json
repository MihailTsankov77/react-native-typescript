{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IconButton, Text } from 'react-native-paper';\nimport { useHeaderTextColor } from \"../utils\";\nimport Color from 'color';\nimport { getTranslation } from \"../translations/utils\";\n\nfunction getLabel(locale, mode, configuredLabel) {\n  if (configuredLabel) {\n    return configuredLabel;\n  }\n\n  if (mode === 'range') {\n    return getTranslation(locale, 'selectRange');\n  }\n\n  if (mode === 'multiple') {\n    return getTranslation(locale, 'selectMultiple');\n  }\n\n  if (mode === 'single') {\n    return getTranslation(locale, 'selectSingle');\n  }\n\n  return '...?';\n}\n\nexport default function DatePickerModalContentHeader(props) {\n  var onToggle = props.onToggle,\n      collapsed = props.collapsed,\n      mode = props.mode,\n      moreLabel = props.moreLabel,\n      uppercase = props.uppercase,\n      _props$editIcon = props.editIcon,\n      editIcon = _props$editIcon === void 0 ? 'pencil' : _props$editIcon,\n      _props$calendarIcon = props.calendarIcon,\n      calendarIcon = _props$calendarIcon === void 0 ? 'calendar' : _props$calendarIcon;\n  var label = getLabel(props.locale, props.mode, props.label);\n  var color = useHeaderTextColor();\n  var allowEditing = mode !== 'multiple';\n  return React.createElement(View, {\n    style: [styles.header]\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: [styles.label, {\n      color: color\n    }]\n  }, uppercase ? label.toUpperCase() : label), React.createElement(View, {\n    style: styles.headerContentContainer\n  }, mode === 'range' ? React.createElement(HeaderContentRange, _extends({}, props, {\n    color: color\n  })) : null, mode === 'single' ? React.createElement(HeaderContentSingle, _extends({}, props, {\n    color: color\n  })) : null, mode === 'multiple' ? React.createElement(HeaderContentMulti, _extends({}, props, {\n    color: color,\n    moreLabel: moreLabel\n  })) : null)), React.createElement(View, {\n    style: styles.fill\n  }), allowEditing ? React.createElement(IconButton, {\n    icon: collapsed ? editIcon : calendarIcon,\n    accessibilityLabel: collapsed ? getTranslation(props.locale, 'typeInDate') : getTranslation(props.locale, 'pickDateFromCalendar'),\n    color: color,\n    onPress: onToggle\n  }) : null);\n}\nexport function HeaderContentSingle(_ref) {\n  var state = _ref.state,\n      _ref$emptyLabel = _ref.emptyLabel,\n      emptyLabel = _ref$emptyLabel === void 0 ? ' ' : _ref$emptyLabel,\n      color = _ref.color,\n      locale = _ref.locale;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = state.date ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, state.date ? formatter.format(state.date) : emptyLabel);\n}\nexport function HeaderContentMulti(_ref2) {\n  var _state$dates;\n\n  var state = _ref2.state,\n      _ref2$emptyLabel = _ref2.emptyLabel,\n      emptyLabel = _ref2$emptyLabel === void 0 ? ' ' : _ref2$emptyLabel,\n      _ref2$moreLabel = _ref2.moreLabel,\n      moreLabel = _ref2$moreLabel === void 0 ? 'more' : _ref2$moreLabel,\n      color = _ref2.color,\n      locale = _ref2.locale;\n  var dateCount = ((_state$dates = state.dates) === null || _state$dates === void 0 ? void 0 : _state$dates.length) || 0;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = dateCount ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var label = emptyLabel;\n\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates.map(function (date) {\n        return formatter.format(date);\n      }).join(', ');\n    } else {\n      label = formatter.format(state.dates[0]) + (\" (+ \" + (dateCount - 1) + \" \" + moreLabel + \")\");\n    }\n  }\n\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, label);\n}\nexport function HeaderContentRange(_ref3) {\n  var locale = _ref3.locale,\n      state = _ref3.state,\n      _ref3$headerSeparator = _ref3.headerSeparator,\n      headerSeparator = _ref3$headerSeparator === void 0 ? '-' : _ref3$headerSeparator,\n      _ref3$startLabel = _ref3.startLabel,\n      startLabel = _ref3$startLabel === void 0 ? 'Start' : _ref3$startLabel,\n      _ref3$endLabel = _ref3.endLabel,\n      endLabel = _ref3$endLabel === void 0 ? 'End' : _ref3$endLabel,\n      color = _ref3.color;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var startColor = state.startDate ? color : lighterColor;\n  var endColor = state.endDate ? color : lighterColor;\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: startColor\n    }]\n  }, state.startDate ? formatter.format(state.startDate) : startLabel), React.createElement(Text, {\n    style: [styles.headerSeparator, {\n      color: color\n    }]\n  }, headerSeparator), React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: endColor\n    }]\n  }, state.endDate ? formatter.format(state.endDate) : endLabel));\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4\n  },\n  safeContent: {\n    paddingBottom: 0\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12\n  },\n  headerContentContainer: {\n    marginTop: 5,\n    flexDirection: 'row'\n  },\n  label: {\n    color: '#fff',\n    letterSpacing: 1,\n    fontSize: 13\n  },\n  singleHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  rangeHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  excludeInRangeHeaderText: {\n    fontSize: 25\n  },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3\n  },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6\n  },\n  appbarHeader: {\n    elevation: 0\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","IconButton","Text","useHeaderTextColor","Color","getTranslation","getLabel","locale","mode","configuredLabel","DatePickerModalContentHeader","props","onToggle","collapsed","moreLabel","uppercase","editIcon","calendarIcon","label","color","allowEditing","View","style","styles","header","toUpperCase","headerContentContainer","HeaderContentRange","HeaderContentSingle","HeaderContentMulti","fill","icon","accessibilityLabel","onPress","state","emptyLabel","lighterColor","fade","rgb","toString","dateColor","date","formatter","useMemo","Intl","DateTimeFormat","month","day","singleHeaderText","format","dateCount","dates","length","map","join","headerSeparator","startLabel","endLabel","startColor","startDate","endColor","endDate","rangeHeaderText","StyleSheet","create","flex","animated","paddingBottom","elevation","safeContent","height","alignItems","flexDirection","paddingLeft","paddingRight","marginTop","letterSpacing","fontSize","excludeInRangeHeaderText","excludeInRangeHeaderTextSmall","marginLeft","appbarHeader","column","row"],"sources":["DatePickerModalContentHeader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { IconButton, Text } from 'react-native-paper'\nimport type { ModeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\nimport { useHeaderTextColor } from '../utils'\nimport Color from 'color'\nimport { getTranslation } from '../translations/utils'\n\nexport interface HeaderPickProps {\n  moreLabel?: string\n  label?: string\n  emptyLabel?: string\n  saveLabel?: string\n  uppercase?: boolean\n  headerSeparator?: string\n  startLabel?: string\n  endLabel?: string\n  editIcon?: string\n  calendarIcon?: string\n  closeIcon?: string\n}\n\nexport interface HeaderContentProps extends HeaderPickProps {\n  state: LocalState\n  mode: ModeType\n  collapsed: boolean\n  onToggle: () => any\n  locale: string | undefined\n}\n\nfunction getLabel(\n  locale: string | undefined,\n  mode: ModeType,\n  configuredLabel?: string\n) {\n  if (configuredLabel) {\n    return configuredLabel\n  }\n  if (mode === 'range') {\n    return getTranslation(locale, 'selectRange')\n  }\n  if (mode === 'multiple') {\n    return getTranslation(locale, 'selectMultiple')\n  }\n  if (mode === 'single') {\n    return getTranslation(locale, 'selectSingle')\n  }\n  return '...?'\n}\n\nexport default function DatePickerModalContentHeader(\n  props: HeaderContentProps\n) {\n  const {\n    onToggle,\n    collapsed,\n    mode,\n    moreLabel,\n    uppercase,\n    editIcon = 'pencil',\n    calendarIcon = 'calendar',\n  } = props\n\n  const label = getLabel(props.locale, props.mode, props.label)\n\n  const color = useHeaderTextColor()\n  const allowEditing = mode !== 'multiple'\n  return (\n    <View style={[styles.header]}>\n      <View>\n        <Text style={[styles.label, { color }]}>\n          {uppercase ? label.toUpperCase() : label}\n        </Text>\n        <View style={styles.headerContentContainer}>\n          {mode === 'range' ? (\n            <HeaderContentRange {...props} color={color} />\n          ) : null}\n          {mode === 'single' ? (\n            <HeaderContentSingle {...props} color={color} />\n          ) : null}\n          {mode === 'multiple' ? (\n            <HeaderContentMulti\n              {...props}\n              color={color}\n              moreLabel={moreLabel}\n            />\n          ) : null}\n        </View>\n      </View>\n      <View style={styles.fill} />\n      {allowEditing ? (\n        <IconButton\n          icon={collapsed ? editIcon : calendarIcon}\n          accessibilityLabel={\n            collapsed\n              ? getTranslation(props.locale, 'typeInDate')\n              : getTranslation(props.locale, 'pickDateFromCalendar')\n          }\n          color={color}\n          onPress={onToggle}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport function HeaderContentSingle({\n  state,\n  emptyLabel = ' ',\n  color,\n  locale,\n}: HeaderContentProps & { color: string }) {\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = state.date ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>\n      {state.date ? formatter.format(state.date) : emptyLabel}\n    </Text>\n  )\n}\n\nexport function HeaderContentMulti({\n  state,\n  emptyLabel = ' ',\n  moreLabel = 'more',\n  color,\n  locale,\n}: HeaderContentProps & { color: string; moreLabel: string | undefined }) {\n  const dateCount = state.dates?.length || 0\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = dateCount ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  let label = emptyLabel\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates!.map((date) => formatter.format(date)).join(', ')\n    } else {\n      label =\n        formatter.format(state.dates![0]) + ` (+ ${dateCount - 1} ${moreLabel})`\n    }\n  }\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>{label}</Text>\n  )\n}\n\nexport function HeaderContentRange({\n  locale,\n  state,\n  headerSeparator = '-',\n  startLabel = 'Start',\n  endLabel = 'End',\n  color,\n}: HeaderContentProps & { color: string }) {\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const startColor = state.startDate ? color : lighterColor\n  const endColor = state.endDate ? color : lighterColor\n\n  return (\n    <>\n      <Text style={[styles.rangeHeaderText, { color: startColor }]}>\n        {state.startDate ? formatter.format(state.startDate) : startLabel}\n      </Text>\n      <Text style={[styles.headerSeparator, { color }]}>{headerSeparator}</Text>\n      <Text style={[styles.rangeHeaderText, { color: endColor }]}>\n        {state.endDate ? formatter.format(state.endDate) : endLabel}\n      </Text>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  excludeInRangeHeaderText: { fontSize: 25 },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3,\n  },\n\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n  },\n  column: { flexDirection: 'column' },\n  row: { flexDirection: 'row' },\n})\n"]},"metadata":{},"sourceType":"module"}