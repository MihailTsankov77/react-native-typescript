{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"onChange\", \"bgColor\", \"color\", \"borderColor\", \"prestine\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport InputContainer from \"./CustomElements/CustomInputContainer\";\nimport { DatePickerModal } from 'react-native-paper-dates';\nimport Btn from \"./CustomButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DatePicker = function DatePicker(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"rgba(236,236,236, 0.9)\" : _ref$bgColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"grey\" : _ref$color,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? \"rgba(230,230,230, 1)\" : _ref$borderColor,\n      _ref$prestine = _ref.prestine,\n      prestine = _ref$prestine === void 0 ? true : _ref$prestine,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var handleDateChange = function handleDateChange(_ref2) {\n    var date = _ref2.date;\n    console.log('====================================');\n    console.log(new Date(date.toDateString()));\n    console.log('====================================');\n    setOpen(false);\n  };\n\n  return _jsx(InputContainer, _objectSpread(_objectSpread({\n    color: color\n  }, rest), {}, {\n    child: _jsxs(_Fragment, {\n      children: [_jsx(Btn, {\n        color: \"gray\",\n        event: function event() {\n          return setOpen(true);\n        },\n        value: \"Choose Date\"\n      }), _jsx(DatePickerModal, {\n        locale: \"en\",\n        mode: \"single\",\n        visible: open,\n        onDismiss: function onDismiss() {\n          return setOpen(false);\n        },\n        date: date,\n        onConfirm: handleDateChange,\n        onChange: handleDateChange,\n        saveLabel: \"Save\"\n      })]\n    }),\n    prestine: prestine,\n    value: \"\"\n  }));\n};\n\nexport default DatePicker;","map":{"version":3,"names":["React","useState","InputContainer","DatePickerModal","Btn","DatePicker","value","onChange","bgColor","color","borderColor","prestine","rest","Date","date","setDate","open","setOpen","handleDateChange","console","log","toDateString"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/Gallery/Components/.newFolder/CustomComponents/CustomDatePicker.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Platform, TextInput } from \"react-native\";\nimport { Colorable, InputField, onChangeInterface, Resizeable} from \"./shared/shared-interfaces\";\nimport InputContainer, { inputStyle } from \"./CustomElements/CustomInputContainer\";\nimport { DatePickerModal } from 'react-native-paper-dates';\nimport { CalendarDate } from \"react-native-paper-dates/lib/typescript/Date/Calendar\";\nimport Btn from \"./CustomButton\";\n\n\n\ninterface DatePickerProps extends Colorable, Resizeable, InputField, onChangeInterface {\n   \n}\n\nconst DatePicker = ({ value, onChange, bgColor = \"rgba(236,236,236, 0.9)\", color =\"grey\", borderColor = \"rgba(230,230,230, 1)\", \n                 prestine = true, ...rest}: DatePickerProps) => {\n    \n                    \n                    const [date, setDate] = useState(new Date())\n                    const [open, setOpen] = useState(false)\n            const handleDateChange = ({ date }: { date: CalendarDate }) => {\n                console.log('====================================');\n                console.log(new Date(date!.toDateString()));\n                console.log('====================================');\n               setOpen(false);\n            }\n                    \n    return (\n        \n        <InputContainer color={color} {...rest}\n\n            child={\n                <>\n               <Btn color='gray' event={() => setOpen(true)}  value={\"Choose Date\"}\n                    />\n                <DatePickerModal\n                    locale=\"en\"\n                    mode=\"single\"\n                    visible={open}\n                    onDismiss={() => setOpen(false)}\n                    date={date}\n                    onConfirm={handleDateChange}\n                    onChange={handleDateChange}\n                    saveLabel=\"Save\"\n                />\n              </>\n                    }\n            prestine={prestine} value={\"\"} />\n    );\n}\n\nexport default DatePicker;"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,cAAP;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,GAAP;;;;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAC6C;EAAA,IAD1CC,KAC0C,QAD1CA,KAC0C;EAAA,IADnCC,QACmC,QADnCA,QACmC;EAAA,wBADzBC,OACyB;EAAA,IADzBA,OACyB,6BADf,wBACe;EAAA,sBADWC,KACX;EAAA,IADWA,KACX,2BADkB,MAClB;EAAA,4BAD0BC,WAC1B;EAAA,IAD0BA,WAC1B,iCADwC,sBACxC;EAAA,yBAA/CC,QAA+C;EAAA,IAA/CA,QAA+C,8BAApC,IAAoC;EAAA,IAA3BC,IAA2B;;EAG5C,gBAAwBX,QAAQ,CAAC,IAAIY,IAAJ,EAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBd,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOe,IAAP;EAAA,IAAaC,OAAb;;EACR,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAsC;IAAA,IAAnCJ,IAAmC,SAAnCA,IAAmC;IAC3DK,OAAO,CAACC,GAAR,CAAY,sCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,IAAIP,IAAJ,CAASC,IAAI,CAAEO,YAAN,EAAT,CAAZ;IACAF,OAAO,CAACC,GAAR,CAAY,sCAAZ;IACDH,OAAO,CAAC,KAAD,CAAP;EACF,CALD;;EAOR,OAEI,KAAC,cAAD;IAAgB,KAAK,EAAER;EAAvB,GAAkCG,IAAlC;IAEI,KAAK,EACD;MAAA,WACD,KAAC,GAAD;QAAK,KAAK,EAAC,MAAX;QAAkB,KAAK,EAAE;UAAA,OAAMK,OAAO,CAAC,IAAD,CAAb;QAAA,CAAzB;QAA+C,KAAK,EAAE;MAAtD,EADC,EAGA,KAAC,eAAD;QACI,MAAM,EAAC,IADX;QAEI,IAAI,EAAC,QAFT;QAGI,OAAO,EAAED,IAHb;QAII,SAAS,EAAE;UAAA,OAAMC,OAAO,CAAC,KAAD,CAAb;QAAA,CAJf;QAKI,IAAI,EAAEH,IALV;QAMI,SAAS,EAAEI,gBANf;QAOI,QAAQ,EAAEA,gBAPd;QAQI,SAAS,EAAC;MARd,EAHA;IAAA,EAHR;IAkBI,QAAQ,EAAEP,QAlBd;IAkBwB,KAAK,EAAE;EAlB/B,GAFJ;AAsBH,CAnCD;;AAqCA,eAAeN,UAAf"},"metadata":{},"sourceType":"module"}