{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport DatePickerInputWithoutModal from \"./DatePickerInputWithoutModal\";\n\nfunction CalendarEdit(_ref) {\n  var mode = _ref.mode,\n      state = _ref.state,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      _ref$startLabel = _ref.startLabel,\n      startLabel = _ref$startLabel === void 0 ? 'Start' : _ref$startLabel,\n      _ref$endLabel = _ref.endLabel,\n      endLabel = _ref$endLabel === void 0 ? 'End' : _ref$endLabel,\n      collapsed = _ref.collapsed,\n      _onChange = _ref.onChange,\n      validRange = _ref.validRange,\n      locale = _ref.locale;\n  var dateInput = React.useRef(null);\n  var startInput = React.useRef(null);\n  var endInput = React.useRef(null);\n  React.useEffect(function () {\n    if (collapsed) {\n      Keyboard.dismiss();\n    }\n\n    var inputsToFocus = [dateInput.current, startInput.current].filter(function (n) {\n      return n;\n    });\n    var inputsToBlur = [dateInput.current, startInput.current, endInput.current].filter(function (n) {\n      return n;\n    });\n\n    if (collapsed) {\n      inputsToBlur.forEach(function (ip) {\n        return ip.blur();\n      });\n    } else {\n      inputsToFocus.forEach(function (ip) {\n        return ip.focus();\n      });\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed]);\n  var onSubmitStartInput = React.useCallback(function () {\n    if (endInput.current) {\n      endInput.current.focus();\n    }\n  }, [endInput]);\n  var onSubmitEndInput = React.useCallback(function () {}, []);\n  var onSubmitInput = React.useCallback(function () {}, []);\n  return React.createElement(View, {\n    style: styles.root\n  }, mode === 'single' ? React.createElement(DatePickerInputWithoutModal, {\n    inputMode: \"start\",\n    ref: dateInput,\n    label: label,\n    value: state.date,\n    onChange: function onChange(date) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        date: date\n      }));\n    },\n    onSubmitEditing: onSubmitInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: 'off'\n  }) : null, mode === 'range' ? React.createElement(View, {\n    style: styles.inner\n  }, React.createElement(DatePickerInputWithoutModal, {\n    inputMode: \"start\",\n    ref: startInput,\n    label: startLabel,\n    value: state.startDate,\n    onChange: function onChange(startDate) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        startDate: startDate\n      }));\n    },\n    returnKeyType: 'next',\n    onSubmitEditing: onSubmitStartInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: 'off'\n  }), React.createElement(View, {\n    style: styles.separator\n  }), React.createElement(DatePickerInputWithoutModal, {\n    inputMode: \"end\",\n    ref: endInput,\n    label: endLabel,\n    value: state.endDate,\n    onChange: function onChange(endDate) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        endDate: endDate\n      }));\n    },\n    onSubmitEditing: onSubmitEndInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: \"off\"\n  })) : null);\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    padding: 12\n  },\n  inner: {\n    flexDirection: 'row'\n  },\n  inputContainer: {\n    flex: 1\n  },\n  input: {\n    flex: 1\n  },\n  separator: {\n    width: 12\n  }\n});\nexport default React.memo(CalendarEdit);","map":{"version":3,"mappings":"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","names":["React","DatePickerInputWithoutModal","CalendarEdit","mode","state","label","startLabel","endLabel","collapsed","onChange","validRange","locale","dateInput","useRef","startInput","endInput","useEffect","Keyboard","dismiss","inputsToFocus","current","filter","n","inputsToBlur","forEach","ip","blur","focus","onSubmitStartInput","useCallback","onSubmitEndInput","onSubmitInput","View","style","styles","root","inputMode","ref","value","date","onSubmitEditing","withModal","autoComplete","inner","startDate","returnKeyType","separator","endDate","StyleSheet","create","padding","flexDirection","inputContainer","flex","input","width","memo"],"sources":["CalendarEdit.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  View,\n  StyleSheet,\n  TextInput as TextInputNative,\n  Keyboard,\n} from 'react-native'\n\nimport type { ModeType, ValidRangeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\n\nimport DatePickerInputWithoutModal from './DatePickerInputWithoutModal'\n\nfunction CalendarEdit({\n  mode,\n  state,\n  label = '',\n  startLabel = 'Start',\n  endLabel = 'End',\n  collapsed,\n  onChange,\n  validRange,\n  locale,\n}: {\n  mode: ModeType\n  label?: string\n  startLabel?: string\n  endLabel?: string\n  state: LocalState\n  collapsed: boolean\n  onChange: (s: LocalState) => any\n  validRange: ValidRangeType | undefined\n  locale: string\n}) {\n  const dateInput = React.useRef<TextInputNative | null>(null)\n  const startInput = React.useRef<TextInputNative | null>(null)\n  const endInput = React.useRef<TextInputNative | null>(null)\n\n  // when switching views focus, or un-focus text input\n  React.useEffect(() => {\n    // hide open keyboard\n    if (collapsed) {\n      Keyboard.dismiss()\n    }\n\n    const inputsToFocus = [dateInput.current, startInput.current].filter(\n      (n) => n\n    ) as TextInputNative[]\n\n    const inputsToBlur = [\n      dateInput.current,\n      startInput.current,\n      endInput.current,\n    ].filter((n) => n) as TextInputNative[]\n\n    if (collapsed) {\n      inputsToBlur.forEach((ip) => ip.blur())\n    } else {\n      inputsToFocus.forEach((ip) => ip.focus())\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed])\n\n  const onSubmitStartInput = React.useCallback(() => {\n    if (endInput.current) {\n      endInput.current.focus()\n    }\n  }, [endInput])\n\n  const onSubmitEndInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  const onSubmitInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  return (\n    <View style={styles.root}>\n      {mode === 'single' ? (\n        <DatePickerInputWithoutModal\n          inputMode=\"start\"\n          ref={dateInput}\n          label={label}\n          value={state.date}\n          onChange={(date) => onChange({ ...state, date })}\n          onSubmitEditing={onSubmitInput}\n          validRange={validRange}\n          locale={locale}\n          withModal={false}\n          autoComplete={'off'}\n        />\n      ) : null}\n      {mode === 'range' ? (\n        <View style={styles.inner}>\n          <DatePickerInputWithoutModal\n            inputMode=\"start\"\n            ref={startInput}\n            label={startLabel}\n            value={state.startDate}\n            onChange={(startDate) => onChange({ ...state, startDate })}\n            returnKeyType={'next'}\n            onSubmitEditing={onSubmitStartInput}\n            validRange={validRange}\n            locale={locale}\n            withModal={false}\n            autoComplete={'off'}\n          />\n          <View style={styles.separator} />\n          <DatePickerInputWithoutModal\n            inputMode=\"end\"\n            ref={endInput}\n            label={endLabel}\n            value={state.endDate}\n            onChange={(endDate) => onChange({ ...state, endDate })}\n            onSubmitEditing={onSubmitEndInput}\n            validRange={validRange}\n            locale={locale}\n            withModal={false}\n            autoComplete=\"off\"\n          />\n        </View>\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { padding: 12 },\n  inner: { flexDirection: 'row' },\n  inputContainer: { flex: 1 },\n  input: { flex: 1 },\n  separator: { width: 12 },\n})\n\nexport default React.memo(CalendarEdit)\n"]},"metadata":{},"sourceType":"module"}