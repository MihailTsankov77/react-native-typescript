{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DayName from \"./DayName\";\nimport { useTheme } from 'react-native-paper';\nimport { showWeekDay } from \"./dateUtils\";\nexport var dayNamesHeight = 44;\nvar weekdays = [new Date(2020, 7, 2), new Date(2020, 7, 3), new Date(2020, 7, 4), new Date(2020, 7, 5), new Date(2020, 7, 6), new Date(2020, 7, 7), new Date(2020, 7, 8)];\n\nfunction DayNames(_ref) {\n  var disableWeekDays = _ref.disableWeekDays,\n      locale = _ref.locale;\n  var theme = useTheme();\n  var shortDayNames = React.useMemo(function () {\n    var formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    });\n    return weekdays.map(function (date) {\n      return formatter.format(date);\n    });\n  }, [locale]);\n  return React.createElement(View, {\n    style: [styles.dayNames, {\n      backgroundColor: theme.colors.surface\n    }],\n    pointerEvents: 'none'\n  }, shortDayNames.filter(function (_, dayIndex) {\n    return showWeekDay(dayIndex, disableWeekDays);\n  }).map(function (dayName, i) {\n    return React.createElement(DayName, {\n      key: dayName + \"_\" + i,\n      label: dayName\n    });\n  }));\n}\n\nvar styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  }\n});\nexport default React.memo(DayNames);","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,OAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAA8BC,WAA9B;AAEA,OAAO,IAAMC,cAAc,GAAG,EAAvB;AAGP,IAAMC,QAAQ,GAAG,CACf,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CADe,EAEf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFe,EAGf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAHe,EAIf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJe,EAKf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALe,EAMf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CANe,EAOf,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAPe,CAAjB;;AAUA,SAASC,QAAT,OAMG;EAAA,IALDC,eAKC,QALDA,eAKC;EAAA,IAJDC,MAIC,QAJDA,MAIC;EACD,IAAMC,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMS,aAAa,GAAGX,KAAK,CAACY,OAANZ,CAAwB,YAAM;IAClD,IAAMa,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwBN,MAAxB,EAAgC;MAChDO,OAAO,EAAE;IADuC,CAAhC,CAAlB;IAGA,OAAOX,QAAQ,CAACY,GAATZ,CAAca,cAAD;MAAA,OAAUL,SAAS,CAACM,MAAVN,CAAiBK,IAAjBL,CAAV;IAAA,CAAbR,CAAP;EAJoB,GAKnB,CAACI,MAAD,CALmBT,CAAtB;EAOA,OACEA,oBAACoB,IAAD;IACEC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAR,EAAkB;MAAEC,eAAe,EAAEd,KAAK,CAACe,MAANf,CAAagB;IAAhC,CAAlB,CADT;IAEEC,aAAa,EAAE;EAFjB,GAIGhB,aAAa,CACXiB,MADFjB,CACS,UAACkB,CAAD,EAAIC,QAAJ;IAAA,OAAiB3B,WAAW,CAAC2B,QAAD,EAAWtB,eAAX,CAA5B;EAAA,CADTG,EAEEM,GAFFN,CAEM,UAACoB,OAAD,EAAUC,CAAV;IAAA,OACHhC,oBAACC,OAAD;MAASgC,GAAG,EAAKF,OAAL,SAAgBC,CAA5B;MAAiCE,KAAK,EAAEH;IAAxC,EADG;EAAA,CAFNpB,CAJH,CADF;AAYD;;AACD,IAAMW,MAAM,GAAGa,UAAU,CAACC,MAAXD,CAAkB;EAC/BZ,QAAQ,EAAE;IACRc,MAAM,EAAEjC,cADA;IAERkC,aAAa,EAAE,KAFP;IAGRC,UAAU,EAAE,QAHJ;IAIRf,eAAe,EAAE;EAJT;AADqB,CAAlBW,CAAf;AAQA,eAAenC,KAAK,CAACwC,IAANxC,CAAWO,QAAXP,CAAf","names":["React","DayName","useTheme","showWeekDay","dayNamesHeight","weekdays","Date","DayNames","disableWeekDays","locale","theme","shortDayNames","useMemo","formatter","Intl","DateTimeFormat","weekday","map","date","format","View","style","styles","dayNames","backgroundColor","colors","surface","pointerEvents","filter","_","dayIndex","dayName","i","key","label","StyleSheet","create","height","flexDirection","alignItems","memo"],"sources":["DayNames.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport DayName from './DayName'\nimport { useTheme } from 'react-native-paper'\nimport { DisableWeekDaysType, showWeekDay } from './dateUtils'\n\nexport const dayNamesHeight = 44\n\n// TODO: wait for a better Intl api ;-)\nconst weekdays = [\n  new Date(2020, 7, 2),\n  new Date(2020, 7, 3),\n  new Date(2020, 7, 4),\n  new Date(2020, 7, 5),\n  new Date(2020, 7, 6),\n  new Date(2020, 7, 7),\n  new Date(2020, 7, 8),\n]\n\nfunction DayNames({\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const shortDayNames = React.useMemo<string[]>(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow',\n    })\n    return weekdays.map((date) => formatter.format(date))\n  }, [locale])\n\n  return (\n    <View\n      style={[styles.dayNames, { backgroundColor: theme.colors.surface }]}\n      pointerEvents={'none'}\n    >\n      {shortDayNames\n        .filter((_, dayIndex) => showWeekDay(dayIndex, disableWeekDays))\n        .map((dayName, i) => (\n          <DayName key={`${dayName}_${i}`} label={dayName} />\n        ))}\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n})\nexport default React.memo(DayNames)\n"]},"metadata":{},"sourceType":"module"}