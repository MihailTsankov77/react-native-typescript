{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { clockTypes } from \"./timeUtils\";\nexport default function AnimatedClockSwitcher(_ref) {\n  var focused = _ref.focused,\n      hours = _ref.hours,\n      minutes = _ref.minutes;\n  var collapsed = focused === clockTypes.hours;\n  var animatedCollapsed = React.useRef(new Animated.Value(collapsed ? 1 : 0));\n  React.useEffect(function () {\n    Animated.timing(animatedCollapsed.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true\n    }).start();\n  }, [collapsed]);\n  return React.createElement(View, {\n    style: StyleSheet.absoluteFill\n  }, React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'auto' : 'none',\n    style: [StyleSheet.absoluteFill, {\n      opacity: animatedCollapsed.current,\n      transform: [{\n        scale: animatedCollapsed.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.95, 1]\n        })\n      }]\n    }]\n  }, hours), React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'none' : 'auto',\n    style: [StyleSheet.absoluteFill, {\n      opacity: animatedCollapsed.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }),\n      transform: [{\n        scale: animatedCollapsed.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.95]\n        })\n      }]\n    }]\n  }, minutes));\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,UAAT;AAEA,eAAe,SAASC,qBAAT,OAQZ;EAAA,IAPDC,OAOC,QAPDA,OAOC;EAAA,IANDC,KAMC,QANDA,KAMC;EAAA,IALDC,OAKC,QALDA,OAKC;EACD,IAAMC,SAAS,GAAGH,OAAO,KAAKF,UAAU,CAACG,KAAzC;EACA,IAAMG,iBAAiB,GAAGP,KAAK,CAACQ,MAANR,CACxB,IAAIS,QAAQ,CAACC,KAAb,CAAmBJ,SAAS,GAAG,CAAH,GAAO,CAAnC,CADwBN,CAA1B;EAGAA,KAAK,CAACW,SAANX,CAAgB,YAAM;IACpBS,QAAQ,CAACG,MAATH,CAAgBF,iBAAiB,CAACM,OAAlCJ,EAA2C;MACzCK,OAAO,EAAER,SAAS,GAAG,CAAH,GAAO,CADgB;MAEzCS,QAAQ,EAAE,GAF+B;MAGzCC,eAAe,EAAE;IAHwB,CAA3CP,EAIGQ,KAJHR;EADF,GAMG,CAACH,SAAD,CANHN;EAQA,OACEA,oBAACkB,IAAD;IAAMC,KAAK,EAAEC,UAAU,CAACC;EAAxB,GACErB,oBAACS,QAAD,CAAUS,IAAV;IACEI,aAAa,EAAEhB,SAAS,GAAG,MAAH,GAAY,MADtC;IAEEa,KAAK,EAAE,CACLC,UAAU,CAACC,YADN,EAEL;MACEE,OAAO,EAAEhB,iBAAiB,CAACM,OAD7B;MAEEW,SAAS,EAAE,CACT;QACEC,KAAK,EAAElB,iBAAiB,CAACM,OAAlBN,CAA0BmB,WAA1BnB,CAAsC;UAC3CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD+B;UAE3CC,WAAW,EAAE,CAAC,IAAD,EAAO,CAAP;QAF8B,CAAtCrB;MADT,CADS;IAFb,CAFK;EAFT,GAiBGH,KAjBH,CADF,EAoBEJ,oBAACS,QAAD,CAAUS,IAAV;IACEI,aAAa,EAAEhB,SAAS,GAAG,MAAH,GAAY,MADtC;IAEEa,KAAK,EAAE,CACLC,UAAU,CAACC,YADN,EAEL;MACEE,OAAO,EAAEhB,iBAAiB,CAACM,OAAlBN,CAA0BmB,WAA1BnB,CAAsC;QAC7CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiC;QAE7CC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;MAFgC,CAAtCrB,CADX;MAKEiB,SAAS,EAAE,CACT;QACEC,KAAK,EAAElB,iBAAiB,CAACM,OAAlBN,CAA0BmB,WAA1BnB,CAAsC;UAC3CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD+B;UAE3CC,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ;QAF8B,CAAtCrB;MADT,CADS;IALb,CAFK;EAFT,GAoBGF,OApBH,CApBF,CADF;AA6CD","names":["React","clockTypes","AnimatedClockSwitcher","focused","hours","minutes","collapsed","animatedCollapsed","useRef","Animated","Value","useEffect","timing","current","toValue","duration","useNativeDriver","start","View","style","StyleSheet","absoluteFill","pointerEvents","opacity","transform","scale","interpolate","inputRange","outputRange"],"sources":["AnimatedClockSwitcher.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { clockTypes, PossibleClockTypes } from './timeUtils'\n\nexport default function AnimatedClockSwitcher({\n  focused,\n  hours,\n  minutes,\n}: {\n  focused: PossibleClockTypes\n  hours: any\n  minutes: any\n}) {\n  const collapsed = focused === clockTypes.hours\n  const animatedCollapsed = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    Animated.timing(animatedCollapsed.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n  }, [collapsed])\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current,\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {hours}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {minutes}\n      </Animated.View>\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}