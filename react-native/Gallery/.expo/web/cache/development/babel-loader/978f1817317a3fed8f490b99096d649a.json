{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"onChange\", \"bgColor\", \"color\", \"borderColor\", \"multiline\", \"prestine\", \"isPassword\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport InputContainer, { inputStyle } from \"./CustomElements/CustomInputContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Input = function Input(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"rgba(236,236,236, 0.9)\" : _ref$bgColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"grey\" : _ref$color,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? \"rgba(230,230,230, 1)\" : _ref$borderColor,\n      _ref$multiline = _ref.multiline,\n      multiline = _ref$multiline === void 0 ? {\n    enable: false,\n    lines: 1\n  } : _ref$multiline,\n      _ref$prestine = _ref.prestine,\n      prestine = _ref$prestine === void 0 ? true : _ref$prestine,\n      _ref$isPassword = _ref.isPassword,\n      isPassword = _ref$isPassword === void 0 ? false : _ref$isPassword,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(InputContainer, _objectSpread(_objectSpread({\n    color: color\n  }, rest), {}, {\n    child: _jsx(TextInput, {\n      onChangeText: onChange,\n      value: value,\n      style: _objectSpread(_objectSpread({}, inputStyle.input), {}, {\n        backgroundColor: bgColor,\n        borderColor: borderColor\n      }),\n      multiline: multiline.enable,\n      numberOfLines: multiline.lines,\n      secureTextEntry: isPassword\n    }),\n    prestine: prestine,\n    value: \"\"\n  }));\n};\n\nexport default Input;","map":{"version":3,"names":["React","InputContainer","inputStyle","Input","value","onChange","bgColor","color","borderColor","multiline","enable","lines","prestine","isPassword","rest","input","backgroundColor"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/Gallery/Components/.newFolder/CustomComponents/CustomFormInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextInput } from \"react-native\";\nimport { Colorable, InputField, onChangeInterface, Resizeable} from \"./shared/shared-interfaces\";\nimport InputContainer, { inputStyle } from \"./CustomElements/CustomInputContainer\";\n\ntype multilineT = {\n    enable: boolean;\n    lines?: number;\n}\n\ninterface inputProps extends Colorable, Resizeable, InputField, onChangeInterface {\n    multiline?: multilineT;\n    isPassword?: boolean;\n}\n\nconst Input = ({ value, onChange, bgColor = \"rgba(236,236,236, 0.9)\", color =\"grey\", borderColor = \"rgba(230,230,230, 1)\", \n                multiline = {enable: false ,lines :1}, prestine = true, isPassword = false, ...rest}: inputProps) => {\n    \n   \n   \n    return (\n        \n        <InputContainer color={color} {...rest}\n\n            child={\n                <TextInput \n                        onChangeText={onChange} value={value} \n                        style={{...inputStyle.input, backgroundColor: bgColor, borderColor: borderColor}} \n                        multiline={multiline.enable} numberOfLines={multiline.lines}\n                        secureTextEntry={isPassword}/>\n                } \n            prestine={prestine} value={\"\"} />\n    );\n}\n\nexport default Input;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;;AAGA,OAAOC,cAAP,IAAyBC,UAAzB;;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OACuG;EAAA,IADpGC,KACoG,QADpGA,KACoG;EAAA,IAD7FC,QAC6F,QAD7FA,QAC6F;EAAA,wBADnFC,OACmF;EAAA,IADnFA,OACmF,6BADzE,wBACyE;EAAA,sBAD/CC,KAC+C;EAAA,IAD/CA,KAC+C,2BADxC,MACwC;EAAA,4BADhCC,WACgC;EAAA,IADhCA,WACgC,iCADlB,sBACkB;EAAA,0BAArGC,SAAqG;EAAA,IAArGA,SAAqG,+BAAzF;IAACC,MAAM,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAAyF;EAAA,yBAA9DC,QAA8D;EAAA,IAA9DA,QAA8D,8BAAnD,IAAmD;EAAA,2BAA7CC,UAA6C;EAAA,IAA7CA,UAA6C,gCAAhC,KAAgC;EAAA,IAAtBC,IAAsB;;EAIjH,OAEI,KAAC,cAAD;IAAgB,KAAK,EAAEP;EAAvB,GAAkCO,IAAlC;IAEI,KAAK,EACD,KAAC,SAAD;MACQ,YAAY,EAAET,QADtB;MACgC,KAAK,EAAED,KADvC;MAEQ,KAAK,kCAAMF,UAAU,CAACa,KAAjB;QAAwBC,eAAe,EAAEV,OAAzC;QAAkDE,WAAW,EAAEA;MAA/D,EAFb;MAGQ,SAAS,EAAEC,SAAS,CAACC,MAH7B;MAGqC,aAAa,EAAED,SAAS,CAACE,KAH9D;MAIQ,eAAe,EAAEE;IAJzB,EAHR;IASI,QAAQ,EAAED,QATd;IASwB,KAAK,EAAE;EAT/B,GAFJ;AAaH,CAlBD;;AAoBA,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}