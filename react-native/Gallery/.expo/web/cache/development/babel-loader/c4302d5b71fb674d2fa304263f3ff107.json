{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Calendar from \"./Calendar\";\nimport AnimatedCrossView from \"./AnimatedCrossView\";\nimport DatePickerModalHeader from \"./DatePickerModalHeader\";\nimport DatePickerModalContentHeader from \"./DatePickerModalContentHeader\";\nimport CalendarEdit from \"./CalendarEdit\";\nimport DatePickerModalHeaderBackground from \"./DatePickerModalHeaderBackground\";\nexport function DatePickerModalContent(props) {\n  var _props$saveLabelDisab, _props$uppercase, _props$uppercase2;\n\n  var mode = props.mode,\n      onChange = props.onChange,\n      onConfirm = props.onConfirm,\n      onDismiss = props.onDismiss,\n      disableSafeTop = props.disableSafeTop,\n      disableWeekDays = props.disableWeekDays,\n      locale = props.locale,\n      validRange = props.validRange,\n      dateMode = props.dateMode,\n      startYear = props.startYear,\n      endYear = props.endYear;\n  var anyProps = props;\n\n  var _React$useState = React.useState({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates\n    });\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates]);\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      collapsed = _React$useState4[0],\n      setCollapsed = _React$useState4[1];\n\n  var onInnerChange = React.useCallback(function (params) {\n    onChange && onChange(params);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), params);\n    });\n  }, [onChange, setState]);\n  var onInnerConfirm = React.useCallback(function () {\n    if (mode === 'single') {\n      ;\n      onConfirm({\n        date: state.date\n      });\n    } else if (mode === 'range') {\n      ;\n      onConfirm({\n        startDate: state.startDate,\n        endDate: state.endDate\n      });\n    } else if (mode === 'multiple') {\n      ;\n      onConfirm({\n        dates: state.dates || []\n      });\n    }\n  }, [state, mode, onConfirm]);\n  var onToggleCollapse = React.useCallback(function () {\n    setCollapsed(function (prev) {\n      return !prev;\n    });\n  }, [setCollapsed]);\n  return React.createElement(React.Fragment, null, React.createElement(DatePickerModalHeaderBackground, null, React.createElement(DatePickerModalHeader, {\n    locale: locale,\n    onSave: onInnerConfirm,\n    onDismiss: onDismiss,\n    saveLabel: props.saveLabel,\n    saveLabelDisabled: (_props$saveLabelDisab = props.saveLabelDisabled) != null ? _props$saveLabelDisab : false,\n    uppercase: (_props$uppercase = props.uppercase) != null ? _props$uppercase : true,\n    disableSafeTop: disableSafeTop,\n    closeIcon: props.closeIcon\n  }), React.createElement(DatePickerModalContentHeader, {\n    state: state,\n    mode: mode,\n    collapsed: collapsed,\n    onToggle: onToggleCollapse,\n    headerSeparator: props.headerSeparator,\n    emptyLabel: props.emptyLabel,\n    label: props.label,\n    moreLabel: props.moreLabel,\n    startLabel: props.startLabel,\n    endLabel: props.endLabel,\n    uppercase: (_props$uppercase2 = props.uppercase) != null ? _props$uppercase2 : true,\n    locale: locale,\n    editIcon: props.editIcon,\n    calendarIcon: props.calendarIcon\n  })), React.createElement(AnimatedCrossView, {\n    collapsed: collapsed,\n    calendar: React.createElement(Calendar, {\n      locale: locale,\n      mode: mode,\n      startDate: state.startDate,\n      endDate: state.endDate,\n      date: state.date,\n      onChange: onInnerChange,\n      disableWeekDays: disableWeekDays,\n      dates: state.dates,\n      validRange: validRange,\n      dateMode: dateMode,\n      startYear: startYear,\n      endYear: endYear\n    }),\n    calendarEdit: React.createElement(CalendarEdit, {\n      mode: mode,\n      state: state,\n      label: props.label,\n      startLabel: props.startLabel,\n      endLabel: props.endLabel,\n      collapsed: collapsed,\n      onChange: onInnerChange,\n      validRange: validRange,\n      locale: locale\n    })\n  }));\n}\nexport default React.memo(DatePickerModalContent);","map":{"version":3,"mappings":"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","names":["React","Calendar","AnimatedCrossView","DatePickerModalHeader","DatePickerModalContentHeader","CalendarEdit","DatePickerModalHeaderBackground","DatePickerModalContent","props","mode","onChange","onConfirm","onDismiss","disableSafeTop","disableWeekDays","locale","validRange","dateMode","startYear","endYear","anyProps","useState","date","startDate","endDate","dates","state","setState","useEffect","collapsed","setCollapsed","onInnerChange","useCallback","params","prev","onInnerConfirm","onToggleCollapse","onSave","saveLabel","saveLabelDisabled","uppercase","closeIcon","onToggle","headerSeparator","emptyLabel","label","moreLabel","startLabel","endLabel","editIcon","calendarIcon","calendar","calendarEdit","memo"],"sources":["DatePickerModalContent.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport Calendar, {\n  BaseCalendarProps,\n  CalendarDate,\n  CalendarDates,\n  MultiChange,\n  MultiConfirm,\n  RangeChange,\n  SingleChange,\n} from './Calendar'\n\nimport AnimatedCrossView from './AnimatedCrossView'\n\nimport DatePickerModalHeader from './DatePickerModalHeader'\nimport DatePickerModalContentHeader, {\n  HeaderPickProps,\n} from './DatePickerModalContentHeader'\nimport CalendarEdit from './CalendarEdit'\nimport DatePickerModalHeaderBackground from './DatePickerModalHeaderBackground'\n\nexport type LocalState = {\n  startDate: CalendarDate\n  endDate: CalendarDate\n  date: CalendarDate\n  dates: CalendarDates\n}\n\ninterface DatePickerModalContentBaseProps {\n  inputFormat?: string\n  locale: string\n  onDismiss: () => any\n  disableSafeTop?: boolean\n  saveLabelDisabled?: boolean\n}\n\nexport interface DatePickerModalContentRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange?: RangeChange\n  onConfirm: RangeChange\n}\n\nexport interface DatePickerModalContentSingleProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'single'\n  date?: CalendarDate\n  onChange?: SingleChange\n  onConfirm: SingleChange\n  dateMode?: 'start' | 'end'\n}\n\nexport interface DatePickerModalContentMultiProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'multiple'\n  dates?: CalendarDates\n  onChange?: MultiChange\n  onConfirm: MultiConfirm\n}\n\nexport function DatePickerModalContent(\n  props:\n    | DatePickerModalContentRangeProps\n    | DatePickerModalContentSingleProps\n    | DatePickerModalContentMultiProps\n) {\n  const {\n    mode,\n    onChange,\n    onConfirm,\n    onDismiss,\n    disableSafeTop,\n    disableWeekDays,\n    locale,\n    validRange,\n    dateMode,\n    startYear,\n    endYear,\n  } = props\n\n  const anyProps = props as any\n\n  // use local state to add only onConfirm state changes\n  const [state, setState] = React.useState<LocalState>({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates,\n  })\n\n  // update local state if changed from outside or if modal is opened\n  React.useEffect(() => {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates,\n    })\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates])\n\n  const [collapsed, setCollapsed] = React.useState<boolean>(true)\n\n  const onInnerChange = React.useCallback(\n    (params: any) => {\n      onChange && onChange(params)\n      setState((prev) => ({ ...prev, ...params }))\n    },\n    [onChange, setState]\n  )\n\n  const onInnerConfirm = React.useCallback(() => {\n    if (mode === 'single') {\n      ;(onConfirm as DatePickerModalContentSingleProps['onConfirm'])({\n        date: state.date,\n      })\n    } else if (mode === 'range') {\n      ;(onConfirm as DatePickerModalContentRangeProps['onConfirm'])({\n        startDate: state.startDate,\n        endDate: state.endDate,\n      })\n    } else if (mode === 'multiple') {\n      ;(onConfirm as DatePickerModalContentMultiProps['onConfirm'])({\n        dates: state.dates || [],\n      })\n    }\n  }, [state, mode, onConfirm])\n\n  const onToggleCollapse = React.useCallback(() => {\n    setCollapsed((prev) => !prev)\n  }, [setCollapsed])\n\n  return (\n    <>\n      <DatePickerModalHeaderBackground>\n        <DatePickerModalHeader\n          locale={locale}\n          onSave={onInnerConfirm}\n          onDismiss={onDismiss}\n          saveLabel={props.saveLabel}\n          saveLabelDisabled={props.saveLabelDisabled ?? false}\n          uppercase={props.uppercase ?? true}\n          disableSafeTop={disableSafeTop}\n          closeIcon={props.closeIcon}\n        />\n        <DatePickerModalContentHeader\n          state={state}\n          mode={mode}\n          collapsed={collapsed}\n          onToggle={onToggleCollapse}\n          headerSeparator={props.headerSeparator}\n          emptyLabel={props.emptyLabel}\n          label={props.label}\n          moreLabel={props.moreLabel}\n          startLabel={props.startLabel}\n          endLabel={props.endLabel}\n          uppercase={props.uppercase ?? true}\n          locale={locale}\n          editIcon={props.editIcon}\n          calendarIcon={props.calendarIcon}\n        />\n      </DatePickerModalHeaderBackground>\n\n      <AnimatedCrossView\n        collapsed={collapsed}\n        calendar={\n          <Calendar\n            locale={locale}\n            mode={mode}\n            startDate={state.startDate}\n            endDate={state.endDate}\n            date={state.date}\n            onChange={onInnerChange}\n            disableWeekDays={disableWeekDays}\n            dates={state.dates}\n            validRange={validRange}\n            dateMode={dateMode}\n            startYear={startYear}\n            endYear={endYear}\n          />\n        }\n        calendarEdit={\n          <CalendarEdit\n            mode={mode}\n            state={state}\n            label={props.label}\n            startLabel={props.startLabel}\n            endLabel={props.endLabel}\n            collapsed={collapsed}\n            onChange={onInnerChange}\n            validRange={validRange}\n            locale={locale}\n          />\n        }\n      />\n    </>\n  )\n}\n\nexport default React.memo(DatePickerModalContent)\n"]},"metadata":{},"sourceType":"module"}