{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/classPrivateFieldLooseKey\";\n\nvar _DB_BASE_URL = _classPrivateFieldLooseKey(\"DB_BASE_URL\");\n\nexport var Repository = function () {\n  function Repository(repoName) {\n    _classCallCheck(this, Repository);\n\n    Object.defineProperty(this, _DB_BASE_URL, {\n      writable: true,\n      value: \"http://10.16.6.28:4000/api/\"\n    });\n    _classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL] += repoName;\n  }\n\n  _createClass(Repository, [{\n    key: \"findAll\",\n    value: function () {\n      var _findAll = _asyncToGenerator(function* () {\n        return this.handleRequest(_classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL]);\n      });\n\n      function findAll() {\n        return _findAll.apply(this, arguments);\n      }\n\n      return findAll;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = _asyncToGenerator(function* (id) {\n        return this.handleRequest(_classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL] + \"/\" + id);\n      });\n\n      function findById(_x) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(function* (entety) {\n        return this.handleRequest(_classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL], {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(entety)\n        });\n      });\n\n      function create(_x2) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator(function* (entety) {\n        return this.handleRequest(_classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL] + \"/\" + entety.id, {\n          method: \"PUT\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify(entety)\n        });\n      });\n\n      function update(_x3) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(function* (id) {\n        return this.handleRequest(_classPrivateFieldLooseBase(this, _DB_BASE_URL)[_DB_BASE_URL] + \"/\" + id, {\n          method: 'DELETE'\n        });\n      });\n\n      function _delete(_x4) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"handleRequest\",\n    value: function () {\n      var _handleRequest = _asyncToGenerator(function* (url, options) {\n        try {\n          var postsResp = yield fetch(url, options);\n\n          if (postsResp.status >= 400) {\n            return Promise.reject(postsResp.body);\n          }\n\n          return postsResp.json();\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      });\n\n      function handleRequest(_x5, _x6) {\n        return _handleRequest.apply(this, arguments);\n      }\n\n      return handleRequest;\n    }()\n  }]);\n\n  return Repository;\n}();\nexport var MovieRepo = new Repository(\"Movies\");\nexport var TvShowRepo = new Repository(\"TvShows\");\nexport var WatchedRepo = new Repository(\"Watched\");\nexport var GenreRepo = new Repository(\"Genre\");\nexport var ActorsRepo = new Repository(\"Actors\");","map":{"version":3,"names":["Repository","repoName","handleRequest","id","entety","method","headers","body","JSON","stringify","url","options","postsResp","fetch","status","Promise","reject","json","err","MovieRepo","TvShowRepo","WatchedRepo","GenreRepo","ActorsRepo"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/workspace/Cheetsheet/dao/repository.ts"],"sourcesContent":["import Actors from \"../modules/actors\";\nimport Genre from \"../modules/genre\";\nimport { Movie, TvShow, Watched } from \"../modules/movie-show\";\n\nexport type Identifiable<K> = { id: K | undefined };\n\nexport interface RepositoryInt<K, V extends Identifiable<K>> {\n  findAll(): Promise<V[]> | undefined;\n  findById(id: K): Promise<V> | undefined;\n  update(entety: V): Promise<V> | undefined;\n  create(entety: V): Promise<V>;\n  delete(id: K): Promise<V> | undefined;\n}\n\nexport class Repository<K, V extends Identifiable<K>> implements RepositoryInt<K, V>{\n  #DB_BASE_URL = `http://10.16.6.28:4000/api/`;\n  constructor(repoName: string) {\n    this.#DB_BASE_URL += repoName;\n  }\n\n  async findAll(): Promise<V[]> {\n    return this.handleRequest(this.#DB_BASE_URL);\n  }\n  async findById(id: K): Promise<V> {\n    return this.handleRequest(`${this.#DB_BASE_URL}/${id}`);\n  }\n  async create(entety: V): Promise<V> {\n    return this.handleRequest(this.#DB_BASE_URL, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(entety)\n    });\n  }\n\n  async update(entety: V): Promise<V> {\n    return this.handleRequest(`${this.#DB_BASE_URL}/${entety.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(entety),\n    });\n  }\n\n\n  async delete(id: K): Promise<V> {\n    return this.handleRequest(`${this.#DB_BASE_URL}/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n\n  private async handleRequest(url: string, options?: RequestInit) {\n    try {\n      const postsResp = await fetch(url, options);\n      if (postsResp.status >= 400) {\n        return Promise.reject(postsResp.body);\n      }\n      return postsResp.json();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n}\n\nexport const MovieRepo = new Repository<number, Movie>(\"Movies\");\nexport const TvShowRepo = new Repository<number, TvShow>(\"TvShows\");\nexport const WatchedRepo = new Repository<number, Watched>(\"Watched\");\nexport const GenreRepo = new Repository<number, Genre>(\"Genre\");\nexport const ActorsRepo = new Repository<number, Actors>(\"Actors\");"],"mappings":";;;;;;;;AAcA,WAAaA,UAAb;EAEE,oBAAYC,QAAZ,EAA8B;IAAA;;IAAA;MAAA;MAAA;IAAA;IAC5B,iEAAqBA,QAArB;EACD;;EAJH;IAAA;IAAA;MAAA,iCAME,aAA8B;QAC5B,OAAO,KAAKC,aAAL,6BAAmB,IAAnB,8BAAP;MACD,CARH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,kCASE,WAAeC,EAAf,EAAkC;QAChC,OAAO,KAAKD,aAAL,6BAAsB,IAAtB,sCAA2CC,EAA3C,CAAP;MACD,CAXH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gCAYE,WAAaC,MAAb,EAAoC;QAClC,OAAO,KAAKF,aAAL,6BAAmB,IAAnB,+BAAsC;UAC3CG,MAAM,EAAE,MADmC;UAE3CC,OAAO,EAAE;YACP,gBAAgB;UADT,CAFkC;UAK3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;QALqC,CAAtC,CAAP;MAOD,CApBH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gCAsBE,WAAaA,MAAb,EAAoC;QAClC,OAAO,KAAKF,aAAL,6BAAsB,IAAtB,sCAA2CE,MAAM,CAACD,EAAlD,EAAwD;UAC7DE,MAAM,EAAE,KADqD;UAE7DC,OAAO,EAAE;YACP,gBAAgB;UADT,CAFoD;UAK7DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;QALuD,CAAxD,CAAP;MAOD,CA9BH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,iCAiCE,WAAaD,EAAb,EAAgC;QAC9B,OAAO,KAAKD,aAAL,6BAAsB,IAAtB,sCAA2CC,EAA3C,EAAiD;UACtDE,MAAM,EAAE;QAD8C,CAAjD,CAAP;MAGD,CArCH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,uCAwCE,WAA4BK,GAA5B,EAAyCC,OAAzC,EAAgE;QAC9D,IAAI;UACF,IAAMC,SAAS,SAASC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA7B;;UACA,IAAIC,SAAS,CAACE,MAAV,IAAoB,GAAxB,EAA6B;YAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeJ,SAAS,CAACL,IAAzB,CAAP;UACD;;UACD,OAAOK,SAAS,CAACK,IAAV,EAAP;QACD,CAND,CAME,OAAOC,GAAP,EAAY;UACZ,OAAOH,OAAO,CAACC,MAAR,CAAeE,GAAf,CAAP;QACD;MACF,CAlDH;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;;EAAA;AAAA;AAsDA,OAAO,IAAMC,SAAS,GAAG,IAAInB,UAAJ,CAA8B,QAA9B,CAAlB;AACP,OAAO,IAAMoB,UAAU,GAAG,IAAIpB,UAAJ,CAA+B,SAA/B,CAAnB;AACP,OAAO,IAAMqB,WAAW,GAAG,IAAIrB,UAAJ,CAAgC,SAAhC,CAApB;AACP,OAAO,IAAMsB,SAAS,GAAG,IAAItB,UAAJ,CAA8B,OAA9B,CAAlB;AACP,OAAO,IAAMuB,UAAU,GAAG,IAAIvB,UAAJ,CAA+B,QAA/B,CAAnB"},"metadata":{},"sourceType":"module"}