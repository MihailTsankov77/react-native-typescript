{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"animationType\", \"disableStatusBar\", \"disableStatusBarPadding\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useTheme } from 'react-native-paper';\nimport DatePickerModalContent from \"./DatePickerModalContent\";\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from \"../utils\";\nexport function DatePickerModal(props) {\n  var theme = useTheme();\n  var dimensions = useWindowDimensions();\n\n  var visible = props.visible,\n      animationType = props.animationType,\n      disableStatusBar = props.disableStatusBar,\n      disableStatusBarPadding = props.disableStatusBarPadding,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var animationTypeCalculated = animationType || Platform.select({\n    web: 'none',\n    default: 'slide'\n  });\n  var isLight = useHeaderColorIsLight();\n  var headerBackgroundColor = useHeaderBackgroundColor();\n  return React.createElement(View, {\n    style: [StyleSheet.absoluteFill],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Modal, {\n    animationType: animationTypeCalculated,\n    transparent: true,\n    visible: visible,\n    onRequestClose: rest.onDismiss,\n    presentationStyle: \"overFullScreen\",\n    supportedOrientations: supportedOrientations,\n    statusBarTranslucent: true\n  }, React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: rest.onDismiss\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.modalBackground, {\n      backgroundColor: theme.colors.backdrop\n    }]\n  })), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.modalRoot],\n    pointerEvents: \"box-none\"\n  }, React.createElement(View, {\n    style: [styles.modalContent, {\n      backgroundColor: theme.colors.surface\n    }, dimensions.width > 650 ? styles.modalContentBig : null]\n  }, disableStatusBar ? null : React.createElement(StatusBar, {\n    translucent: true,\n    barStyle: isLight ? 'dark-content' : 'light-content'\n  }), disableStatusBarPadding ? null : React.createElement(View, {\n    style: [{\n      height: StatusBar.currentHeight,\n      backgroundColor: headerBackgroundColor\n    }]\n  }), React.createElement(DatePickerModalContent, _extends({}, rest, {\n    disableSafeTop: disableStatusBar\n  })))))));\n}\nvar supportedOrientations = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];\nvar styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  modalBackground: {\n    flex: 1\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%'\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden'\n  }\n});\nexport default React.memo(DatePickerModal);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAWA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,sBAAP;AAKA,SAASC,wBAAT,EAAmCC,qBAAnC;AAqBA,OAAO,SAASC,eAAT,CACLC,KADK,EAKL;EACA,IAAMC,KAAK,GAAGN,QAAQ,EAAtB;EACA,IAAMO,UAAU,GAAGC,mBAAmB,EAAtC;;EACA,IACEC,OADF,GAMIJ,KANJ,CACEI,OADF;EAAA,IAEEC,aAFF,GAMIL,KANJ,CAEEK,aAFF;EAAA,IAGEC,gBAHF,GAMIN,KANJ,CAGEM,gBAHF;EAAA,IAIEC,uBAJF,GAMIP,KANJ,CAIEO,uBAJF;EAAA,IAKKC,IALL,4BAMIR,KANJ;;EAOA,IAAMS,uBAAuB,GAC3BJ,aAAa,IACbK,QAAQ,CAACC,MAATD,CAAgB;IACdE,GAAG,EAAE,MADS;IAEdC,OAAO,EAAE;EAFK,CAAhBH,CAFF;EAOA,IAAMI,OAAO,GAAGhB,qBAAqB,EAArC;EACA,IAAMiB,qBAAqB,GAAGlB,wBAAwB,EAAtD;EAEA,OACEH,oBAACsB,IAAD;IAAMC,KAAK,EAAE,CAACC,UAAU,CAACC,YAAZ,CAAb;IAAwCC,aAAa,EAAC;EAAtD,GACE1B,oBAAC2B,KAAD;IACEhB,aAAa,EAAEI,uBADjB;IAEEa,WAAW,EAAE,IAFf;IAGElB,OAAO,EAAEA,OAHX;IAIEmB,cAAc,EAAEf,IAAI,CAACgB,SAJvB;IAKEC,iBAAiB,EAAC,gBALpB;IAMEC,qBAAqB,EAAEA,qBANzB;IAQEC,oBAAoB,EAAE;EARxB,GAUEjC,0CACEA,oBAACkC,wBAAD;IAA0BC,OAAO,EAAErB,IAAI,CAACgB;EAAxC,GACE9B,oBAACsB,IAAD;IACEC,KAAK,EAAE,CACLC,UAAU,CAACC,YADN,EAELW,MAAM,CAACC,eAFF,EAGL;MAAEC,eAAe,EAAE/B,KAAK,CAACgC,MAANhC,CAAaiC;IAAhC,CAHK;EADT,EADF,CADF,EAUExC,oBAACsB,IAAD;IACEC,KAAK,EAAE,CAACC,UAAU,CAACC,YAAZ,EAA0BW,MAAM,CAACK,SAAjC,CADT;IAEEf,aAAa,EAAC;EAFhB,GAIE1B,oBAACsB,IAAD;IACEC,KAAK,EAAE,CACLa,MAAM,CAACM,YADF,EAEL;MAAEJ,eAAe,EAAE/B,KAAK,CAACgC,MAANhC,CAAaoC;IAAhC,CAFK,EAGLnC,UAAU,CAACoC,KAAXpC,GAAmB,GAAnBA,GAAyB4B,MAAM,CAACS,eAAhCrC,GAAkD,IAH7C;EADT,GAOGI,gBAAgB,GAAG,IAAH,GACfZ,oBAAC8C,SAAD;IACEC,WAAW,EAAE,IADf;IAEEC,QAAQ,EAAE5B,OAAO,GAAG,cAAH,GAAoB;EAFvC,EARJ,EAaGP,uBAAuB,GAAG,IAAH,GACtBb,oBAACsB,IAAD;IACEC,KAAK,EAAE,CACL;MACE0B,MAAM,EAAEH,SAAS,CAACI,aADpB;MAEEZ,eAAe,EAAEjB;IAFnB,CADK;EADT,EAdJ,EAuBErB,oBAACE,sBAAD,eACMY,IADN;IAEEqC,cAAc,EAAEvC;EAFlB,GAvBF,CAJF,CAVF,CAVF,CADF,CADF;AA2DD;AACD,IAAMoB,qBAA0B,GAAG,CACjC,UADiC,EAEjC,sBAFiC,EAGjC,WAHiC,EAIjC,gBAJiC,EAKjC,iBALiC,CAAnC;AAQA,IAAMI,MAAM,GAAGZ,UAAU,CAAC4B,MAAX5B,CAAkB;EAC/BiB,SAAS,EAAE;IACTY,cAAc,EAAE,QADP;IAETC,UAAU,EAAE,QAFH;IAGTC,IAAI,EAAE;EAHG,CADoB;EAM/BlB,eAAe,EAAE;IACfkB,IAAI,EAAE;EADS,CANc;EAS/Bb,YAAY,EAAE;IACZa,IAAI,EAAE,CADM;IAEZX,KAAK,EAAE;EAFK,CATiB;EAa/BC,eAAe,EAAE;IACfW,QAAQ,EAAE,GADK;IAEfC,SAAS,EAAE,GAFI;IAGfC,YAAY,EAAE,EAHC;IAIfd,KAAK,EAAE,MAJQ;IAKfe,QAAQ,EAAE;EALK;AAbc,CAAlBnC,CAAf;AAsBA,eAAexB,KAAK,CAAC4D,IAAN5D,CAAWK,eAAXL,CAAf","names":["React","useTheme","DatePickerModalContent","useHeaderBackgroundColor","useHeaderColorIsLight","DatePickerModal","props","theme","dimensions","useWindowDimensions","visible","animationType","disableStatusBar","disableStatusBarPadding","rest","animationTypeCalculated","Platform","select","web","default","isLight","headerBackgroundColor","View","style","StyleSheet","absoluteFill","pointerEvents","Modal","transparent","onRequestClose","onDismiss","presentationStyle","supportedOrientations","statusBarTranslucent","TouchableWithoutFeedback","onPress","styles","modalBackground","backgroundColor","colors","backdrop","modalRoot","modalContent","surface","width","modalContentBig","StatusBar","translucent","barStyle","height","currentHeight","disableSafeTop","create","justifyContent","alignItems","flex","maxWidth","maxHeight","borderRadius","overflow","memo"],"sources":["DatePickerModal.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  View,\n  Platform,\n  StatusBar,\n} from 'react-native'\n\nimport { useTheme } from 'react-native-paper'\nimport DatePickerModalContent, {\n  DatePickerModalContentMultiProps,\n  DatePickerModalContentRangeProps,\n  DatePickerModalContentSingleProps,\n} from './DatePickerModalContent'\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from '../utils'\n\ninterface DatePickerModalProps {\n  visible: boolean\n  animationType?: 'slide' | 'fade' | 'none'\n  disableStatusBar?: boolean\n  disableStatusBarPadding?: boolean\n}\n\nexport interface DatePickerModalSingleProps\n  extends DatePickerModalContentSingleProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalMultiProps\n  extends DatePickerModalContentMultiProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalRangeProps\n  extends DatePickerModalContentRangeProps,\n    DatePickerModalProps {}\n\nexport function DatePickerModal(\n  props:\n    | DatePickerModalRangeProps\n    | DatePickerModalSingleProps\n    | DatePickerModalMultiProps\n) {\n  const theme = useTheme()\n  const dimensions = useWindowDimensions()\n  const {\n    visible,\n    animationType,\n    disableStatusBar,\n    disableStatusBarPadding,\n    ...rest\n  } = props\n  const animationTypeCalculated =\n    animationType ||\n    Platform.select({\n      web: 'none',\n      default: 'slide',\n    })\n\n  const isLight = useHeaderColorIsLight()\n  const headerBackgroundColor = useHeaderBackgroundColor()\n\n  return (\n    <View style={[StyleSheet.absoluteFill]} pointerEvents=\"box-none\">\n      <Modal\n        animationType={animationTypeCalculated}\n        transparent={true}\n        visible={visible}\n        onRequestClose={rest.onDismiss}\n        presentationStyle=\"overFullScreen\"\n        supportedOrientations={supportedOrientations}\n        //@ts-ignore\n        statusBarTranslucent={true}\n      >\n        <>\n          <TouchableWithoutFeedback onPress={rest.onDismiss}>\n            <View\n              style={[\n                StyleSheet.absoluteFill,\n                styles.modalBackground,\n                { backgroundColor: theme.colors.backdrop },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n          <View\n            style={[StyleSheet.absoluteFill, styles.modalRoot]}\n            pointerEvents=\"box-none\"\n          >\n            <View\n              style={[\n                styles.modalContent,\n                { backgroundColor: theme.colors.surface },\n                dimensions.width > 650 ? styles.modalContentBig : null,\n              ]}\n            >\n              {disableStatusBar ? null : (\n                <StatusBar\n                  translucent={true}\n                  barStyle={isLight ? 'dark-content' : 'light-content'}\n                />\n              )}\n              {disableStatusBarPadding ? null : (\n                <View\n                  style={[\n                    {\n                      height: StatusBar.currentHeight,\n                      backgroundColor: headerBackgroundColor,\n                    },\n                  ]}\n                />\n              )}\n              <DatePickerModalContent\n                {...rest}\n                disableSafeTop={disableStatusBar}\n              />\n            </View>\n          </View>\n        </>\n      </Modal>\n    </View>\n  )\n}\nconst supportedOrientations: any = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n]\n\nconst styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  modalBackground: {\n    flex: 1,\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%',\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden',\n  },\n})\n\nexport default React.memo(DatePickerModal)\n"]},"metadata":{},"sourceType":"module"}