{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from 'react-native-paper';\nexport default function AnimatedCrossView(_ref) {\n  var collapsed = _ref.collapsed,\n      calendar = _ref.calendar,\n      calendarEdit = _ref.calendarEdit;\n  var theme = useTheme();\n  var calendarOpacity = React.useRef(new Animated.Value(collapsed ? 1 : 0));\n  React.useEffect(function () {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true\n    }).start();\n  }, [collapsed]);\n  return React.createElement(View, {\n    style: styles.root\n  }, React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'auto' : 'none',\n    style: [styles.calendar, {\n      opacity: calendarOpacity.current,\n      transform: [{\n        scaleY: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.85, 1]\n        })\n      }, {\n        scaleX: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.95, 1]\n        })\n      }]\n    }]\n  }, calendar), React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'none' : 'auto',\n    style: [styles.calendarEdit, {\n      backgroundColor: theme.colors.surface,\n      opacity: calendarOpacity.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }),\n      transform: [{\n        scale: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.95]\n        })\n      }]\n    }]\n  }, calendarEdit));\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  },\n  calendarEdit: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  },\n  calendar: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,eAAe,SAASC,iBAAT,OAUZ;EAAA,IARDC,SAQC,QARDA,SAQC;EAAA,IAPDC,QAOC,QAPDA,QAOC;EAAA,IANDC,YAMC,QANDA,YAMC;EACD,IAAMC,KAAK,GAAGL,QAAQ,EAAtB;EACA,IAAMM,eAAe,GAAGP,KAAK,CAACQ,MAANR,CACtB,IAAIS,QAAQ,CAACC,KAAb,CAAmBP,SAAS,GAAG,CAAH,GAAO,CAAnC,CADsBH,CAAxB;EAGAA,KAAK,CAACW,SAANX,CAAgB,YAAM;IAEpBS,QAAQ,CAACG,MAATH,CAAgBF,eAAe,CAACM,OAAhCJ,EAAyC;MACvCK,OAAO,EAAEX,SAAS,GAAG,CAAH,GAAO,CADc;MAEvCY,QAAQ,EAAE,GAF6B;MAGvCC,eAAe,EAAE;IAHsB,CAAzCP,EAIGQ,KAJHR;EAFF,GAQG,CAACN,SAAD,CARHH;EAUA,OACEA,oBAACkB,IAAD;IAAMC,KAAK,EAAEC,MAAM,CAACC;EAApB,GACErB,oBAACS,QAAD,CAAUS,IAAV;IACEI,aAAa,EAAEnB,SAAS,GAAG,MAAH,GAAY,MADtC;IAEEgB,KAAK,EAAE,CACLC,MAAM,CAAChB,QADF,EAEL;MACEmB,OAAO,EAAEhB,eAAe,CAACM,OAD3B;MAEEW,SAAS,EAAE,CACT;QACEC,MAAM,EAAElB,eAAe,CAACM,OAAhBN,CAAwBmB,WAAxBnB,CAAoC;UAC1CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8B;UAE1CC,WAAW,EAAE,CAAC,IAAD,EAAO,CAAP;QAF6B,CAApCrB;MADV,CADS,EAOT;QACEsB,MAAM,EAAEtB,eAAe,CAACM,OAAhBN,CAAwBmB,WAAxBnB,CAAoC;UAC1CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8B;UAE1CC,WAAW,EAAE,CAAC,IAAD,EAAO,CAAP;QAF6B,CAApCrB;MADV,CAPS;IAFb,CAFK;EAFT,GAuBGH,QAvBH,CADF,EA0BEJ,oBAACS,QAAD,CAAUS,IAAV;IACEI,aAAa,EAAEnB,SAAS,GAAG,MAAH,GAAY,MADtC;IAEEgB,KAAK,EAAE,CACLC,MAAM,CAACf,YADF,EAEL;MACEyB,eAAe,EAAExB,KAAK,CAACyB,MAANzB,CAAa0B,OADhC;MAEET,OAAO,EAAEhB,eAAe,CAACM,OAAhBN,CAAwBmB,WAAxBnB,CAAoC;QAC3CoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD+B;QAE3CC,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;MAF8B,CAApCrB,CAFX;MAMEiB,SAAS,EAAE,CACT;QACES,KAAK,EAAE1B,eAAe,CAACM,OAAhBN,CAAwBmB,WAAxBnB,CAAoC;UACzCoB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6B;UAEzCC,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ;QAF4B,CAApCrB;MADT,CADS;IANb,CAFK;EAFT,GAqBGF,YArBH,CA1BF,CADF;AAoDD;AAED,IAAMe,MAAM,GAAGc,UAAU,CAACC,MAAXD,CAAkB;EAC/Bb,IAAI,EAAE;IAAEe,IAAI,EAAE;EAAR,CADyB;EAE/B/B,YAAY,EAAE;IACZgC,QAAQ,EAAE,UADE;IAGZC,IAAI,EAAE,CAHM;IAIZC,KAAK,EAAE;EAJK,CAFiB;EAQ/BnC,QAAQ,EAAE;IACRgC,IAAI,EAAE;EADE;AARqB,CAAlBF,CAAf","names":["React","useTheme","AnimatedCrossView","collapsed","calendar","calendarEdit","theme","calendarOpacity","useRef","Animated","Value","useEffect","timing","current","toValue","duration","useNativeDriver","start","View","style","styles","root","pointerEvents","opacity","transform","scaleY","interpolate","inputRange","outputRange","scaleX","backgroundColor","colors","surface","scale","StyleSheet","create","flex","position","left","right"],"sources":["AnimatedCrossView.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nexport default function AnimatedCrossView({\n  // visible,\n  collapsed,\n  calendar,\n  calendarEdit,\n}: {\n  calendar: any\n  calendarEdit: any\n  // visible: boolean\n  collapsed: boolean\n}) {\n  const theme = useTheme()\n  const calendarOpacity = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    // if (visible) {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n    // }\n  }, [collapsed])\n\n  return (\n    <View style={styles.root}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          styles.calendar,\n          {\n            opacity: calendarOpacity.current,\n            transform: [\n              {\n                scaleY: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.85, 1],\n                }),\n              },\n              {\n                scaleX: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendar}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          styles.calendarEdit,\n          {\n            backgroundColor: theme.colors.surface,\n            opacity: calendarOpacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendarEdit}\n      </Animated.View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  calendarEdit: {\n    position: 'absolute',\n\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    flex: 1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}