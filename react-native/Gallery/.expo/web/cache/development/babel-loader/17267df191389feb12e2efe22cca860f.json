{"ast":null,"code":"import * as React from 'react';\nimport { overlay, useTheme } from 'react-native-paper';\nimport Color from 'color';\nexport function useLatest(value) {\n  var ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n}\nexport function useHeaderBackgroundColor() {\n  var theme = useTheme();\n  return theme.dark && theme.mode === 'adaptive' ? overlay(4, theme.colors.surface) : theme.colors.primary;\n}\nexport function useHeaderColorIsLight() {\n  var theme = useTheme();\n  var background = theme.dark && theme.mode === 'adaptive' ? theme.colors.surface : theme.colors.primary;\n  return Color(background).isLight();\n}\nexport function useHeaderTextColor() {\n  var isLight = useHeaderColorIsLight();\n  return !isLight ? '#fff' : '#000';\n}\nexport function useTextColorOnPrimary() {\n  var theme = useTheme();\n  var isDark = !Color(theme.colors.primary).isLight();\n  return isDark ? '#fff' : '#000';\n}\nexport function range(start, end) {\n  return Array(end - start + 1).fill(null).map(function (_, i) {\n    return start + i;\n  });\n}\nexport function lightenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness + (100 - lightness) * ratio);\n}\nexport function darkenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness - lightness * ratio);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,oBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,CAAsBC,KAAtB,EAAgC;EACrC,IAAMC,GAAG,GAAGN,KAAK,CAACO,MAANP,CAAaK,KAAbL,CAAZ;EACAM,GAAG,CAACE,OAAJF,GAAcD,KAAdC;EACA,OAAOA,GAAP;AACD;AAED,OAAO,SAASG,wBAAT,GAAoC;EACzC,IAAMC,KAAK,GAAGR,QAAQ,EAAtB;EACA,OAAOQ,KAAK,CAACC,IAAND,IAAcA,KAAK,CAACE,IAANF,KAAe,UAA7BA,GACHT,OAAO,CAAC,CAAD,EAAIS,KAAK,CAACG,MAANH,CAAaI,OAAjB,CADJJ,GAEHA,KAAK,CAACG,MAANH,CAAaK,OAFjB;AAGD;AAED,OAAO,SAASC,qBAAT,GAAiC;EACtC,IAAMN,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMe,UAAU,GACdP,KAAK,CAACC,IAAND,IAAcA,KAAK,CAACE,IAANF,KAAe,UAA7BA,GACIA,KAAK,CAACG,MAANH,CAAaI,OADjBJ,GAEIA,KAAK,CAACG,MAANH,CAAaK,OAHnB;EAIA,OAAOZ,KAAK,CAACc,UAAD,CAALd,CAAkBe,OAAlBf,EAAP;AACD;AAED,OAAO,SAASgB,kBAAT,GAA8B;EACnC,IAAMD,OAAO,GAAGF,qBAAqB,EAArC;EACA,OAAO,CAACE,OAAD,GAAW,MAAX,GAAoB,MAA3B;AACD;AAED,OAAO,SAASE,qBAAT,GAAiC;EACtC,IAAMV,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMmB,MAAM,GAAG,CAAClB,KAAK,CAACO,KAAK,CAACG,MAANH,CAAaK,OAAd,CAALZ,CAA4Be,OAA5Bf,EAAhB;EACA,OAAOkB,MAAM,GAAG,MAAH,GAAY,MAAzB;AACD;AAED,OAAO,SAASC,KAAT,CAAeC,KAAf,EAA8BC,GAA9B,EAA2C;EAChD,OAAOC,KAAK,CAACD,GAAG,GAAGD,KAANC,GAAc,CAAf,CAALC,CACJC,IADID,CACC,IADDA,EAEJE,GAFIF,CAEA,UAACG,CAAD,EAAIC,CAAJ;IAAA,OAAUN,KAAK,GAAGM,CAAlB;EAAA,CAFAJ,CAAP;AAGD;AAED,OAAO,SAASK,SAAT,CAAmBC,KAAnB,EAAiCC,KAAjC,EAAgD;EACrD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAANF,EAAlB;EACA,OAAOA,KAAK,CAACE,SAANF,CAAgBE,SAAS,GAAG,CAAC,MAAMA,SAAP,IAAoBD,KAAhDD,CAAP;AACD;AAED,OAAO,SAASG,QAAT,CAAkBH,KAAlB,EAAgCC,KAAhC,EAA+C;EACpD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAANF,EAAlB;EACA,OAAOA,KAAK,CAACE,SAANF,CAAgBE,SAAS,GAAGA,SAAS,GAAGD,KAAxCD,CAAP;AACD","names":["React","overlay","useTheme","Color","useLatest","value","ref","useRef","current","useHeaderBackgroundColor","theme","dark","mode","colors","surface","primary","useHeaderColorIsLight","background","isLight","useHeaderTextColor","useTextColorOnPrimary","isDark","range","start","end","Array","fill","map","_","i","lightenBy","color","ratio","lightness","darkenBy"],"sources":["utils.ts"],"sourcesContent":["import * as React from 'react'\nimport { overlay, useTheme } from 'react-native-paper'\nimport Color from 'color'\n\nexport function useLatest<T>(value: T) {\n  const ref = React.useRef(value)\n  ref.current = value\n  return ref\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const isLight = useHeaderColorIsLight()\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n\nexport function lightenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness + (100 - lightness) * ratio)\n}\n\nexport function darkenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness - lightness * ratio)\n}\n"]},"metadata":{},"sourceType":"module"}