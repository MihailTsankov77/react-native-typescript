{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActorCard from \"./Components/ActorCard\";\nimport AddActorsForm from \"./Components/addActorsForm\";\nimport AddGenreForm from \"./Components/addGenreForm\";\nimport AddMovieForm from \"./Components/addMovieForm\";\nimport List from \"./CustomComponents/CustomCardList\";\nimport GenreCard from \"./Components/GenreCard\";\nimport { ActorsRepo, GenreRepo, MovieRepo, TvShowRepo, WatchedRepo } from \"./dao/repository\";\nimport { isTvShow } from \"./modules/movie-show\";\nimport MovieCard from \"./Components/MovieCard\";\nimport TvShowCard from \"./Components/TvShowCard\";\nimport Navbar from \"./CustomComponents/CustomNavbar\";\nimport Btn from \"./CustomComponents/CustomButton\";\nimport AddWatchedForm from \"./Components/AddWatchedForm\";\nimport WatchedCard from \"./Components/WatchedCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Views;\n\n(function (Views) {\n  Views[Views[\"addWatch\"] = 0] = \"addWatch\";\n  Views[Views[\"showWatch\"] = 1] = \"showWatch\";\n  Views[Views[\"Actors\"] = 2] = \"Actors\";\n  Views[Views[\"Genres\"] = 3] = \"Genres\";\n  Views[Views[\"showActor\"] = 4] = \"showActor\";\n  Views[Views[\"addWatched\"] = 5] = \"addWatched\";\n  Views[Views[\"Watched\"] = 6] = \"Watched\";\n})(Views || (Views = {}));\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      movies: [],\n      tvShows: [],\n      actors: [],\n      genres: [],\n      watched: [],\n      editedWatch: undefined,\n      editedActor: undefined,\n      editedGenre: undefined,\n      views: Views.showWatch,\n      isScrolled: false,\n      showActor: undefined,\n      showWatch: undefined\n    };\n\n    _this.handleCreateWatch = function () {\n      var _ref = _asyncToGenerator(function* (watch) {\n        if (_this.state.editedWatch) {\n          if (!isTvShow(watch)) {\n            var updated = yield MovieRepo.update(watch);\n\n            _this.setState(function (_ref2) {\n              var movies = _ref2.movies;\n              return {\n                movies: movies.map(function (movie) {\n                  return movie.id === updated.id ? updated : movie;\n                })\n              };\n            });\n          } else {\n            var _updated = yield TvShowRepo.update(watch);\n\n            _this.setState(function (_ref3) {\n              var tvShows = _ref3.tvShows;\n              return {\n                tvShows: tvShows.map(function (tvShow) {\n                  return tvShow.id === _updated.id ? _updated : tvShow;\n                })\n              };\n            });\n          }\n\n          _this.setState({\n            editedWatch: undefined\n          });\n        } else {\n          if (!isTvShow(watch)) {\n            var createdMovie = yield MovieRepo.create(watch);\n\n            _this.setState(function (_ref4) {\n              var movies = _ref4.movies;\n              return {\n                movies: movies.concat(createdMovie)\n              };\n            });\n          } else {\n            var createdTvShow = yield TvShowRepo.create(watch);\n\n            _this.setState(function (_ref5) {\n              var tvShows = _ref5.tvShows;\n              return {\n                tvShows: tvShows.concat(createdTvShow)\n              };\n            });\n          }\n        }\n\n        _this.setState({\n          views: Views.showWatch\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteWatch = function () {\n      var _ref6 = _asyncToGenerator(function* (watch) {\n        if (!isTvShow(watch)) {\n          yield MovieRepo.delete(watch.id);\n\n          _this.setState(function (_ref7) {\n            var movies = _ref7.movies;\n            return {\n              movies: movies.filter(function (elem) {\n                return elem.id !== watch.id;\n              })\n            };\n          });\n        } else {\n          yield TvShowRepo.delete(watch.id);\n\n          _this.setState(function (_ref8) {\n            var tvShows = _ref8.tvShows;\n            return {\n              tvShows: tvShows.filter(function (elem) {\n                return elem.id !== watch.id;\n              })\n            };\n          });\n        }\n      });\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCreateActor = function () {\n      var _ref9 = _asyncToGenerator(function* (actor) {\n        if (_this.state.editedActor) {\n          var updated = yield ActorsRepo.update(actor);\n\n          _this.setState(function (_ref10) {\n            var actors = _ref10.actors;\n            return {\n              actors: actors.map(function (act) {\n                return act.id === updated.id ? updated : act;\n              })\n            };\n          });\n\n          _this.setState({\n            editedActor: undefined\n          });\n        } else {\n          var newActor = yield ActorsRepo.create(actor);\n\n          _this.setState(function (_ref11) {\n            var actors = _ref11.actors;\n            return {\n              actors: actors.concat(newActor)\n            };\n          });\n        }\n      });\n\n      return function (_x3) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteActor = function () {\n      var _ref12 = _asyncToGenerator(function* (actor) {\n        yield ActorsRepo.delete(actor.id);\n\n        _this.setState(function (_ref13) {\n          var actors = _ref13.actors;\n          return {\n            actors: actors.filter(function (elem) {\n              return elem.id !== actor.id;\n            })\n          };\n        });\n      });\n\n      return function (_x4) {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCreateGenre = function () {\n      var _ref14 = _asyncToGenerator(function* (genre) {\n        if (_this.state.editedGenre) {\n          var updated = yield GenreRepo.update(genre);\n\n          _this.setState(function (_ref15) {\n            var genres = _ref15.genres;\n            return {\n              genres: genres.map(function (gen) {\n                return gen.id === updated.id ? updated : gen;\n              })\n            };\n          });\n\n          _this.setState({\n            editedGenre: undefined\n          });\n        } else {\n          var newGenre = yield GenreRepo.create(genre);\n\n          _this.setState(function (_ref16) {\n            var genres = _ref16.genres;\n            return {\n              genres: genres.concat(newGenre)\n            };\n          });\n        }\n      });\n\n      return function (_x5) {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteGenre = function () {\n      var _ref17 = _asyncToGenerator(function* (genre) {\n        yield GenreRepo.delete(genre.id);\n\n        _this.setState(function (_ref18) {\n          var genres = _ref18.genres;\n          return {\n            genres: genres.filter(function (elem) {\n              return elem.id !== genre.id;\n            })\n          };\n        });\n      });\n\n      return function (_x6) {\n        return _ref17.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCreateWatched = function () {\n      var _ref19 = _asyncToGenerator(function* (watched) {\n        var newWatched = yield WatchedRepo.create(watched);\n\n        if (newWatched.isMovie) {\n          _this.setState({\n            movies: _this.state.movies.filter(function (movie) {\n              return movie.id !== newWatched.watchId;\n            }),\n            watched: _this.state.watched.concat({\n              id: newWatched.watchId,\n              watch: _this.state.movies.filter(function (movie) {\n                return movie.id === newWatched.watchId;\n              })[0],\n              watched: newWatched\n            }),\n            views: Views.Watched\n          });\n        } else {\n          _this.setState({\n            tvShows: _this.state.tvShows.filter(function (movie) {\n              return movie.id !== newWatched.watchId;\n            }),\n            watched: _this.state.watched.concat({\n              id: newWatched.watchId,\n              watch: _this.state.tvShows.filter(function (movie) {\n                return movie.id === newWatched.watchId;\n              })[0],\n              watched: newWatched\n            }),\n            views: Views.Watched\n          });\n        }\n\n        _this.setState({\n          views: Views.Watched\n        });\n      });\n\n      return function (_x7) {\n        return _ref19.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEditWatch = function (watch) {\n      _this.setState({\n        views: Views.addWatch,\n        editedWatch: watch\n      });\n    };\n\n    _this.handleEditActors = function (actor) {\n      _this.setState({\n        editedActor: actor\n      });\n    };\n\n    _this.handleEditGenre = function (genre) {\n      _this.setState({\n        editedGenre: genre\n      });\n    };\n\n    _this.handleScroll = function (event) {\n      if (event.nativeEvent.contentOffset.y >= 200) {\n        _this.setState({\n          isScrolled: true\n        });\n      }\n\n      if (event.nativeEvent.contentOffset.y <= 50) {\n        _this.setState({\n          isScrolled: false\n        });\n      }\n    };\n\n    _this.handleShowActor = function (actor) {\n      _this.setState({\n        views: Views.showActor,\n        showActor: actor\n      });\n    };\n\n    _this.handleWatched = function (watch) {\n      _this.setState({\n        views: Views.addWatched,\n        showWatch: watch\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(function* () {\n        var allMovies = yield MovieRepo.findAll();\n        var allTvShows = yield TvShowRepo.findAll();\n        var allActors = yield ActorsRepo.findAll();\n        var allGenres = yield GenreRepo.findAll();\n        var allWatched = yield WatchedRepo.findAll();\n        var watchedMoviesIds = allWatched.map(function (watched) {\n          if (watched.isMovie) return watched.watchId;\n        });\n        var watchedShowsIds = allWatched.map(function (watched) {\n          if (!watched.isMovie) return watched.watchId;\n        });\n        var watched = allWatched.map(function (watched) {\n          if (watched.isMovie) {\n            return {\n              id: watched.watchId,\n              watch: allMovies.filter(function (movie) {\n                return movie.id === watched.watchId;\n              })[0],\n              watched: watched\n            };\n          } else {\n            return {\n              id: watched.watchId,\n              watch: allTvShows.filter(function (movie) {\n                return movie.id === watched.watchId;\n              })[0],\n              watched: watched\n            };\n          }\n        });\n        this.setState({\n          movies: allMovies.filter(function (movie) {\n            return watchedMoviesIds.indexOf(movie.id) < 0;\n          }),\n          tvShows: allTvShows.filter(function (movie) {\n            return watchedShowsIds.indexOf(movie.id) < 0;\n          }),\n          actors: allActors,\n          genres: allGenres,\n          watched: watched\n        });\n      });\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSwitchView\",\n    value: function handleSwitchView() {\n      switch (this.state.views) {\n        case Views.addWatch:\n          return _jsx(AddMovieForm, {\n            edited: this.state.editedWatch,\n            onCreate: this.handleCreateWatch,\n            actors: this.state.actors,\n            genres: this.state.genres\n          });\n\n        case Views.Actors:\n          return _jsxs(_Fragment, {\n            children: [_jsx(AddActorsForm, {\n              edited: this.state.editedActor,\n              onCreate: this.handleCreateActor\n            }), _jsx(List, {\n              items: this.state.actors,\n              onDelete: this.handleDeleteActor,\n              onEdit: this.handleEditActors,\n              Card: ActorCard\n            })]\n          });\n\n        case Views.Genres:\n          return _jsxs(_Fragment, {\n            children: [_jsx(AddGenreForm, {\n              edited: this.state.editedGenre,\n              onCreate: this.handleCreateGenre\n            }), _jsx(List, {\n              items: this.state.genres,\n              onDelete: this.handleDeleteGenre,\n              onEdit: this.handleEditGenre,\n              Card: GenreCard\n            })]\n          });\n\n        case Views.showWatch:\n          return _jsxs(_Fragment, {\n            children: [_jsx(List, {\n              options: {\n                actors: this.state.actors,\n                genres: this.state.genres,\n                authorBtn: this.handleShowActor,\n                onWatched: this.handleWatched\n              },\n              items: this.state.movies,\n              onDelete: this.handleDeleteWatch,\n              onEdit: this.handleEditWatch,\n              Card: MovieCard\n            }), \";\", _jsx(List, {\n              options: {\n                actors: this.state.actors,\n                genres: this.state.genres,\n                authorBtn: this.handleShowActor,\n                onWatched: this.handleWatched\n              },\n              items: this.state.tvShows,\n              onDelete: this.handleDeleteWatch,\n              onEdit: this.handleEditWatch,\n              Card: TvShowCard\n            })]\n          });\n\n        case Views.showActor:\n          return _jsx(ActorCard, {\n            len: \"r1\",\n            item: this.state.showActor\n          });\n\n        case Views.addWatched:\n          return _jsx(AddWatchedForm, {\n            actors: this.state.actors,\n            genres: this.state.genres,\n            watch: this.state.showWatch,\n            onCreate: this.handleCreateWatched\n          });\n\n        case Views.Watched:\n          return _jsx(List, {\n            options: {\n              actors: this.state.actors,\n              genres: this.state.genres,\n              authorBtn: this.handleShowActor\n            },\n            items: this.state.watched,\n            Card: WatchedCard\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(_Fragment, {\n        children: [_jsxs(Navbar, {\n          title: \"Movies and Tv shows\",\n          stickyNav: this.state.isScrolled,\n          children: [_jsx(Btn, {\n            value: \"What to watch\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.showWatch\n              });\n            },\n            bgColor: \"gray\"\n          }), _jsx(Btn, {\n            value: \"Add movie or show\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.addWatch\n              });\n            },\n            bgColor: \"gray\"\n          }), _jsx(Btn, {\n            value: \"Actors\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.Actors\n              });\n            },\n            bgColor: \"gray\"\n          }), _jsx(Btn, {\n            value: \"Genres\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.Genres\n              });\n            },\n            bgColor: \"gray\"\n          }), _jsx(Btn, {\n            value: \"Watched\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.Watched\n              });\n            },\n            bgColor: \"gray\"\n          })]\n        }), _jsx(ScrollView, {\n          onScroll: this.handleScroll,\n          children: this.handleSwitchView()\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","ActorCard","AddActorsForm","AddGenreForm","AddMovieForm","List","GenreCard","ActorsRepo","GenreRepo","MovieRepo","TvShowRepo","WatchedRepo","isTvShow","MovieCard","TvShowCard","Navbar","Btn","AddWatchedForm","WatchedCard","Views","App","state","movies","tvShows","actors","genres","watched","editedWatch","undefined","editedActor","editedGenre","views","showWatch","isScrolled","showActor","handleCreateWatch","watch","updated","update","setState","map","movie","id","tvShow","createdMovie","create","concat","createdTvShow","handleDeleteWatch","delete","filter","elem","handleCreateActor","actor","act","newActor","handleDeleteActor","handleCreateGenre","genre","gen","newGenre","handleDeleteGenre","handleCreateWatched","newWatched","isMovie","watchId","Watched","handleEditWatch","addWatch","handleEditActors","handleEditGenre","handleScroll","event","nativeEvent","contentOffset","y","handleShowActor","handleWatched","addWatched","allMovies","findAll","allTvShows","allActors","allGenres","allWatched","watchedMoviesIds","watchedShowsIds","indexOf","Actors","Genres","authorBtn","onWatched","handleSwitchView"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/workspace/Cheetsheet/App.tsx"],"sourcesContent":["import React, { Component, ComponentType } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport ActorCard from \"./Components/ActorCard\";\nimport AddActorsForm from \"./Components/addActorsForm\";\nimport AddGenreForm from \"./Components/addGenreForm\";\nimport AddMovieForm from \"./Components/addMovieForm\";\nimport List from \"./CustomComponents/CustomCardList\";\nimport GenreCard from \"./Components/GenreCard\";\nimport { ActorsRepo, GenreRepo, MovieRepo, TvShowRepo, WatchedRepo } from \"./dao/repository\";\nimport Actors from \"./modules/actors\";\nimport Genre from \"./modules/genre\";\nimport {isTvShow, Movie, TvShow, Watched } from \"./modules/movie-show\";\nimport MovieCard from \"./Components/MovieCard\";\nimport TvShowCard from \"./Components/TvShowCard\";\nimport Navbar from \"./CustomComponents/CustomNavbar\";\nimport Btn from \"./CustomComponents/CustomButton\";\nimport AddWatchedForm from \"./Components/AddWatchedForm\";\nimport WatchedCard from \"./Components/WatchedCard\";\n\nenum Views {\n  addWatch,\n  showWatch,\n  Actors,\n  Genres,\n  showActor,\n  addWatched,\n  Watched,\n}\nexport type WatchedT = {\n  id: number,\n  watch: Movie | TvShow;\n  watched: Watched;\n}\n\ninterface AppState{\n  movies: Movie [];\n  tvShows: TvShow[];\n  actors: Actors[];\n  genres: Genre[];\n  watched: WatchedT[];\n  editedWatch:  Movie | TvShow | undefined;\n  editedActor: Actors | undefined;\n  editedGenre: Genre | undefined;\n  views: Views;\n  isScrolled: boolean;\n  showActor: Actors | undefined;\n  showWatch:  Movie | TvShow | undefined;\n}\n\nclass App extends Component<{},AppState> {\n\n  state: Readonly<AppState> ={\n    movies: [],\n    tvShows: [],\n    actors: [],\n    genres: [],\n    watched: [],\n    editedWatch: undefined,\n    editedActor: undefined,\n    editedGenre: undefined,\n    views: Views.showWatch,\n    isScrolled: false,\n    showActor: undefined,\n    showWatch: undefined,\n  }\n \n\nasync componentDidMount() {\n  const allMovies = await MovieRepo.findAll();\n  const allTvShows = await TvShowRepo.findAll();\n  const allActors = await ActorsRepo.findAll();\n  const allGenres = await GenreRepo.findAll();\n  const allWatched = await WatchedRepo.findAll();\n\n  const watchedMoviesIds = allWatched.map(watched =>{\n     if(watched.isMovie)\n      return watched.watchId\n  } );\n  const watchedShowsIds = allWatched.map(watched =>{\n    if(!watched.isMovie)\n     return watched.watchId\n } );\n\n  const watched = allWatched.map(watched =>{\n    if(watched.isMovie){\n      return {\n        id: watched.watchId,\n        watch: allMovies.filter(movie => movie.id === watched.watchId)[0],\n        watched: watched\n      } as WatchedT\n    }else{\n      return {\n        id: watched.watchId,\n        watch: allTvShows.filter(movie => movie.id === watched.watchId)[0],\n        watched: watched\n      } as WatchedT\n    }} );\n\n    \n\n  this.setState({movies: allMovies.filter(movie => watchedMoviesIds.indexOf(movie.id!) < 0), tvShows: allTvShows.filter(movie => watchedShowsIds.indexOf(movie.id!) < 0), \n    actors: allActors, genres: allGenres, watched: watched});\n}\n\n  handleCreateWatch = async (watch: Movie | TvShow) =>{\n    if(this.state.editedWatch){\n      if(!isTvShow(watch)){\n        const updated = await MovieRepo.update(watch);\n        this.setState(({movies}) => ({movies: movies.map((movie) => movie.id === updated.id? updated: movie)}));\n      }else{\n        const updated = await TvShowRepo.update(watch as TvShow);\n        this.setState(({tvShows}) => ({tvShows: tvShows.map((tvShow) => tvShow.id === updated.id? updated: tvShow)}));\n      }\n      this.setState({editedWatch: undefined});  \n    }else{\n      if(!isTvShow(watch)){\n        const createdMovie = await MovieRepo.create(watch);\n        this.setState(({movies}) => ({movies: movies.concat(createdMovie)}));\n      }else{\n        const createdTvShow = await TvShowRepo.create(watch as TvShow);\n         this.setState(({tvShows}) => ({tvShows: tvShows.concat(createdTvShow)}));\n      }\n    }  \n    this.setState({views: Views.showWatch});\n  }\n\n  handleDeleteWatch = async (watch: Movie | TvShow) =>{\n    if(!isTvShow(watch)){\n      await MovieRepo.delete(watch.id!);\n      this.setState(({movies}) => ({movies: movies.filter((elem) => elem.id!== watch.id)}));\n    }else{\n      await TvShowRepo.delete(watch.id!);\n      this.setState(({tvShows}) => ({tvShows: tvShows.filter((elem) => elem.id!== watch.id)}));\n    }\n    \n      \n  }\n  \n  handleCreateActor = async (actor: Actors) =>{\n    if(this.state.editedActor){\n      const updated = await ActorsRepo.update(actor);\n      this.setState(({actors}) => ({actors: actors.map((act) => act.id === updated.id? updated: act)}));\n      this.setState({editedActor: undefined});  \n    }else{\n        const newActor = await ActorsRepo.create(actor);\n         this.setState(({actors}) => ({actors: actors.concat(newActor)}));\n    }  \n  }\n\n  handleDeleteActor = async (actor: Actors) =>{\n      await ActorsRepo.delete(actor.id!);\n      this.setState(({actors}) => ({actors: actors.filter((elem) => elem.id!== actor.id)}));\n    \n  }\n  handleCreateGenre = async (genre: Genre) =>{\n    if(this.state.editedGenre){\n      const updated = await GenreRepo.update(genre);\n      this.setState(({genres}) => ({genres: genres.map((gen) => gen.id === updated.id? updated: gen)}));\n      this.setState({editedGenre: undefined});  \n    }else{\n        const newGenre = await GenreRepo.create(genre);\n         this.setState(({genres}) => ({genres: genres.concat(newGenre)}));\n    }  \n  }\n\n  handleDeleteGenre = async (genre: Genre) =>{\n      await GenreRepo.delete(genre.id!);\n      this.setState(({genres}) => ({genres: genres.filter((elem) => elem.id!== genre.id)}));\n    \n  }\n\n  handleCreateWatched = async (watched: Watched) =>{\n   \n    const newWatched = await WatchedRepo.create(watched);\n    if(newWatched.isMovie){\n      this.setState({movies: this.state.movies.filter(movie => movie.id!== newWatched.watchId), \n        watched: this.state.watched.concat({ id: newWatched.watchId,\n          watch: this.state.movies.filter(movie => movie.id === newWatched.watchId)[0],\n          watched: newWatched}),views: Views.Watched});\n    }else{\n      this.setState({tvShows: this.state.tvShows.filter(movie => movie.id!== newWatched.watchId), \n        watched: this.state.watched.concat({ id: newWatched.watchId,\n          watch: this.state.tvShows.filter(movie => movie.id === newWatched.watchId)[0],\n          watched: newWatched}),views: Views.Watched});\n    }\n    // this.setState(({genres}) => ({genres: genres.concat(newGenre)}));\n    this.setState({views: Views.Watched})\n  }\n  \n  handleEditWatch =  (watch: Movie | TvShow)=>{\n    this.setState({views: Views.addWatch,editedWatch: watch});\n  }\n  handleEditActors =  (actor: Actors)=>{\n    this.setState({editedActor: actor});\n  }\n  handleEditGenre =  (genre: Genre)=>{\n    this.setState({editedGenre: genre});\n  }\n\n  handleScroll = (event: { nativeEvent: { contentOffset: { y: number; }; }; }) => {   \n    if(event.nativeEvent.contentOffset.y >= 200){\n      this.setState({isScrolled: true});\n    }\n    if(event.nativeEvent.contentOffset.y <= 50){\n      this.setState({isScrolled: false});\n    } \n}\n  handleShowActor =(actor: Actors) => {\n    this.setState({views: Views.showActor, showActor: actor});\n  }\n\n  handleWatched = (watch: Movie | TvShow) =>{\n    this.setState({views: Views.addWatched, showWatch: watch})\n  }\n\n  handleSwitchView(){\n   \n    switch(this.state.views){\n      case Views.addWatch:\n        return <AddMovieForm edited={this.state.editedWatch} onCreate={this.handleCreateWatch} actors={this.state.actors} genres={this.state.genres}/>\n      case Views.Actors:\n        return <><AddActorsForm edited={this.state.editedActor} onCreate={this.handleCreateActor}/>\n        <List<Actors> items={this.state.actors} onDelete={this.handleDeleteActor} onEdit={this.handleEditActors} Card={ActorCard as unknown as ComponentType<Actors>} />\n          </>\n      case Views.Genres:\n        return <><AddGenreForm edited={this.state.editedGenre} onCreate={this.handleCreateGenre}/> \n        <List<Genre> items={this.state.genres} onDelete={this.handleDeleteGenre} onEdit={this.handleEditGenre} Card={GenreCard as unknown as ComponentType<Genre>} /> \n      </>\n      case Views.showWatch:\n        return <><List<Movie> options={{actors: this.state.actors, genres: this.state.genres, authorBtn: this.handleShowActor, onWatched: this.handleWatched}} items={this.state.movies} onDelete={this.handleDeleteWatch} onEdit={this.handleEditWatch} Card={MovieCard as unknown as ComponentType<Movie>} />; \n        <List<TvShow> options={{actors: this.state.actors, genres: this.state.genres, authorBtn:this.handleShowActor, onWatched: this.handleWatched}} items={this.state.tvShows} onDelete={this.handleDeleteWatch} onEdit={this.handleEditWatch} Card={TvShowCard as unknown as ComponentType<TvShow>} />\n        </>\n      case Views.showActor:\n        return <ActorCard len=\"r1\" item={this.state.showActor!}/>\n      case Views.addWatched:\n        return <AddWatchedForm actors={this.state.actors} genres={this.state.genres} watch={this.state.showWatch!} onCreate={this.handleCreateWatched}/>\n      case Views.Watched:\n        return  <List<WatchedT> options={{actors: this.state.actors, genres: this.state.genres, authorBtn: this.handleShowActor}} items={this.state.watched}  Card={WatchedCard as unknown as ComponentType<WatchedT>} /> \n    }\n  }\n  \n  render(): React.ReactNode {\n    return (\n      <>\n      <Navbar title=\"Movies and Tv shows\" stickyNav={this.state.isScrolled}>\n          <Btn value=\"What to watch\" event={() => this.setState({views: Views.showWatch})} bgColor='gray'/>\n          <Btn value=\"Add movie or show\" event={() => this.setState({views: Views.addWatch})} bgColor='gray'/>\n          <Btn value=\"Actors\" event={() => this.setState({views: Views.Actors})} bgColor='gray'/>\n          <Btn value=\"Genres\" event={() => this.setState({views: Views.Genres})} bgColor='gray'/>\n          <Btn value=\"Watched\" event={() => this.setState({views: Views.Watched})} bgColor='gray'/>\n      </Navbar>\n      <ScrollView onScroll={this.handleScroll}>\n\n      {this.handleSwitchView()}\n      </ScrollView>\n      </>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}