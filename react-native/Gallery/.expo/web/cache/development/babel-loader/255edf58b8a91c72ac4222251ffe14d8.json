{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Appbar, Button } from 'react-native-paper';\nimport { useHeaderTextColor } from \"../utils\";\nimport { getTranslation } from \"../translations/utils\";\nexport default function DatePickerModalHeader(props) {\n  var _props$saveLabelDisab, _props$uppercase;\n\n  var disableSafeTop = props.disableSafeTop,\n      locale = props.locale,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? 'close' : _props$closeIcon;\n  var saveLabel = props.saveLabel || getTranslation(locale, 'save');\n  var color = useHeaderTextColor();\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n    style: styles.animated\n  }, React.createElement(SafeAreaView, {\n    style: [styles.safeContent, disableSafeTop && styles.safeContentNoTop]\n  }, React.createElement(Appbar, {\n    style: styles.appbarHeader\n  }, React.createElement(Appbar.Action, {\n    icon: closeIcon,\n    accessibilityLabel: getTranslation(locale, 'close'),\n    onPress: props.onDismiss,\n    color: color,\n    testID: \"react-native-paper-dates-close\"\n  }), React.createElement(Appbar.Content, {\n    title: ''\n  }), React.createElement(Button, {\n    color: color,\n    onPress: props.onSave,\n    disabled: (_props$saveLabelDisab = props.saveLabelDisabled) != null ? _props$saveLabelDisab : false,\n    uppercase: (_props$uppercase = props.uppercase) != null ? _props$uppercase : true,\n    testID: \"react-native-paper-dates-save\"\n  }, saveLabel)))));\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4\n  },\n  safeContent: {\n    paddingBottom: 0\n  },\n  safeContentNoTop: {\n    paddingTop: 0\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12\n  },\n  headerContentContainer: {\n    marginTop: 5,\n    flexDirection: 'row'\n  },\n  label: {\n    color: '#fff',\n    letterSpacing: 1,\n    fontSize: 13\n  },\n  singleHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  rangeHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  headerTextFilled: {\n    color: 'rgba(255,255,255,1)'\n  },\n  headerTextEmpty: {\n    color: 'rgba(255,255,255,0.5)'\n  },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Appbar","Button","useHeaderTextColor","getTranslation","DatePickerModalHeader","props","disableSafeTop","locale","closeIcon","saveLabel","color","Animated","View","style","styles","animated","SafeAreaView","safeContent","safeContentNoTop","appbarHeader","Action","icon","accessibilityLabel","onPress","onDismiss","testID","Content","title","onSave","disabled","saveLabelDisabled","uppercase","StyleSheet","create","fill","flex","paddingBottom","elevation","paddingTop","header","height","alignItems","flexDirection","paddingLeft","paddingRight","headerContentContainer","marginTop","label","letterSpacing","fontSize","singleHeaderText","rangeHeaderText","headerTextFilled","headerTextEmpty","headerSeparator","backgroundColor"],"sources":["DatePickerModalHeader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, SafeAreaView } from 'react-native'\nimport { Appbar, Button } from 'react-native-paper'\n\nimport { useHeaderTextColor } from '../utils'\nimport { getTranslation } from '../translations/utils'\n\nexport interface DatePickerModalHeaderProps {\n  disableSafeTop?: boolean\n  saveLabel?: string\n  saveLabelDisabled?: boolean\n  uppercase?: boolean\n  onDismiss: () => void\n  onSave: () => void\n  locale: string | undefined\n  closeIcon?: string\n}\n\nexport default function DatePickerModalHeader(\n  props: DatePickerModalHeaderProps\n) {\n  const { disableSafeTop, locale, closeIcon = 'close' } = props\n  const saveLabel = props.saveLabel || getTranslation(locale, 'save')\n  const color = useHeaderTextColor()\n  return (\n    <>\n      <Animated.View style={styles.animated}>\n        <SafeAreaView\n          style={[\n            styles.safeContent,\n            disableSafeTop && styles.safeContentNoTop,\n          ]}\n        >\n          <Appbar style={styles.appbarHeader}>\n            <Appbar.Action\n              icon={closeIcon}\n              accessibilityLabel={getTranslation(locale, 'close')}\n              onPress={props.onDismiss}\n              color={color}\n              testID=\"react-native-paper-dates-close\"\n            />\n            <Appbar.Content title={''} />\n            <Button\n              color={color}\n              onPress={props.onSave}\n              disabled={props.saveLabelDisabled ?? false}\n              uppercase={props.uppercase ?? true}\n              testID=\"react-native-paper-dates-save\"\n            >\n              {saveLabel}\n            </Button>\n          </Appbar>\n        </SafeAreaView>\n      </Animated.View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  safeContentNoTop: {\n    paddingTop: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  headerTextFilled: { color: 'rgba(255,255,255,1)' },\n  headerTextEmpty: { color: 'rgba(255,255,255,0.5)' },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent',\n    // alignItems:'center'\n  },\n})\n"]},"metadata":{},"sourceType":"module"}