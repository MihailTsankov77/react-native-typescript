{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Draggable = function (_Component) {\n  _inherits(Draggable, _Component);\n\n  var _super = _createSuper(Draggable);\n\n  function Draggable() {\n    var _this;\n\n    _classCallCheck(this, Draggable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showDragArea: false\n    };\n    _this.panValue = new Animated.ValueXY({\n      x: 0,\n      y: 0\n    });\n    _this.opacity = new Animated.Value(1);\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(e, gesture) {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(e, gesture) {\n        return false;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(e, gesture) {\n        return true;\n      },\n      onPanResponderMove: Animated.event([null, {\n        dx: _this.panValue.x,\n        dy: _this.panValue.y\n      }], {\n        useNativeDriver: true\n      }),\n      onPanResponderRelease: function onPanResponderRelease(e, gesture) {\n        var _this$props$dropArea$ = _this.props.dropArea.position,\n            px = _this$props$dropArea$.px,\n            py = _this$props$dropArea$.py,\n            width = _this$props$dropArea$.width,\n            height = _this$props$dropArea$.height;\n\n        if (gesture.y0 + gesture.dy < py + height && gesture.y0 + gesture.dy > py && gesture.x0 + gesture.dx < px + width && gesture.x0 + gesture.dx > px) {\n          Animated.sequence([Animated.parallel([Animated.timing(_this.panValue.y, {\n            toValue: height / 2 + py - gesture.y0,\n            duration: 400,\n            useNativeDriver: false\n          }), Animated.timing(_this.panValue.x, {\n            toValue: width / 2 + px - gesture.x0,\n            duration: 400,\n            useNativeDriver: false\n          })]), Animated.timing(_this.opacity, {\n            toValue: 0,\n            duration: 400,\n            useNativeDriver: false\n          })]).start(function () {\n            return _this.props.onFinish();\n          });\n        } else {\n          Animated.spring(_this.panValue, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            friction: 5,\n            useNativeDriver: false\n          }).start();\n        }\n\n        _this.setState({\n          showDragArea: false\n        });\n      },\n      onPanResponderTerminate: function onPanResponderTerminate(e, gestureState) {\n        Animated.spring(_this.panValue, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          friction: 7,\n          useNativeDriver: true\n        }).start();\n\n        _this.setState({\n          showDragArea: false\n        });\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Draggable, [{\n    key: \"render\",\n    value: function render() {\n      var panStyle = {\n        transform: this.panValue.getTranslateTransform(),\n        opacity: this.opacity\n      };\n      var dropArea = this.props.dropArea;\n      return _jsxs(_Fragment, {\n        children: [this.state.showDragArea && _jsx(View, {\n          style: {\n            position: \"absolute\",\n            width: dropArea.position.width,\n            top: dropArea.position.py,\n            left: dropArea.position.px,\n            backgroundColor: 'red'\n          },\n          children: _jsx(Text, {\n            style: {\n              alignSelf: 'center',\n              color: 'white',\n              fontSize: 26\n            },\n            children: dropArea.text\n          })\n        }), _jsx(Animated.View, _objectSpread(_objectSpread({}, this.panResponder.panHandlers), {}, {\n          style: [panStyle],\n          children: this.props.itemView\n        }))]\n      });\n    }\n  }]);\n\n  return Draggable;\n}(Component);\n\nexport { Draggable as default };","map":{"version":3,"names":["React","Component","Draggable","state","showDragArea","panValue","Animated","ValueXY","x","y","opacity","Value","panResponder","PanResponder","create","onStartShouldSetPanResponder","e","gesture","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","props","dropArea","position","px","py","width","height","y0","x0","sequence","parallel","timing","toValue","duration","start","onFinish","spring","friction","setState","onPanResponderTerminate","gestureState","panStyle","transform","getTranslateTransform","top","left","backgroundColor","alignSelf","color","fontSize","text","panHandlers","itemView"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/Gallery/Components/.newFolder/CustomComponents/CustomElements/Draggable.tsx"],"sourcesContent":["import React, { Component, ReactNode } from \"react\";\nimport {\n  PanResponder,\n  Animated,\n  View,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  Text,\n} from \"react-native\";\n\ninterface DropAreaProps{\n  text: string;\n  position: {px: number, py: number, width: number, height: number};\n}\n\nexport interface DragAndDropProps{\n  onFinish?: () => void;\n  itemView: ReactNode;\n  dropArea: DropAreaProps;\n}\n\nexport default class Draggable extends Component<DragAndDropProps, {showDragArea: boolean}> {\n\n    state: Readonly<{ showDragArea: boolean; }> = {\n      showDragArea: false,\n    }\n  \n    panValue = new Animated.ValueXY({x: 0, y: 0 })\n    opacity = new Animated.Value(1);\n\n    panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: (e, gesture) => true,\n        onStartShouldSetPanResponderCapture: (e, gesture) => false,\n        onMoveShouldSetPanResponderCapture: (e, gesture) => true,\n        onPanResponderMove:Animated.event([\n             null, { dx: this.panValue.x, dy: this.panValue.y }\n            ], \n            {useNativeDriver: true}),\n            \n        onPanResponderRelease: (e, gesture) => {\n          \n          const {px, py, width, height} = this.props.dropArea.position;\n\n          if ((gesture.y0 + gesture.dy < py + height && gesture.y0 + gesture.dy > py) && (gesture.x0 + gesture.dx < px + width && gesture.x0 + gesture.dx > px)) {\n            Animated.sequence([\n                Animated.parallel([\n                  Animated.timing(this.panValue.y, {\n                    toValue: (height/2 + py - gesture.y0),\n                    duration: 400,\n                    useNativeDriver: false\n                  }),\n                  Animated.timing(this.panValue.x, {\n                    toValue: (width/2 + px - gesture.x0),\n                    duration: 400,\n                    useNativeDriver: false\n                  }),\n                ]),\n              Animated.timing(this.opacity, {\n                toValue: 0,\n                duration: 400,\n                useNativeDriver: false\n              })\n            ]).start(()=>this.props.onFinish!());\n        } else {\n            Animated.spring(this.panValue, {\n              toValue: { x: 0, y: 0 },\n              friction: 5,\n              useNativeDriver: false,\n            }).start();\n          }\n          this.setState({showDragArea: false});\n        },\n        onPanResponderTerminate: (e, gestureState) => {\n          Animated.spring(this.panValue, {\n            toValue: { x: 0, y: 0 },\n            friction: 7,\n            useNativeDriver: true,\n          }).start();\n          this.setState({showDragArea: false});\n        },\n    });\n\n  render() {\n    const panStyle = {\n      transform: this.panValue.getTranslateTransform(),\n      opacity: this.opacity,\n    }\n    const {dropArea} = this.props;\n    \n    return (\n        <>\n        {this.state.showDragArea &&\n            <View style={{position:\"absolute\", \n            width: dropArea.position.width, \n            top: dropArea.position.py, \n            left: dropArea.position.px,\n            backgroundColor: 'red'\n          }}>\n            <Text style={{alignSelf:'center', color: 'white', fontSize: 26}}>{dropArea.text}</Text>\n          </View>\n        }\n        <Animated.View\n          {...this.panResponder.panHandlers}\n          style={[panStyle]}\n        >\n        {this.props.itemView}\n        </Animated.View>\n        </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}