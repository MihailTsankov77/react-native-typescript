{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from \"react\";\nimport Form from \"./.newFolder/CustomComponents/CustomForm\";\nimport Input from \"./.newFolder/CustomComponents/CustomFormInput\";\nimport ImagePicker from \"./.newFolder/CustomComponents/CustomImagePicker\";\nimport { Validators } from \"../ts/validators\";\nimport Image from \"../modules/Gallery-image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar season = [];\n\nfor (var i = 1; i <= 10; i++) {\n  season.push([\"Season \" + i, i]);\n}\n\nvar validators = {\n  title: [Validators.required(), Validators.len(2, 40)],\n  description: [Validators.len(-1, 256)],\n  url: [Validators.required()]\n};\n\nvar AddImagesForm = function (_Component) {\n  _inherits(AddImagesForm, _Component);\n\n  var _super = _createSuper(AddImagesForm);\n\n  function AddImagesForm() {\n    var _this$props$edited, _this$props$edited2, _this$props$edited3, _this$props$edited4, _this$props$edited5;\n\n    var _this;\n\n    _classCallCheck(this, AddImagesForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      formFields: {\n        title: ((_this$props$edited = _this.props.edited) == null ? void 0 : _this$props$edited.title) || \"\",\n        url: ((_this$props$edited2 = _this.props.edited) == null ? void 0 : _this$props$edited2.url) || \"\",\n        tags: ((_this$props$edited3 = _this.props.edited) == null ? void 0 : _this$props$edited3.tags) || \"\",\n        description: ((_this$props$edited4 = _this.props.edited) == null ? void 0 : _this$props$edited4.description) || \"\",\n        author: ((_this$props$edited5 = _this.props.edited) == null ? void 0 : _this$props$edited5.author) || \"\",\n        date: new Date()\n      }\n    };\n\n    _this.handleFormChange = function (formState) {\n      _this.setState({\n        formFields: formState\n      });\n    };\n\n    _this.handleSubmitForm = function () {\n      var _this$props$edited6;\n\n      _this.props.onCreate(new Image((_this$props$edited6 = _this.props.edited) == null ? void 0 : _this$props$edited6.id, _this.state.formFields.title, _this.state.formFields.url, _this.state.formFields.tags, _this.state.formFields.description, _this.state.formFields.author));\n    };\n\n    return _this;\n  }\n\n  _createClass(AddImagesForm, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(Form, {\n        title: \"Add new image\",\n        formState: this.state.formFields,\n        handleStateChange: this.handleFormChange,\n        handleSubmitForm: this.handleSubmitForm,\n        validators: validators,\n        children: [_jsx(Input, {\n          target: \"title\",\n          label: \"Title: \"\n        }), _jsx(ImagePicker, {\n          target: \"url\",\n          label: \"Pick image: \"\n        }), _jsx(Input, {\n          target: \"tags\",\n          label: \"Tags: \"\n        }), _jsx(Input, {\n          target: \"author\",\n          label: \"Author: \"\n        }), _jsx(Input, {\n          target: \"description\",\n          label: \"Description: \",\n          multiline: {\n            enable: true,\n            lines: 5\n          }\n        })]\n      });\n    }\n  }]);\n\n  return AddImagesForm;\n}(Component);\n\nexport default AddImagesForm;","map":{"version":3,"names":["Component","Form","Input","ImagePicker","Validators","Image","season","i","push","validators","title","required","len","description","url","AddImagesForm","state","formFields","props","edited","tags","author","date","Date","handleFormChange","formState","setState","handleSubmitForm","onCreate","id","enable","lines"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/Gallery/Components/AddImagesForm.tsx"],"sourcesContent":["import { Component } from \"react\";\nimport Form from \"./.newFolder/CustomComponents/CustomForm\";\nimport Input from \"./.newFolder/CustomComponents/CustomFormInput\";\nimport ImagePicker from \"./.newFolder/CustomComponents/CustomImagePicker\";\nimport DatePicker from \"./.newFolder/CustomComponents/CustomDatePicker\";\nimport { validatorsType } from \"./.newFolder/CustomComponents/shared/shared-interfaces\";\nimport { Validators } from \"../ts/validators\";\nimport Image from \"../modules/Gallery-image\";\n\ninterface AddImagesFormProps {\n    onCreate: (image: Image) =>void;\n    edited: Image | undefined;\n}\n\ninterface Fields{\n    title: string;\n    url: string;\n    tags: string;\n    description: string;\n    date: Date;\n    author: string;\n}\n \n\ninterface AddImagesFormState {\n    formFields: Fields;\n}\n\nlet season: [string, number][] =[];\nfor(let i = 1; i<= 10; i++){\n    season.push([`Season ${i}`, i])\n}  \n\nconst validators: validatorsType<Fields> = {\n    title: [Validators.required(), Validators.len(2, 40)],\n    description: [Validators.len(-1, 256)],\n    url: [Validators.required()]\n}\n \nclass AddImagesForm extends Component<AddImagesFormProps, AddImagesFormState> {\n    state: Readonly<AddImagesFormState> = {\n        formFields: {\n            title: this.props.edited?.title || \"\",\n            url: this.props.edited?.url || \"\",\n            tags: this.props.edited?.tags || \"\",\n            description: this.props.edited?.description || \"\",\n            author: this.props.edited?.author || \"\",\n            date: new Date(),\n        }\n    }\n   \n\n    handleFormChange = (formState: Fields) =>{\n        this.setState({formFields: formState});\n    }\n\n    handleSubmitForm = () =>{\n        this.props.onCreate(new Image(\n            this.props.edited?.id,\n            this.state.formFields.title,\n            this.state.formFields.url,\n            this.state.formFields.tags,\n            this.state.formFields.description,\n            this.state.formFields.author,\n        ));      \n    }\n\n\n    render() { \n       \n        return ( \n            <Form<Fields> title=\"Add new image\"\n            formState ={this.state.formFields}\n            handleStateChange={this.handleFormChange}\n            handleSubmitForm ={this.handleSubmitForm}\n            validators={validators}>\n               <Input target={\"title\"} label=\"Title: \"/>\n               <ImagePicker target={\"url\"} label=\"Pick image: \" />\n               <Input target={\"tags\"} label=\"Tags: \"/>\n               <Input target={\"author\"} label=\"Author: \"/>\n               <Input target={\"description\"} label=\"Description: \" multiline={{enable:true, lines: 5}}/>\n            </Form>\n         );\n    }\n}\n \n\n\nexport default AddImagesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}