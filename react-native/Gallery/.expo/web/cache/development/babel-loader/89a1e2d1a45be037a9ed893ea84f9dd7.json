{"ast":null,"code":"import * as React from 'react';\nimport Color from 'color';\nimport { useTheme } from 'react-native-paper';\nexport var circleSize = 215;\nexport var hourTypes = {\n  am: 'am',\n  pm: 'pm'\n};\nexport function getHourType(hours) {\n  if (hours >= 0 && hours <= 12) {\n    return hourTypes.am;\n  }\n\n  if (hours > 12 && hours <= 24) {\n    return hourTypes.pm;\n  }\n\n  return undefined;\n}\nexport var inputTypes = {\n  keyboard: 'keyboard',\n  picker: 'picker'\n};\nexport var reverseInputTypes = {\n  keyboard: 'picker',\n  picker: 'keyboard'\n};\nexport var inputTypeIcons = {\n  keyboard: 'keyboard-outline',\n  picker: 'clock-outline'\n};\nexport var getTimeInputTypeIcon = function getTimeInputTypeIcon(inputType, inputIconMap) {\n  return (inputIconMap === null || inputIconMap === void 0 ? void 0 : inputIconMap[reverseInputTypes[inputType]]) || (inputTypeIcons === null || inputTypeIcons === void 0 ? void 0 : inputTypeIcons[reverseInputTypes[inputType]]);\n};\nexport var clockTypes = {\n  minutes: 'minutes',\n  hours: 'hours'\n};\nvar outerHeight = 34;\n\nvar _30 = Math.PI / 6;\n\nvar _12 = Math.PI / 30;\n\nvar _360 = Math.PI * 2;\n\nvar _90 = Math.PI / 2;\n\nexport function snap(angle, step) {\n  var a = angle;\n\n  while (a < 0) {\n    a += _360;\n  }\n\n  var diff = a % step;\n\n  if (diff <= step / 2) {\n    return angle - diff;\n  }\n\n  return angle - diff + step;\n}\nexport function getHourTypeFromOffset(left, top, size) {\n  var w = size / 2;\n  var x = w - left;\n  var y = size / 2 - top;\n  var distance = Math.sqrt(x * x + y * y);\n  var maxPm = w - outerHeight;\n  return distance > maxPm ? hourTypes.am : hourTypes.pm;\n}\nexport function getMinutes(handAngle) {\n  handAngle = snap(handAngle, _12);\n  var minute = parseInt(((handAngle - _90) % _360 / _12).toFixed(), 10);\n\n  while (minute < 0) {\n    minute += 60;\n  }\n\n  while (minute >= 60) {\n    minute -= 60;\n  }\n\n  return minute;\n}\nexport function getHours(handAngle, hourType) {\n  handAngle = snap(handAngle, _30);\n  var hour = parseInt(((handAngle - _90) % _360 / _30).toFixed(), 10);\n  if (hour < 0) hour += 12;\n  if (hour >= 12) hour -= 12;\n\n  if (hourType === hourTypes.am) {\n    if (hour <= 0) {\n      hour += 12;\n    } else if (hour >= 12) {\n      hour -= 12;\n    }\n  }\n\n  if (hourType === hourTypes.pm) {\n    if (hour <= 0) {\n      hour += 12;\n    } else if (hour > 12) {\n      hour -= 12;\n    }\n  }\n\n  return hour;\n}\nexport function getAngle(left, top, size) {\n  var x = size / 2 - left;\n  var y = size / 2 - top;\n  var angle = x ? Math.atan(y / x) : y < 0 ? -_90 : _90;\n\n  if (x < 0) {\n    angle = -angle + 2 * (_90 + angle);\n  }\n\n  return angle;\n}\nexport function useSwitchColors(highlighted) {\n  var theme = useTheme();\n  var backgroundColor = React.useMemo(function () {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex();\n      }\n\n      return theme.colors.backdrop;\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex();\n    }\n\n    return theme.colors.surface;\n  }, [highlighted, theme]);\n  var color = React.useMemo(function () {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary;\n    }\n\n    return theme.colors.placeholder;\n  }, [highlighted, theme]);\n  return {\n    backgroundColor: backgroundColor,\n    color: color\n  };\n}\nexport function useInputColors(highlighted) {\n  var theme = useTheme();\n  var backgroundColor = React.useMemo(function () {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex();\n      }\n\n      return Color(theme.colors.surface).lighten(1.2).hex();\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex();\n    }\n\n    return Color(theme.colors.surface).darken(0.1).hex();\n  }, [highlighted, theme]);\n  var color = React.useMemo(function () {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary;\n    }\n\n    return theme.colors.text;\n  }, [highlighted, theme]);\n  return {\n    backgroundColor: backgroundColor,\n    color: color\n  };\n}\nexport function toHourInputFormat(hours, is24Hour) {\n  if (hours === 24) {\n    return 0;\n  }\n\n  if (is24Hour) {\n    return hours;\n  }\n\n  if (hours > 12) {\n    return hours - 12;\n  }\n\n  return hours;\n}\nexport function toHourOutputFormat(newHours, previousHours, is24Hour) {\n  if (is24Hour) {\n    return newHours;\n  }\n\n  if (previousHours > 12 && newHours < 12) {\n    return newHours + 12;\n  }\n\n  return newHours;\n}","map":{"version":3,"mappings":"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","names":["React","Color","useTheme","circleSize","hourTypes","am","pm","getHourType","hours","undefined","inputTypes","keyboard","picker","reverseInputTypes","inputTypeIcons","getTimeInputTypeIcon","inputType","inputIconMap","clockTypes","minutes","outerHeight","_30","Math","PI","_12","_360","_90","snap","angle","step","a","diff","getHourTypeFromOffset","left","top","size","w","x","y","distance","sqrt","maxPm","getMinutes","handAngle","minute","parseInt","toFixed","getHours","hourType","hour","getAngle","atan","useSwitchColors","highlighted","theme","backgroundColor","useMemo","dark","colors","primary","hex","backdrop","lighten","surface","color","placeholder","useInputColors","darken","text","toHourInputFormat","is24Hour","toHourOutputFormat","newHours","previousHours"],"sources":["timeUtils.ts"],"sourcesContent":["import * as React from 'react'\nimport Color from 'color'\nimport { useTheme } from 'react-native-paper'\n\n// 250? when bigger?\nexport const circleSize = 215\n\nexport type PossibleHourTypes = 'am' | 'pm'\nexport type HourTypeMap = {\n  [hourType in PossibleHourTypes]: PossibleHourTypes\n}\nexport const hourTypes: HourTypeMap = {\n  am: 'am',\n  pm: 'pm',\n}\n\nexport function getHourType(hours: number): PossibleHourTypes | undefined {\n  if (hours >= 0 && hours <= 12) {\n    return hourTypes.am\n  }\n  if (hours > 12 && hours <= 24) {\n    return hourTypes.pm\n  }\n  return undefined\n}\n\nexport type PossibleInputTypes = 'keyboard' | 'picker'\nexport type InputTypeMap = {\n  [inputType in PossibleInputTypes]: PossibleInputTypes\n}\nexport const inputTypes: InputTypeMap = {\n  keyboard: 'keyboard',\n  picker: 'picker',\n}\n\nexport const reverseInputTypes: InputTypeMap = {\n  keyboard: 'picker',\n  picker: 'keyboard',\n}\ntype InputIconMap = {\n  [inputType in PossibleInputTypes]: string\n}\nexport const inputTypeIcons: InputIconMap = {\n  keyboard: 'keyboard-outline',\n  picker: 'clock-outline',\n}\n\nexport const getTimeInputTypeIcon = (\n  inputType: PossibleInputTypes,\n  inputIconMap?: InputIconMap\n) => {\n  return (\n    inputIconMap?.[reverseInputTypes[inputType]] ||\n    inputTypeIcons?.[reverseInputTypes[inputType]]\n  )\n}\n\nexport type PossibleClockTypes = 'hours' | 'minutes'\nexport type ClockTypeMap = {\n  [clockType in PossibleClockTypes]: PossibleClockTypes\n}\nexport const clockTypes: ClockTypeMap = {\n  minutes: 'minutes',\n  hours: 'hours',\n}\n\n// Code inspiration and copied from: https://github.com/ShaneGH/analogue-time-picker/blob/master/src/utils/angle.ts\n\nconst outerHeight = 34\nconst _30 = Math.PI / 6\nconst _12 = Math.PI / 30\nconst _360 = Math.PI * 2\nconst _90 = Math.PI / 2\n\n/** Snap an angle to a given step. E.g. if angle = 22° and step = 10°, round down to 20° */\nexport function snap(angle: number, step: number) {\n  let a = angle\n  while (a < 0) a += _360\n  let diff = a % step\n\n  if (diff <= step / 2) {\n    return angle - diff\n  }\n\n  return angle - diff + step\n}\n\n// detect am / pm based on offset\nexport function getHourTypeFromOffset(\n  left: number,\n  top: number,\n  size: number\n): PossibleHourTypes {\n  const w = size / 2\n  const x = w - left\n  const y = size / 2 - top\n\n  const distance = Math.sqrt(x * x + y * y)\n  const maxPm = w - outerHeight\n\n  return distance > maxPm ? hourTypes.am : hourTypes.pm\n}\n\n// Calculate the minute from the hand angle\nexport function getMinutes(handAngle: number) {\n  handAngle = snap(handAngle, _12)\n\n  let minute = parseInt((((handAngle - _90) % _360) / _12).toFixed(), 10)\n  while (minute < 0) minute += 60\n  while (minute >= 60) minute -= 60\n\n  return minute\n}\n\n// Calculate the hour from the hand angle\nexport function getHours(\n  handAngle: number,\n  hourType: PossibleHourTypes | undefined\n) {\n  handAngle = snap(handAngle, _30)\n\n  let hour = parseInt((((handAngle - _90) % _360) / _30).toFixed(), 10)\n  if (hour < 0) hour += 12\n  if (hour >= 12) hour -= 12\n\n  if (hourType === hourTypes.am) {\n    if (hour <= 0) {\n      hour += 12\n    } else if (hour >= 12) {\n      hour -= 12\n    }\n  }\n  if (hourType === hourTypes.pm) {\n    if (hour <= 0) {\n      hour += 12\n    } else if (hour > 12) {\n      hour -= 12\n    }\n  }\n\n  return hour\n}\n\n/** Get the angle of the left/top co-ordinate from the center of the width.height box */\nexport function getAngle(left: number, top: number, size: number) {\n  const x = size / 2 - left\n  const y = size / 2 - top\n\n  // tan O = y / x\n  let angle = x ? Math.atan(y / x) : y < 0 ? -_90 : _90\n  if (x < 0) {\n    // reflect along vertical axis\n    angle = -angle + 2 * (_90 + angle)\n  }\n\n  return angle\n}\n\nexport function useSwitchColors(highlighted: boolean) {\n  const theme = useTheme()\n  const backgroundColor = React.useMemo<string>(() => {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex()\n      }\n      return theme.colors.backdrop\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex()\n    }\n    return theme.colors.surface\n  }, [highlighted, theme])\n\n  const color = React.useMemo<string>(() => {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary\n    }\n    return theme.colors.placeholder\n  }, [highlighted, theme])\n\n  return { backgroundColor, color }\n}\n\nexport function useInputColors(highlighted: boolean) {\n  const theme = useTheme()\n  const backgroundColor = React.useMemo<string>(() => {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex()\n      }\n      return Color(theme.colors.surface).lighten(1.2).hex()\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex()\n    }\n    return Color(theme.colors.surface).darken(0.1).hex()\n  }, [highlighted, theme])\n\n  const color = React.useMemo<string>(() => {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary\n    }\n    return theme.colors.text\n  }, [highlighted, theme])\n\n  return { backgroundColor, color }\n}\n\nexport function toHourInputFormat(hours: number, is24Hour: boolean): number {\n  if (hours === 24) {\n    return 0\n  }\n  if (is24Hour) {\n    return hours\n  }\n  if (hours > 12) {\n    return hours - 12\n  }\n  return hours\n}\n\nexport function toHourOutputFormat(\n  newHours: number,\n  previousHours: number,\n  is24Hour: boolean\n): number {\n  if (is24Hour) {\n    return newHours\n  }\n  if (previousHours > 12 && newHours < 12) {\n    return newHours + 12\n  }\n  return newHours\n}\n"]},"metadata":{},"sourceType":"module"}