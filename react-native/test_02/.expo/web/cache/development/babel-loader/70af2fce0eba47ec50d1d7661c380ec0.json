{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function DropdownQuestion(_ref) {\n  var item = _ref.item,\n      options = _ref.options;\n  var pictures = item.answers.map(function (ans) {\n    return {\n      id: ans.id,\n      uri: ans.picture\n    };\n  });\n  var texts = item.answers.map(function (ans) {\n    return {\n      id: ans.id,\n      text: ans.text\n    };\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.question,\n      children: item.text\n    }), item.answers.map(function (ans) {\n      var index1 = Math.round(Math.random() * pictures.length);\n      var picture = pictures.splice(index1, 1)[0];\n      var index2 = Math.round(Math.random() * texts.length);\n      var text = texts.splice(index2, 1)[0];\n      return _jsx(View, {});\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n    alignContent: 'center',\n    margin: 5,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25,\n    width: \"90%\",\n    borderColor: \"#E0E0E0\"\n  },\n  question: {\n    fontSize: 40,\n    alignSelf: \"center\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#E0E0E0\"\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","DropdownQuestion","item","options","pictures","answers","map","ans","id","uri","picture","texts","text","styles","container","question","index1","Math","round","random","length","splice","index2","StyleSheet","create","display","flexDirection","gap","alignContent","margin","padding","borderWidth","borderRadius","width","borderColor","fontSize","alignSelf","borderBottomWidth","borderBottomColor"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport { Image, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable from \"./.newFolder/CustomComponents/CustomElements/Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\n\nconst DropdownQuestion =  ({item, options}: DropdownQuestionProps) => {\n    const pictures = item.answers.map(ans =>  { return {id: ans.id, uri: ans.picture}});\n    const texts = item.answers.map(ans =>  { return {id: ans.id, text: ans.text}});\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.question}>{item.text}</Text>\n            {item.answers.map(ans => {\n                const index1 = Math.round(Math.random()*pictures.length);\n                const picture = pictures.splice(index1, 1)[0];\n                const index2 = Math.round(Math.random()*texts.length);\n                const text = texts.splice(index2, 1)[0];\n\n            return (<View>\n\n            </View>\n            \n            );})}\n        </View>\n     );\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        alignContent: 'center',\n        margin: 5,\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n        width: \"90%\",\n        borderColor:\"#E0E0E0\",\n    },\n    question: {\n        fontSize: 40,\n        alignSelf: \"center\",\n        borderBottomWidth: 2,  \n        borderBottomColor: \"#E0E0E0\",\n    }\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAkBA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,OAA4C;EAAA,IAA1CC,IAA0C,QAA1CA,IAA0C;EAAA,IAApCC,OAAoC,QAApCA,OAAoC;EAClE,IAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAK;IAAE,OAAO;MAACC,EAAE,EAAED,GAAG,CAACC,EAAT;MAAaC,GAAG,EAAEF,GAAG,CAACG;IAAtB,CAAP;EAAsC,CAAjE,CAAjB;EACA,IAAMC,KAAK,GAAGT,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAK;IAAE,OAAO;MAACC,EAAE,EAAED,GAAG,CAACC,EAAT;MAAaI,IAAI,EAAEL,GAAG,CAACK;IAAvB,CAAP;EAAoC,CAA/D,CAAd;EAEA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,QAApB;MAAA,UAA+Bb,IAAI,CAACU;IAApC,EADJ,EAEKV,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAI;MACrB,IAAMS,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcf,QAAQ,CAACgB,MAAlC,CAAf;MACA,IAAMV,OAAO,GAAGN,QAAQ,CAACiB,MAAT,CAAgBL,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,CAAhB;MACA,IAAMM,MAAM,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,KAAK,CAACS,MAA/B,CAAf;MACA,IAAMR,IAAI,GAAGD,KAAK,CAACU,MAAN,CAAaC,MAAb,EAAqB,CAArB,EAAwB,CAAxB,CAAb;MAEJ,OAAQ,KAAC,IAAD,KAAR;IAIG,CAVF,CAFL;EAAA,EADJ;AAgBH,CApBD;;AAsBA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC7BV,SAAS,EAAE;IACPW,OAAO,EAAC,MADD;IAEPC,aAAa,EAAE,QAFR;IAGPC,GAAG,EAAE,EAHE;IAIPC,YAAY,EAAE,QAJP;IAKPC,MAAM,EAAE,CALD;IAMPC,OAAO,EAAE,EANF;IAOPC,WAAW,EAAE,CAPN;IAQPC,YAAY,EAAE,EARP;IASPC,KAAK,EAAE,KATA;IAUPC,WAAW,EAAC;EAVL,CADkB;EAa7BnB,QAAQ,EAAE;IACNoB,QAAQ,EAAE,EADJ;IAENC,SAAS,EAAE,QAFL;IAGNC,iBAAiB,EAAE,CAHb;IAINC,iBAAiB,EAAE;EAJb;AAbmB,CAAlB,CAAf;AAqBA,eAAerC,gBAAf"},"metadata":{},"sourceType":"module"}