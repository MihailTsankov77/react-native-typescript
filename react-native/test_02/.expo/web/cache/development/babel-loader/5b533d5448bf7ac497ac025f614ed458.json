{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AddQuestionsForm from \"./AddQuestionsForm\";\nimport List from \"./.newFolder/CustomComponents/CustomCardList\";\nimport QuestionCard from \"./QuestionCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddQuestionView = function (_Component) {\n  _inherits(AddQuestionView, _Component);\n\n  var _super = _createSuper(AddQuestionView);\n\n  function AddQuestionView() {\n    var _this;\n\n    _classCallCheck(this, AddQuestionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      questions: []\n    };\n\n    _this.sortQuestions = function () {\n      var _this$props = _this.props,\n          questions = _this$props.questions,\n          onPositionMove = _this$props.onPositionMove;\n      var sortedQuestions = questions.filter(function (quest) {\n        return quest.position;\n      });\n      mergeSort(sortedQuestions);\n      return sortedQuestions;\n    };\n\n    _this.handleMove = function (item, isUp) {\n      var id = _this.state.questions.indexOf(item);\n\n      var nextId = !isUp ? id + 1 : id - 1;\n      var updQuestions = _this.state.questions;\n      item.position += isUp ? -1 : +1;\n\n      _this.props.onPositionMove(item);\n\n      var Other = updQuestions[nextId];\n      Other.position += !isUp ? -1 : +1;\n\n      _this.props.onPositionMove(Other);\n\n      var _ref = [updQuestions[nextId], updQuestions[id]];\n      updQuestions[id] = _ref[0];\n      updQuestions[nextId] = _ref[1];\n\n      _this.setState({\n        questions: updQuestions\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddQuestionView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props === prevProps) return;\n      this.setState({\n        questions: this.props.questions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(_Fragment, {\n        children: [_jsx(AddQuestionsForm, {\n          onCreate: this.props.onCreate,\n          edited: this.props.edited\n        }), _jsx(List, {\n          onDelete: this.props.onDelete,\n          options: {\n            onMove: this.handleMove\n          },\n          onEdit: this.props.onEdit,\n          items: this.state.questions,\n          Card: QuestionCard\n        })]\n      });\n    }\n  }]);\n\n  return AddQuestionView;\n}(Component);\n\nexport { AddQuestionView as default };\n\nfunction mergeSort(arr) {\n  var half = arr.length / 2;\n\n  if (arr.length <= 1) {\n    return arr;\n  }\n\n  var left = arr.splice(0, half);\n  var right = arr;\n  return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right) {\n  var sortedArr = [];\n\n  while (left.length && right.length) {\n    if (left[0].position < right[0].position) {\n      sortedArr.push(left.shift());\n    } else {\n      sortedArr.push(right.shift());\n    }\n  }\n\n  return [].concat(sortedArr, _toConsumableArray(left), _toConsumableArray(right));\n}","map":{"version":3,"names":["React","Component","AddQuestionsForm","List","QuestionCard","AddQuestionView","state","questions","sortQuestions","props","onPositionMove","sortedQuestions","filter","quest","position","mergeSort","handleMove","item","isUp","id","indexOf","nextId","updQuestions","Other","setState","prevProps","onCreate","edited","onDelete","onMove","onEdit","arr","half","length","left","splice","right","merge","sortedArr","push","shift"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/AddQuestionView.tsx"],"sourcesContent":["import React, { Component, ComponentType } from 'react';\nimport Question from '../modules/Question';\nimport AddQuestionsForm from './AddQuestionsForm';\nimport List from \"./.newFolder/CustomComponents/CustomCardList\";\nimport QuestionCard from './QuestionCard';\n\ninterface AddQuestionViewProps {\n    onCreate: (question: Question) =>void;\n    edited: Question | undefined;\n    onDelete:(item: Question)=>void;\n    onEdit: (item: Question)=>void;\n    questions: Question[];\n    onPositionMove: (item: Question)=>void;\n}\ninterface AddQuestionViewState {\n    questions: Question[];\n}\n\nexport default class AddQuestionView extends Component<AddQuestionViewProps, AddQuestionViewState> {\n\n    state: Readonly<AddQuestionViewState> ={\n        questions: [],\n    }\n    componentDidUpdate(prevProps: Readonly<AddQuestionViewProps>): void {\n        if(this.props === prevProps) return;\n\n        this.setState({questions: this.props.questions})\n    }\n    \n    sortQuestions = () =>{\n        const {questions, onPositionMove} = this.props;\n        const sortedQuestions: Question[] = questions.filter(quest => quest.position);\n\n        mergeSort(sortedQuestions);\n\n        return sortedQuestions;\n    }\n\n   \n    handleMove = (item: Question, isUp: boolean) =>{\n\n        const id = this.state.questions.indexOf(item);\n        const nextId = !isUp? id+1 : id-1;\n        const updQuestions = this.state.questions;\n\n        item.position! += isUp? -1 : +1 ;\n        this.props.onPositionMove(item);\n\n        const Other = updQuestions[nextId];\n        Other.position! += !isUp? -1 : +1 ;\n        this.props.onPositionMove(Other);\n\n        [updQuestions[id], updQuestions[nextId]] = [updQuestions[nextId], updQuestions[id]];\n        this.setState({questions: updQuestions})\n        \n    }\n\n  render() {\n    return (<>\n        <AddQuestionsForm onCreate={this.props.onCreate} edited={this.props.edited}/>\n        <List<Question> onDelete={this.props.onDelete} options={{onMove: this.handleMove}} onEdit={this.props.onEdit} items={this.state.questions} Card={QuestionCard as unknown as ComponentType<Question>} />\n    </>);\n  }\n}\n\n\n\nfunction mergeSort  (arr: Array<Question>): Array<Question>{\n    const half = arr.length / 2;\n  \n    // the base case is array length <=1\n    if (arr.length <= 1) {\n      return arr;\n    }\n  \n    const left = arr.splice(0, half); // the first half of the array\n    const right = arr;\n    return merge(mergeSort(left), mergeSort(right));\n  }\n\n  function merge(left: Array<Question> , right: Array<Question>): Array<Question> {\n    let sortedArr: Array<Question> = []; // the sorted elements will go here\n  \n    while (left.length && right.length) {\n      // insert the smallest element to the sortedArr\n      if (left[0].position! < right[0].position!) {\n        sortedArr.push(left.shift() as Question);\n      } else {\n        sortedArr.push(right.shift() as Question);\n      }\n    }\n     // use spread operator and create a new array, combining the three arrays\n    return [...sortedArr, ...left, ...right];\n}\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}