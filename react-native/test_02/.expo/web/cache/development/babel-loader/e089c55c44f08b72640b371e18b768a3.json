{"ast":null,"code":"import React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Draggable from \"./.newFolder/CustomComponents/CustomElements/Draggable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function DropdownQuestion(_ref) {\n  var item = _ref.item,\n      options = _ref.options;\n  return _jsx(View, {\n    style: styles.container,\n    children: item.answers.map(function (ans) {\n      return _jsx(Draggable, {\n        dropArea: {\n          position: {\n            height: 100,\n            px: 0,\n            py: 100,\n            width: 100\n          }\n        },\n        itemView: _jsx(Image, {\n          source: {\n            uri: ans.picture,\n            width: 100,\n            height: 100\n          }\n        })\n      });\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","Draggable","DropdownQuestion","item","options","styles","container","answers","map","ans","position","height","px","py","width","uri","picture","StyleSheet","create","display","flexDirection","gap"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport { Image, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable from \"./.newFolder/CustomComponents/CustomElements/Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\nconst DropdownQuestion =  ({item, options}: DropdownQuestionProps) => {\n\n    return (\n        <View style={styles.container}>\n            {item.answers.map(ans => <Draggable dropArea={{position: {height: 100, px: 0, py: 100, width: 100}}} itemView={<Image source={{uri: ans.picture, width:100, height:100}} />}/>)}\n        </View>\n     );\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        \n    }\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAMA,OAAOC,SAAP;;;AAWA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,OAA4C;EAAA,IAA1CC,IAA0C,QAA1CA,IAA0C;EAAA,IAApCC,OAAoC,QAApCA,OAAoC;EAElE,OACI,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,UACKH,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG;MAAA,OAAI,KAAC,SAAD;QAAW,QAAQ,EAAE;UAACC,QAAQ,EAAE;YAACC,MAAM,EAAE,GAAT;YAAcC,EAAE,EAAE,CAAlB;YAAqBC,EAAE,EAAE,GAAzB;YAA8BC,KAAK,EAAE;UAArC;QAAX,CAArB;QAA4E,QAAQ,EAAE,KAAC,KAAD;UAAO,MAAM,EAAE;YAACC,GAAG,EAAEN,GAAG,CAACO,OAAV;YAAmBF,KAAK,EAAC,GAAzB;YAA8BH,MAAM,EAAC;UAArC;QAAf;MAAtF,EAAJ;IAAA,CAApB;EADL,EADJ;AAKH,CAPD;;AASA,IAAMN,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC7BZ,SAAS,EAAE;IACPa,OAAO,EAAC,MADD;IAEPC,aAAa,EAAE,QAFR;IAGPC,GAAG,EAAE;EAHE;AADkB,CAAlB,CAAf;AASA,eAAenB,gBAAf"},"metadata":{},"sourceType":"module"}