{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Picker } from '@react-native-picker/picker';\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { inputStyle } from \"./CustomInputContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar DropdownMain = function DropdownMain(_ref) {\n  var onChange = _ref.onChange,\n      data = _ref.data,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"rgba(236,236,236, 0.9)\" : _ref$bgColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"grey\" : _ref$color,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? \"rgba(230,230,230, 1)\" : _ref$borderColor,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 40 : _ref$height,\n      _ref$basicDropdown = _ref.basicDropdown,\n      basicDropdown = _ref$basicDropdown === void 0 ? true : _ref$basicDropdown,\n      prestine = _ref.prestine;\n  var items = [];\n\n  if (Platform.OS === 'web') {\n    if (basicDropdown) {\n      items = [_jsx(Picker.Item, {\n        style: DropdownMainStyle.item,\n        label: defaultValue[0],\n        value: defaultValue[1],\n        enabled: prestine\n      }, defaultValue[1])];\n    } else {\n      items = [_jsx(Picker.Item, {\n        style: DropdownMainStyle.item,\n        label: !prestine ? \"\" : defaultValue[0],\n        value: defaultValue[0]\n      }, defaultValue[1])];\n    }\n\n    data.forEach(function (item) {\n      return items.push(_jsx(Picker.Item, {\n        style: _objectSpread(_objectSpread({}, DropdownMainStyle.item), {}, {\n          backgroundColor: bgColor,\n          color: color\n        }),\n        label: item[0],\n        value: item[0]\n      }, item[1]));\n    });\n  }\n\n  return _jsx(_Fragment, {\n    children: Platform.OS !== 'web' ? _jsx(SelectDropdown, {\n      data: data.map(function (item) {\n        return item[0];\n      }),\n      onSelect: function onSelect(itemValue, itemIndex) {\n        onChange(itemValue);\n      },\n      defaultButtonText: defaultValue[0],\n      buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n        return basicDropdown ? selectedItem : '';\n      },\n      rowTextForSelection: function rowTextForSelection(item, index) {\n        return item;\n      },\n      buttonStyle: _objectSpread(_objectSpread({}, DropdownMainStyle.inputWeb), {}, {\n        height: height,\n        backgroundColor: bgColor,\n        borderColor: borderColor\n      }),\n      buttonTextStyle: _objectSpread(_objectSpread({}, DropdownMainStyle.dropdownTxtStyle), {}, {\n        color: color\n      }),\n      rowStyle: _objectSpread(_objectSpread({}, DropdownMainStyle.rowStyle), {}, {\n        backgroundColor: bgColor,\n        borderColor: borderColor\n      }),\n      rowTextStyle: _objectSpread(_objectSpread({}, DropdownMainStyle.rowTxtStyle), {}, {\n        color: color\n      }),\n      renderDropdownIcon: function renderDropdownIcon(isOpened) {\n        return _jsx(Text, {\n          children: \"fdgf\"\n        });\n      },\n      dropdownIconPosition: \"right\",\n      dropdownStyle: DropdownMainStyle.dropdownStyle\n    }) : _jsx(Picker, {\n      style: _objectSpread(_objectSpread({}, DropdownMainStyle.input), {}, {\n        height: height,\n        backgroundColor: bgColor,\n        color: color,\n        borderColor: borderColor\n      }),\n      itemStyle: DropdownMainStyle.item,\n      dropdownIconColor: color,\n      mode: \"dropdown\",\n      selectedValue: value,\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        onChange(itemValue);\n      },\n      children: items\n    })\n  });\n};\n\nvar DropdownMainStyle = StyleSheet.create({\n  input: _objectSpread(_objectSpread({}, inputStyle.input), {}, {\n    borderBottomStartRadius: 20,\n    borderBottomEndRadius: 20\n  }),\n  inputWeb: _objectSpread(_objectSpread({}, inputStyle.input), {}, {\n    borderBottomStartRadius: 0,\n    borderBottomEndRadius: 0\n  }),\n  dropdownTxtStyle: {\n    color: \"#444\",\n    textAlign: \"left\"\n  },\n  dropdownStyle: {\n    borderRadius: 10,\n    backgroundColor: \"transparent\"\n  },\n  item: {\n    fontSize: 20\n  },\n  rowStyle: {\n    backgroundColor: \"#EFEFEF\",\n    borderBottomColor: \"#C5C5C5\"\n  },\n  rowTxtStyle: {\n    color: \"#444\",\n    textAlign: \"left\"\n  }\n});\nexport default DropdownMain;","map":{"version":3,"names":["React","Picker","SelectDropdown","inputStyle","DropdownMain","onChange","data","value","defaultValue","bgColor","color","borderColor","height","basicDropdown","prestine","items","Platform","OS","DropdownMainStyle","item","forEach","push","backgroundColor","map","itemValue","itemIndex","selectedItem","index","inputWeb","dropdownTxtStyle","rowStyle","rowTxtStyle","isOpened","dropdownStyle","input","StyleSheet","create","borderBottomStartRadius","borderBottomEndRadius","textAlign","borderRadius","fontSize","borderBottomColor"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/workspace/Cheetsheet/CustomComponents/CustomElements/CustomDropdownMain.tsx"],"sourcesContent":["import React, { ReactNode} from \"react\";\nimport { Platform, StyleSheet, Text} from \"react-native\";\nimport { Colorable, InputField, onChangeInterface, Resizeable } from \"../shared/shared-interfaces\";\nimport {Picker} from '@react-native-picker/picker';\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { inputStyle } from \"./CustomInputContainer\";\n\ninterface DropdownMainProps extends Colorable, Resizeable, InputField, onChangeInterface{\n    defaultValue: [string, number];\n    data:  [string, number][];\n    basicDropdown?: boolean;\n    prestine: boolean;\n}\n\n//https://hossein-zare.github.io/react-native-dropdown-picker-website/docs/usage\n\nconst DropdownMain = ({onChange, data, value, defaultValue, bgColor = \"rgba(236,236,236, 0.9)\", \n                  color =\"grey\", borderColor = \"rgba(230,230,230, 1)\", height = 40, basicDropdown = true, prestine}: DropdownMainProps) => {\n    \n    let items: ReactNode[] =[];\n    if(Platform.OS ==='web'){\n                    \n    if(basicDropdown){\n        items =\n            [<Picker.Item style={DropdownMainStyle.item} key={defaultValue[1]} label={defaultValue[0]}\n                value={defaultValue[1]} enabled={prestine} />];\n    }else{\n        items= \n            [<Picker.Item style={DropdownMainStyle.item} key={defaultValue[1]} label={(!prestine)? \"\" : defaultValue[0]} \n                        value={defaultValue[0]} />];\n    }   \n\n    data.forEach(item => items.push(\n        <Picker.Item style={{...DropdownMainStyle.item, backgroundColor: bgColor, color: color}} key={item[1]} \n                    label={item[0]} value={item[0]}/>));\n  }\n                 \n    return (\n        <>\n          {(Platform.OS !=='web')?    \n           (<SelectDropdown\n            data={data.map(item => item[0])}\n            onSelect={(itemValue, itemIndex) =>{\n                onChange(itemValue);\n            }}\n            defaultButtonText={defaultValue[0]}\n            buttonTextAfterSelection={(selectedItem, index) => {\n                \n                return basicDropdown? selectedItem : '';\n            }}\n            rowTextForSelection={(item, index) => { return item;}}\n\n            buttonStyle={{...DropdownMainStyle.inputWeb, height: height, backgroundColor: bgColor, borderColor: borderColor}}\n            buttonTextStyle={{...DropdownMainStyle.dropdownTxtStyle, color: color}}\n            rowStyle={{...DropdownMainStyle.rowStyle, backgroundColor: bgColor, borderColor: borderColor}}\n            rowTextStyle={{...DropdownMainStyle.rowTxtStyle,color: color}}\n            \n            renderDropdownIcon={(isOpened) => {\n              return (\n                <Text>fdgf</Text>\n              );\n            }}\n            dropdownIconPosition={\"right\"}\n            dropdownStyle={DropdownMainStyle.dropdownStyle}\n          />)\n        :\n            (<Picker \n            style={{...DropdownMainStyle.input, height: height, backgroundColor: bgColor, color: color, borderColor: borderColor}}\n            itemStyle={DropdownMainStyle.item}\n            dropdownIconColor={color}\n            mode=\"dropdown\"\n\n            selectedValue={value}\n            onValueChange={(itemValue, itemIndex) =>{\n                onChange(itemValue);\n            }}>\n            {items}\n        </Picker>)\n        }\n        </>\n    );\n}\n\nconst DropdownMainStyle = StyleSheet.create({\n    \n    input: {\n        ...inputStyle.input,\n        borderBottomStartRadius: 20,\n        borderBottomEndRadius: 20,\n        \n    },\n    inputWeb: {\n        ...inputStyle.input,\n        borderBottomStartRadius: 0,\n        borderBottomEndRadius: 0,\n        \n    },\n    dropdownTxtStyle: { \n        color: \"#444\", \n        textAlign: \"left\" \n    },\n\n    dropdownStyle: { \n        borderRadius: 10,\n        backgroundColor: \"transparent\" \n    },\n    item:{\n        fontSize: 20,\n    },\n    rowStyle: {\n        backgroundColor: \"#EFEFEF\",\n        borderBottomColor: \"#C5C5C5\",\n      },\n      rowTxtStyle: { \n        color: \"#444\", textAlign: \"left\" \n    },\n});\n\n\n\nexport default DropdownMain;"],"mappings":"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"},"metadata":{},"sourceType":"module"}