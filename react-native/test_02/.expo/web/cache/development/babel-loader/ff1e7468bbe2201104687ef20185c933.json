{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TestQuestionCard = function (_Component) {\n  _inherits(TestQuestionCard, _Component);\n\n  var _super = _createSuper(TestQuestionCard);\n\n  function TestQuestionCard() {\n    _classCallCheck(this, TestQuestionCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TestQuestionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _selectedAnswers$filt, _item$answers;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          options = _this$props.options;\n      var selectedAnswers = options.selectedAnswers,\n          onSelectAnswer = options.onSelectAnswer;\n      var SelectedAnsw = ((_selectedAnswers$filt = selectedAnswers.filter(function (q) {\n        return q.id === item.id;\n      })[0]) == null ? void 0 : _selectedAnswers$filt.answers) || [];\n      return _jsxs(Card, {\n        len: \"r1\",\n        image: {\n          uri: item.picture\n        },\n        title: \"Question\",\n        children: [_jsx(Text, {\n          children: item.text\n        }), _jsx(Text, {\n          children: \"Answers:\"\n        }), (_item$answers = item.answers) == null ? void 0 : _item$answers.map(function (answer, index) {\n          return _jsx(MyCheckbox, {\n            checked: SelectedAnsw.includes(answer),\n            onChange: onSelectAnswer,\n            itemId: item.id,\n            answer: answer\n          }, index);\n        })]\n      });\n    }\n  }]);\n\n  return TestQuestionCard;\n}(Component);\n\nfunction MyCheckbox(_ref) {\n  var checked = _ref.checked,\n      onChange = _ref.onChange,\n      answer = _ref.answer,\n      itemId = _ref.itemId;\n\n  function onCheckmarkPress() {\n    onChange(answer, itemId);\n  }\n\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    children: [_jsx(Pressable, {\n      style: [styles.checkboxBase, checked && styles.checkboxChecked],\n      onPress: onCheckmarkPress,\n      children: checked && _jsx(Ionicons, {\n        name: \"checkmark\",\n        size: 24,\n        color: \"white\"\n      })\n    }), _jsxs(Text, {\n      children: [\" \", answer.text]\n    }), _jsx(Image, {\n      s: true\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: 'coral',\n    backgroundColor: 'transparent'\n  },\n  checkboxChecked: {\n    backgroundColor: 'coral'\n  },\n  appContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  appTitle: {\n    marginVertical: 16,\n    fontWeight: 'bold',\n    fontSize: 24\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  checkboxLabel: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18\n  }\n});\nexport default TestQuestionCard;","map":{"version":3,"names":["React","Component","Card","Ionicons","TestQuestionCard","props","item","options","selectedAnswers","onSelectAnswer","SelectedAnsw","filter","q","id","answers","uri","picture","text","map","answer","index","includes","MyCheckbox","checked","onChange","itemId","onCheckmarkPress","flexDirection","styles","checkboxBase","checkboxChecked","StyleSheet","create","width","height","justifyContent","alignItems","borderRadius","borderWidth","borderColor","backgroundColor","appContainer","flex","appTitle","marginVertical","fontWeight","fontSize","checkboxContainer","checkboxLabel","marginLeft"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/TestQuestionCard.tsx"],"sourcesContent":["\nimport React, { Component, useState } from \"react\";\nimport { Image, Pressable, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question from \"../modules/Question\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\n\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { Selected } from \"./StartTest\";\n\ninterface TestQuestionCardProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\nclass TestQuestionCard extends Component<TestQuestionCardProps, {}> {\n\n    render() {\n        const {item, options} = this.props;\n        const {selectedAnswers, onSelectAnswer} = options;\n\n        const SelectedAnsw = selectedAnswers.filter(q => q.id === item.id)[0]?.answers || [];\n        \n        \n        return (\n            <Card len='r1' image={{uri: item.picture}} title={\"Question\"}>\n                <Text>{item.text}</Text>\n                <Text>Answers:</Text>\n                {item.answers?.map((answer, index) =>{\n                    return <MyCheckbox  checked={SelectedAnsw.includes(answer)} onChange={onSelectAnswer} itemId={item.id!} key={index} answer={answer} />\n                })}\n                \n            </Card>\n        );\n\n    }\n}\ninterface MyCheckboxProps{\n    itemId: number;\n    checked: boolean\n    onChange: (ans: Answer, itemId: number)=> void;\n    answer: Answer;\n}\n\nfunction MyCheckbox({ checked, onChange, answer, itemId }: MyCheckboxProps) {\n\n    function onCheckmarkPress() {\n      onChange(answer, itemId);\n    }\n  \n    return (<View style={{flexDirection: \"row\"}}>\n      <Pressable\n        style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n        onPress={onCheckmarkPress}>\n        {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n      </Pressable>\n      <Text> {answer.text}</Text>\n      <Image s></Image>\n    </View>);\n  }\n\n  const styles = StyleSheet.create({\n    checkboxBase: {\n      width: 24,\n      height: 24,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 4,\n      borderWidth: 2,\n      borderColor: 'coral',\n      backgroundColor: 'transparent',\n    },\n  \n    checkboxChecked: {\n      backgroundColor: 'coral',\n    },\n  \n    appContainer: {\n      flex: 1,\n      alignItems: 'center',\n    },\n  \n    appTitle: {\n      marginVertical: 16,\n      fontWeight: 'bold',\n      fontSize: 24,\n    },\n  \n    checkboxContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  \n    checkboxLabel: {\n      marginLeft: 8,\n      fontWeight: 500,\n      fontSize: 18,\n    },\n  });\n\n \nexport default TestQuestionCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}