{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Navbar from \"./Components/.newFolder/CustomComponents/CustomNavbar\";\nimport Btn from \"./Components/.newFolder/CustomComponents/CustomButton\";\nimport AddQuestionsForm from \"./Components/AddQuestionsForm\";\nimport { QuestionRepo } from \"./dao/repository\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Views;\n\n(function (Views) {\n  Views[Views[\"HomePage\"] = 0] = \"HomePage\";\n  Views[Views[\"StartTest\"] = 1] = \"StartTest\";\n})(Views || (Views = {}));\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      views: Views.HomePage,\n      isScrolled: false,\n      questions: [],\n      edited: undefined\n    };\n\n    _this.handleCreateQuestions = function () {\n      var _ref = _asyncToGenerator(function* (question) {\n        if (!_this.state.edited) {\n          var created = yield QuestionRepo.update(question);\n\n          _this.setState(function (_ref2) {\n            var questions = _ref2.questions;\n            return {\n              questions: questions.concat(created)\n            };\n          });\n        } else {\n          var updated = yield QuestionRepo.update(question);\n\n          _this.setState(function (_ref3) {\n            var questions = _ref3.questions;\n            return {\n              questions: questions.map(function (qu) {\n                return qu.id === updated.id ? updated : qu;\n              })\n            };\n          });\n\n          _this.setState({\n            edited: undefined\n          });\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteQuestion = function () {\n      var _ref4 = _asyncToGenerator(function* (question) {\n        yield QuestionRepo.delete(question.id);\n\n        _this.setState(function (_ref5) {\n          var questions = _ref5.questions;\n          return {\n            questions: questions.filter(function (qu) {\n              return qu.id !== question.id;\n            })\n          };\n        });\n      });\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEditQuestion = function (question) {\n      _this.setState({\n        edited: question\n      });\n    };\n\n    _this.handleScroll = function (event) {\n      if (event.nativeEvent.contentOffset.y >= 200) {\n        _this.setState({\n          isScrolled: true\n        });\n      }\n\n      if (event.nativeEvent.contentOffset.y <= 50) {\n        _this.setState({\n          isScrolled: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(function* () {\n        var allQuestions = yield QuestionRepo.findAll();\n        this.setState({\n          questions: allQuestions\n        });\n      });\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSwitchView\",\n    value: function handleSwitchView() {\n      switch (this.state.views) {\n        case Views.HomePage:\n          return _jsx(AddQuestionsForm, {\n            onCreate: this.handleCreateQuestions,\n            edited: this.state.edited\n          });\n\n        case Views.StartTest:\n          return _jsx(StartTest, {});\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(_Fragment, {\n        children: [_jsxs(Navbar, {\n          title: \"Mudele Test\",\n          stickyNav: this.state.isScrolled,\n          children: [_jsx(Btn, {\n            value: \"Create Questions\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.HomePage\n              });\n            },\n            bgColor: \"gray\"\n          }), _jsx(Btn, {\n            value: \"Start Test\",\n            event: function event() {\n              return _this2.setState({\n                views: Views.HomePage\n              });\n            },\n            bgColor: \"gray\"\n          })]\n        }), _jsx(ScrollView, {\n          onScroll: this.handleScroll,\n          children: this.handleSwitchView()\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","Navbar","Btn","AddQuestionsForm","QuestionRepo","Views","App","state","views","HomePage","isScrolled","questions","edited","undefined","handleCreateQuestions","question","created","update","setState","concat","updated","map","qu","id","handleDeleteQuestion","delete","filter","handleEditQuestion","handleScroll","event","nativeEvent","contentOffset","y","allQuestions","findAll","StartTest","handleSwitchView"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/App.tsx"],"sourcesContent":["import React, { Component, ComponentType } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport AddMovieForm from \"./Components/AddQuestionsForm\";\nimport List from \"./Components/.newFolder/CustomComponents/CustomCardList\";\nimport Navbar from \"./Components/.newFolder/CustomComponents/CustomNavbar\";\nimport Btn from \"./Components/.newFolder/CustomComponents/CustomButton\";\nimport WatchedCard from \"./Components/card\";\nimport AddQuestionsForm from \"./Components/AddQuestionsForm\";\nimport { QuestionRepo } from \"./dao/repository\";\nimport Question from \"./modules/Question\";\n\nenum Views {\n  HomePage,\n  StartTest,\n}\n\ninterface AppState{\n  \n  views: Views;\n  isScrolled: boolean;\n  questions: Question[];\n  edited: Question | undefined;\n  \n}\n\nclass App extends Component<{},AppState> {\n\n  state: Readonly<AppState> ={\n  \n    views: Views.HomePage,\n    isScrolled: false,\n    \n    questions: [],\n    edited: undefined,\n  }\n \n\nasync componentDidMount() {\n  const allQuestions = await QuestionRepo.findAll();\n  this.setState({questions: allQuestions});\n}\n\n  \n\n\n  handleCreateQuestions = async (question: Question) =>{\n    if(!this.state.edited){\n      const created = await QuestionRepo.update(question);\n      this.setState(({questions}) => ({questions: questions.concat(created)}));\n    }else{\n      const updated = await QuestionRepo.update(question);\n      this.setState(({questions}) => ({questions: questions.map((qu) => qu.id === updated.id? updated: qu)}));\n      this.setState({edited: undefined});  \n    }\n  }\n\n  handleDeleteQuestion = async (question: Question) =>{\n      await QuestionRepo.delete(question.id!);\n      this.setState(({questions}) => ({questions: questions.filter((qu) => qu.id!== question.id)}));\n    \n  }\n  \n  handleEditQuestion =  (question: Question)=>{\n    this.setState({edited: question});\n  }\n  \n\n  handleScroll = (event: { nativeEvent: { contentOffset: { y: number; }; }; }) => {   \n    if(event.nativeEvent.contentOffset.y >= 200){\n      this.setState({isScrolled: true});\n    }\n    if(event.nativeEvent.contentOffset.y <= 50){\n      this.setState({isScrolled: false});\n    } \n}\n \n  handleSwitchView(){\n   \n    switch(this.state.views){\n      case Views.HomePage:\n        return <AddQuestionsForm onCreate={this.handleCreateQuestions} edited={this.state.edited}/>\n      case Views.StartTest:\n        return <StartTest/>\n      \n    }\n  }\n  \n  render(): React.ReactNode {\n    return (\n      <>\n      <Navbar title=\"Mudele Test\" stickyNav={this.state.isScrolled}>\n          <Btn value=\"Create Questions\" event={() => this.setState({views: Views.HomePage})} bgColor='gray'/>\n          <Btn value=\"Start Test\" event={() => this.setState({views: Views.HomePage})} bgColor='gray'/>\n          \n      </Navbar>\n      <ScrollView onScroll={this.handleScroll}>\n\n      {this.handleSwitchView()}\n      </ScrollView>\n      </>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}