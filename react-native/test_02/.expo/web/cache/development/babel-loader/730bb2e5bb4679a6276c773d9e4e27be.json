{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Draggable from \"./Draggable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function (_Component) {\n  _inherits(DropdownQuestion, _Component);\n\n  var _super = _createSuper(DropdownQuestion);\n\n  function DropdownQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownQuestion);\n\n    _this = _super.call(this, props);\n\n    _this.handleDropAreasLayout = function (id) {\n      return function () {\n        if (_this.state.dropAreaRefs[id] === null) {\n          var _this$state$dropAreaR, _this$state$dropAreaR2;\n\n          (_this$state$dropAreaR = _this.state.dropAreaRefs[id]) == null ? void 0 : (_this$state$dropAreaR2 = _this$state$dropAreaR.current) == null ? void 0 : _this$state$dropAreaR2.measure(function (fx, fy, width, height, px, py) {\n            return _this.setState({\n              dropAreasPositions: _this.state.dropAreasPositions.concat({\n                px: px,\n                py: py,\n                width: width,\n                height: height\n              })\n            });\n          });\n        }\n      };\n    };\n\n    var refs = [];\n\n    for (var i = 0; i < _this.props.item.answers.length; i++) {\n      refs.push(React.createRef());\n    }\n\n    _this.state = {\n      dropAreasPositions: [],\n      dropAreaRefs: refs\n    };\n    return _this;\n  }\n\n  _createClass(DropdownQuestion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          options = _this$props.options;\n      var pictures = item.answers.map(function (ans) {\n        return {\n          id: ans.id,\n          uri: ans.picture\n        };\n      });\n      var texts = item.answers.map(function (ans) {\n        return {\n          id: ans.id,\n          text: ans.text\n        };\n      });\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.question,\n          children: item.text\n        }), _jsx(View, {\n          style: styles.row,\n          children: item.answers.map(function (ans, id) {\n            var index = Math.round(Math.random() * (texts.length - 1));\n            var text = texts.splice(index, 1)[0];\n            return _jsx(View, {\n              ref: _this2.state.dropAreaRefs[id],\n              onLayout: _this2.handleDropAreasLayout(id),\n              style: styles.dropArea,\n              children: _jsx(Text, {\n                children: text.text\n              })\n            }, ans.id);\n          })\n        }), _jsx(View, {\n          style: styles.row,\n          children: item.answers.map(function (ans) {\n            var index = Math.round(Math.random() * (pictures.length - 1));\n            var picture = pictures.splice(index, 1)[0];\n            return _jsx(Draggable, {\n              dropAreas: _this2.state.dropAreasPositions,\n              itemView: _jsx(Image, {\n                source: {\n                  uri: picture.uri,\n                  width: 100,\n                  height: 100\n                }\n              })\n            }, ans.id);\n          })\n        })]\n      });\n    }\n  }]);\n\n  return DropdownQuestion;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n    alignContent: 'center',\n    margin: 5,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25,\n    width: \"90%\",\n    borderColor: \"#E0E0E0\"\n  },\n  question: {\n    fontSize: 40,\n    alignSelf: \"center\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#E0E0E0\"\n  },\n  row: {\n    padding: 5,\n    display: 'flex',\n    flexDirection: \"row\",\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  dropArea: {\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    borderWidth: 3,\n    borderColor: \"#E0E0E1\",\n    height: 150,\n    width: 150,\n    padding: 10,\n    alignItems: 'center',\n    alignContent: 'center'\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","Component","Draggable","DropdownQuestion","props","handleDropAreasLayout","id","state","dropAreaRefs","current","measure","fx","fy","width","height","px","py","setState","dropAreasPositions","concat","refs","i","item","answers","length","push","createRef","options","pictures","map","ans","uri","picture","texts","text","styles","container","question","row","index","Math","round","random","splice","dropArea","StyleSheet","create","display","flexDirection","gap","alignContent","margin","padding","borderWidth","borderRadius","borderColor","fontSize","alignSelf","borderBottomWidth","borderBottomColor","flexWrap","justifyContent","alignItems"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React, { Component, useState } from \"react\";\nimport { Dimensions, Image, LayoutChangeEvent, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable, { position } from \"./Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\ninterface DropdownQuestionState {\n    dropAreasPositions: position[];\n    dropAreaRefs: React.Ref<View>[]\n}\n\nclass DropdownQuestion extends Component<DropdownQuestionProps, DropdownQuestionState> {\n    \n    \n    \n    constructor(props: DropdownQuestionProps){\n        super(props);\n        const refs: React.Ref<View>[] =[];\n        for (let i = 0; i < this.props.item.answers.length; i++) {\n            refs.push(React.createRef<View>());\n        }\n        this.state ={\n            dropAreasPositions: [],\n            dropAreaRefs: refs //Array.from({length: this.props.item.answers.length}, (_, i) => React.createRef<View>()),\n        }\n    }\n    \n    \n\n    handleDropAreasLayout = (id: number) => () =>{\n        if(this.state.dropAreaRefs[id]===null){\n            this.state.dropAreaRefs[id]?.current?.measure((fx, fy, width, height, px, py) => \n        this.setState({dropAreasPositions: this.state.dropAreasPositions.concat(\n            {px: px ,\n            py: py ,\n            width: width,\n            height: height})}));\n        }\n    }\n    render() {\n\n        const {item, options} = this.props\n        \n        const pictures = item.answers.map(ans =>  { return {id: ans.id, uri: ans.picture}});\n        const texts = item.answers.map(ans =>  { return {id: ans.id, text: ans.text}});\n\n    \n    return (\n        <View style={styles.container} >\n            <Text style={styles.question}>{item.text}</Text>\n            <View  style={styles.row}>\n                {item.answers.map((ans, id) => {\n                const index = Math.round(Math.random()*(texts.length-1));\n                const text = texts.splice(index, 1)[0];\n                return (\n                    <View ref={this.state.dropAreaRefs[id]} key={ans.id} onLayout={this.handleDropAreasLayout(id)} style={styles.dropArea}>\n                        <Text>{text.text}</Text>\n                    </View>\n                );})} \n            </View>\n            <View style={styles.row}  >\n                {item.answers.map(ans => {\n                    const index  = Math.round(Math.random()*(pictures.length-1));\n                    const picture = pictures.splice(index, 1)[0];\n                return (\n                    <Draggable key={ans.id} dropAreas={this.state.dropAreasPositions} \n                        itemView={<Image source={{uri: picture.uri, width:100, height:100}} />}/>\n                );})}\n            </View>\n        </View>\n     );\n    }\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        alignContent: 'center',\n        margin: 5,\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n        width: \"90%\",\n        borderColor:\"#E0E0E0\",\n    },\n    question: {\n        fontSize: 40,\n        alignSelf: \"center\",\n        borderBottomWidth: 2,  \n        borderBottomColor: \"#E0E0E0\",\n    },\n    row: {\n        padding:5,\n        display: 'flex',\n        flexDirection:\"row\",\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n    },\n    dropArea: {\n        flexDirection: 'column',\n        flexWrap: 'nowrap',\n        borderWidth: 3,  \n        borderColor: \"#E0E0E1\",\n        height: 150,\n        width: 150,\n        padding: 10,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;;;;;AAMA,OAAOC,SAAP;;;;IAgBMC,gB;;;;;EAIF,0BAAYC,KAAZ,EAAyC;IAAA;;IAAA;;IACrC,0BAAMA,KAAN;;IADqC,MAczCC,qBAdyC,GAcjB,UAACC,EAAD;MAAA,OAAgB,YAAK;QACzC,IAAG,MAAKC,KAAL,CAAWC,YAAX,CAAwBF,EAAxB,MAA8B,IAAjC,EAAsC;UAAA;;UAClC,+BAAKC,KAAL,CAAWC,YAAX,CAAwBF,EAAxB,sEAA6BG,OAA7B,4CAAsCC,OAAtC,CAA8C,UAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,EAAxB,EAA4BC,EAA5B;YAAA,OAClD,MAAKC,QAAL,CAAc;cAACC,kBAAkB,EAAE,MAAKX,KAAL,CAAWW,kBAAX,CAA8BC,MAA9B,CAC/B;gBAACJ,EAAE,EAAEA,EAAL;gBACAC,EAAE,EAAEA,EADJ;gBAEAH,KAAK,EAAEA,KAFP;gBAGAC,MAAM,EAAEA;cAHR,CAD+B;YAArB,CAAd,CADkD;UAAA,CAA9C;QAMH;MACJ,CATuB;IAAA,CAdiB;;IAErC,IAAMM,IAAuB,GAAE,EAA/B;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,OAAhB,CAAwBC,MAA5C,EAAoDH,CAAC,EAArD,EAAyD;MACrDD,IAAI,CAACK,IAAL,CAAUzB,KAAK,CAAC0B,SAAN,EAAV;IACH;;IACD,MAAKnB,KAAL,GAAY;MACRW,kBAAkB,EAAE,EADZ;MAERV,YAAY,EAAEY;IAFN,CAAZ;IANqC;EAUxC;;;;WAcD,kBAAS;MAAA;;MAEL,kBAAwB,KAAKhB,KAA7B;MAAA,IAAOkB,IAAP,eAAOA,IAAP;MAAA,IAAaK,OAAb,eAAaA,OAAb;MAEA,IAAMC,QAAQ,GAAGN,IAAI,CAACC,OAAL,CAAaM,GAAb,CAAiB,UAAAC,GAAG,EAAK;QAAE,OAAO;UAACxB,EAAE,EAAEwB,GAAG,CAACxB,EAAT;UAAayB,GAAG,EAAED,GAAG,CAACE;QAAtB,CAAP;MAAsC,CAAjE,CAAjB;MACA,IAAMC,KAAK,GAAGX,IAAI,CAACC,OAAL,CAAaM,GAAb,CAAiB,UAAAC,GAAG,EAAK;QAAE,OAAO;UAACxB,EAAE,EAAEwB,GAAG,CAACxB,EAAT;UAAa4B,IAAI,EAAEJ,GAAG,CAACI;QAAvB,CAAP;MAAoC,CAA/D,CAAd;MAGJ,OACI,MAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACE,QAApB;UAAA,UAA+Bf,IAAI,CAACY;QAApC,EADJ,EAEI,KAAC,IAAD;UAAO,KAAK,EAAEC,MAAM,CAACG,GAArB;UAAA,UACKhB,IAAI,CAACC,OAAL,CAAaM,GAAb,CAAiB,UAACC,GAAD,EAAMxB,EAAN,EAAa;YAC/B,IAAMiC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeT,KAAK,CAACT,MAAN,GAAa,CAA5B,CAAX,CAAd;YACA,IAAMU,IAAI,GAAGD,KAAK,CAACU,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAb;YACA,OACI,KAAC,IAAD;cAAM,GAAG,EAAE,MAAI,CAAChC,KAAL,CAAWC,YAAX,CAAwBF,EAAxB,CAAX;cAAqD,QAAQ,EAAE,MAAI,CAACD,qBAAL,CAA2BC,EAA3B,CAA/D;cAA+F,KAAK,EAAE6B,MAAM,CAACS,QAA7G;cAAA,UACI,KAAC,IAAD;gBAAA,UAAOV,IAAI,CAACA;cAAZ;YADJ,GAA6CJ,GAAG,CAACxB,EAAjD,CADJ;UAIG,CAPF;QADL,EAFJ,EAYI,KAAC,IAAD;UAAM,KAAK,EAAE6B,MAAM,CAACG,GAApB;UAAA,UACKhB,IAAI,CAACC,OAAL,CAAaM,GAAb,CAAiB,UAAAC,GAAG,EAAI;YACrB,IAAMS,KAAK,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAed,QAAQ,CAACJ,MAAT,GAAgB,CAA/B,CAAX,CAAf;YACA,IAAMQ,OAAO,GAAGJ,QAAQ,CAACe,MAAT,CAAgBJ,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAhB;YACJ,OACI,KAAC,SAAD;cAAwB,SAAS,EAAE,MAAI,CAAChC,KAAL,CAAWW,kBAA9C;cACI,QAAQ,EAAE,KAAC,KAAD;gBAAO,MAAM,EAAE;kBAACa,GAAG,EAAEC,OAAO,CAACD,GAAd;kBAAmBlB,KAAK,EAAC,GAAzB;kBAA8BC,MAAM,EAAC;gBAArC;cAAf;YADd,GAAgBgB,GAAG,CAACxB,EAApB,CADJ;UAGG,CANF;QADL,EAZJ;MAAA,EADJ;IAwBC;;;;EA5D0BL,S;;AA+D/B,IAAMkC,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC7BV,SAAS,EAAE;IACPW,OAAO,EAAC,MADD;IAEPC,aAAa,EAAE,QAFR;IAGPC,GAAG,EAAE,EAHE;IAIPC,YAAY,EAAE,QAJP;IAKPC,MAAM,EAAE,CALD;IAMPC,OAAO,EAAE,EANF;IAOPC,WAAW,EAAE,CAPN;IAQPC,YAAY,EAAE,EARP;IASPzC,KAAK,EAAE,KATA;IAUP0C,WAAW,EAAC;EAVL,CADkB;EAa7BlB,QAAQ,EAAE;IACNmB,QAAQ,EAAE,EADJ;IAENC,SAAS,EAAE,QAFL;IAGNC,iBAAiB,EAAE,CAHb;IAINC,iBAAiB,EAAE;EAJb,CAbmB;EAmB7BrB,GAAG,EAAE;IACDc,OAAO,EAAC,CADP;IAEDL,OAAO,EAAE,MAFR;IAGDC,aAAa,EAAC,KAHb;IAIDY,QAAQ,EAAE,MAJT;IAKDC,cAAc,EAAE;EALf,CAnBwB;EA0B7BjB,QAAQ,EAAE;IACNI,aAAa,EAAE,QADT;IAENY,QAAQ,EAAE,QAFJ;IAGNP,WAAW,EAAE,CAHP;IAINE,WAAW,EAAE,SAJP;IAKNzC,MAAM,EAAE,GALF;IAMND,KAAK,EAAE,GAND;IAONuC,OAAO,EAAE,EAPH;IAQNU,UAAU,EAAE,QARN;IASNZ,YAAY,EAAE;EATR;AA1BmB,CAAlB,CAAf;AAuCA,eAAe/C,gBAAf"},"metadata":{},"sourceType":"module"}