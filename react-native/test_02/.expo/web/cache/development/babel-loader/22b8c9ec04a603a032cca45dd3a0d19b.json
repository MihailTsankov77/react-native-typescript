{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Children } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getSizeF, isSmallScreen } from \"./shared/shared-functions\";\nimport { CustomStyle } from \"./shared/shared-styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getSize = getSizeF('33%', '50%', '100%', 200, 1100, 1600);\n\nvar Card = function Card(_ref) {\n  var image = _ref.image,\n      children = _ref.children,\n      title = _ref.title,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"white\" : _ref$bgColor,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? \"#E0E0E0\" : _ref$borderColor,\n      _ref$len = _ref.len,\n      len = _ref$len === void 0 ? 'r3' : _ref$len;\n  var childs = Children.toArray(Children.toArray(children));\n  var buttons = childs.filter(function (node) {\n    return typeof node !== 'string' && typeof node !== 'number' ? node.type.name === 'Btn' : false;\n  });\n  var labels = [];\n  childs.filter(function (node) {\n    return typeof node !== 'string' && typeof node !== 'number' ? node.type.name !== 'Btn' : false;\n  }).map(function (label, index) {\n    labels.push(_jsx(View, {\n      style: CardStyle.labelContainer,\n      children: label\n    }, index));\n  });\n  var widthContainer = isSmallScreen(550) ? '100%' : '50%';\n  return _jsx(View, {\n    style: _objectSpread(_objectSpread({}, CardStyle.Card), {}, {\n      backgroundColor: bgColor,\n      width: getSize(len)\n    }),\n    children: _jsxs(View, {\n      style: _objectSpread(_objectSpread({}, CardStyle.container), {}, {\n        borderColor: borderColor\n      }),\n      children: [_jsx(View, {\n        style: CardStyle.titleContainer,\n        children: _jsx(Text, {\n          selectable: false,\n          style: CardStyle.title,\n          children: title\n        })\n      }), _jsxs(View, {\n        style: CustomStyle.row,\n        children: [image !== '' && _jsx(View, {\n          style: _objectSpread(_objectSpread({}, CardStyle.imageContainer), {}, {\n            width: widthContainer\n          }),\n          children: _jsx(Image, {\n            source: {\n              uri: image == null ? void 0 : image.uri\n            },\n            style: _objectSpread(_objectSpread({}, CardStyle.image), {}, {\n              borderColor: borderColor\n            })\n          })\n        }), labels.length > 0 && _jsx(ScrollView, {\n          nestedScrollEnabled: true,\n          style: _objectSpread(_objectSpread({}, CardStyle.textContainer), {}, {\n            width: widthContainer,\n            borderColor: borderColor\n          }),\n          children: labels\n        })]\n      }), _jsx(View, {\n        style: CardStyle.buttonsContainer,\n        children: buttons\n      })]\n    })\n  });\n};\n\nvar ImageSize = isSmallScreen(550) ? 140 : 200;\nvar CardStyle = StyleSheet.create({\n  Card: {\n    width: \"100%\",\n    display: \"flex\",\n    flexFlow: \"colum nowrap\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  titleContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 30,\n    padding: 5,\n    paddingBottom: 10\n  },\n  container: {\n    width: \"90%\",\n    display: 'flex',\n    flexFlow: \"row wrap\",\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25\n  },\n  image: {\n    borderRadius: ImageSize,\n    width: ImageSize,\n    height: ImageSize,\n    borderBottomWidth: ImageSize / 50,\n    borderRightWidth: ImageSize / 50\n  },\n  imageContainer: {\n    alignItems: 'center',\n    padding: 10\n  },\n  buttonsContainer: _objectSpread(_objectSpread({\n    padding: 5\n  }, CustomStyle.row), {}, {\n    justifyContent: \"space-around\"\n  }),\n  textContainer: {\n    display: 'flex',\n    alignContent: 'center',\n    height: ImageSize,\n    borderTopWidth: 2,\n    borderBottomWidth: 2,\n    borderBottomLeftRadius: 5,\n    borderBottomRightRadius: 5,\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5\n  },\n  labelContainer: {\n    width: '100%',\n    display: 'flex',\n    alignContent: 'flex-start',\n    padding: 3,\n    paddingBottom: 5\n  }\n});\nexport default Card;","map":{"version":3,"names":["React","Children","getSizeF","isSmallScreen","CustomStyle","getSize","Card","image","children","title","bgColor","borderColor","len","childs","toArray","buttons","filter","node","type","name","labels","map","label","index","push","CardStyle","labelContainer","widthContainer","backgroundColor","width","container","titleContainer","row","imageContainer","uri","length","textContainer","buttonsContainer","ImageSize","StyleSheet","create","display","flexFlow","alignItems","padding","fontSize","paddingBottom","borderWidth","borderRadius","height","borderBottomWidth","borderRightWidth","justifyContent","alignContent","borderTopWidth","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/.newFolder/CustomComponents/CustomCard.tsx"],"sourcesContent":["import React, {Children, JSXElementConstructor, ReactElement, ReactNode} from \"react\";\nimport { Image, ScrollView, StyleSheet } from \"react-native\";\nimport { Text, View } from \"react-native\";\nimport { Colorable, hasTitle, Resizeable } from \"./shared/shared-interfaces\";\nimport { getSizeF, isSmallScreen } from \"./shared/shared-functions\";\nimport { CustomStyle } from \"./shared/shared-styles\";\n\ninterface CardProps extends Colorable, Resizeable, hasTitle{\n    children?: ReactNode;\n}\n\nconst getSize = getSizeF('33%', '50%', '100%', 200, 1100, 1600);\n\nconst Card = ({image, children, title, bgColor = \"white\", borderColor=\"#E0E0E0\", len='r3'}: CardProps) => {\n    \n    const childs = Children.toArray(Children.toArray(children));\n    const buttons: ReactNode[] = childs.filter(node => \n            typeof node !== 'string' && typeof node !== 'number' ?\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                (node as ReactElement<any, string | JSXElementConstructor<any>>).type.name === 'Btn' : false);\n\n    const labels: ReactNode[] = [];\n    childs.filter(node => \n            typeof node !== 'string' && typeof node !== 'number' ?\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                (node as ReactElement<any, string | JSXElementConstructor<any>>).type.name !== 'Btn' : false)\n        .map((label, index) =>{\n            labels.push(<View key={index} style={CardStyle.labelContainer}>{label}</View>)});\n\n    const widthContainer = isSmallScreen(550)? '100%' : '50%';\n        \n    return (\n        <View style={{...CardStyle.Card, backgroundColor: bgColor,  width: getSize(len)}}>\n            <View style={{...CardStyle.container, borderColor: borderColor}} >\n\n                <View style={CardStyle.titleContainer}>\n                    <Text selectable={false} style={CardStyle.title}>{title}</Text>\n                </View>\n\n                <View style={CustomStyle.row}>\n                    {image!=='' &&\n                    <View style={{...CardStyle.imageContainer, width: widthContainer}}>\n                        <Image source={{uri: image?.uri}} style={{...CardStyle.image, borderColor: borderColor, }}/>\n                    </View>}\n\n                    {labels.length>0 &&\n                    <ScrollView nestedScrollEnabled style={{...CardStyle.textContainer, width: widthContainer, borderColor: borderColor}}>\n                        {labels}   \n                    </ScrollView>}\n                    \n                </View >\n\n                 <View style={CardStyle.buttonsContainer}>\n                    {buttons}\n                </View>\n\n            </View>   \n        </View>\n    );\n}\n\nconst ImageSize = isSmallScreen(550)? 140: 200;\n\nconst CardStyle = StyleSheet.create({\n\n    Card:{\n        width: \"100%\",\n        display: \"flex\",\n        flexFlow: \"colum nowrap\",\n        alignItems: \"center\",\n        padding:10,\n    },\n\n    titleContainer:{\n        width: '100%',\n        alignItems:'center',\n    },\n\n    title:{\n        fontSize:30,\n        padding:5,\n        paddingBottom:10,\n    },\n\n    container:{\n        width: \"90%\",\n        display: 'flex',\n        flexFlow: \"row wrap\",\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n    },\n\n    image:{\n        borderRadius: ImageSize,\n        width: ImageSize,\n        height: ImageSize,\n        borderBottomWidth: ImageSize/50,\n        borderRightWidth: ImageSize/50,\n    },\n\n    imageContainer:{\n        alignItems:'center',\n        padding: 10,\n    },\n\n    buttonsContainer:{\n        padding: 5,\n        ...CustomStyle.row,\n        justifyContent:\"space-around\"\n    },\n\n    textContainer:{\n        display: 'flex',\n        alignContent: 'center',\n        height: ImageSize,\n        borderTopWidth: 2,\n        borderBottomWidth: 2,\n        borderBottomLeftRadius: 5,\n        borderBottomRightRadius: 5,\n        borderTopLeftRadius: 5,\n        borderTopRightRadius: 5,\n    },\n\n    labelContainer:{\n        width: '100%',\n        display: 'flex',\n        alignContent: 'flex-start',\n        padding: 3,\n        paddingBottom: 5,\n    },\n   \n});\n\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module"}