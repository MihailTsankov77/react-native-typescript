{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Draggable from \"./Draggable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function DropdownQuestion(_ref) {\n  var item = _ref.item,\n      options = _ref.options;\n  var pictures = item.answers.map(function (ans) {\n    return {\n      id: ans.id,\n      uri: ans.picture\n    };\n  });\n  var texts = item.answers.map(function (ans) {\n    return {\n      id: ans.id,\n      text: ans.text\n    };\n  });\n  var containerRef = React.createRef();\n\n  var _useState = useState({\n    width: 0,\n    height: 0,\n    px: 0,\n    py: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      PositionContainer = _useState2[0],\n      setPositionContainer = _useState2[1];\n\n  var handleLayoutChange = function handleLayoutChange() {\n    var _containerRef$current;\n\n    (_containerRef$current = containerRef.current) == null ? void 0 : _containerRef$current.measure(function (fx, fy, width, height, px, py) {\n      return setPositionContainer({\n        width: width,\n        height: height,\n        px: px,\n        py: py\n      });\n    });\n  };\n\n  var handlecontainersLayout = function handlecontainersLayout(_ref2) {\n    var LayoutEvent = _ref2.nativeEvent;\n    console.log('====================================');\n    console.log(LayoutEvent.layout);\n    console.log('====================================');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    ref: containerRef,\n    onLayout: handleLayoutChange,\n    children: [_jsx(Text, {\n      style: styles.question,\n      children: item.text\n    }), _jsx(View, {\n      style: styles.row,\n      children: item.answers.map(function (ans) {\n        var index = Math.round(Math.random() * (texts.length - 1));\n        var text = texts.splice(index, 1)[0];\n        return _jsx(View, {\n          onLayout: handlecontainersLayout,\n          style: styles.container,\n          children: _jsx(Text, {\n            children: text.text\n          })\n        }, ans.id);\n      })\n    }), _jsx(View, {\n      style: styles.row,\n      children: item.answers.map(function (ans) {\n        var index = Math.round(Math.random() * (pictures.length - 1));\n        var picture = pictures.splice(index, 1)[0];\n        return _jsx(Draggable, {\n          containers: [{\n            position: {\n              height: 150,\n              px: Dimensions.get('window').width * 0.9 - 150,\n              py: 100,\n              width: 150\n            }\n          }],\n          itemView: _jsx(Image, {\n            source: {\n              uri: picture.uri,\n              width: 100,\n              height: 100\n            }\n          })\n        }, ans.id);\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n    alignContent: 'center',\n    margin: 5,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25,\n    width: \"90%\",\n    borderColor: \"#E0E0E0\"\n  },\n  question: {\n    fontSize: 40,\n    alignSelf: \"center\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#E0E0E0\"\n  },\n  row: {\n    padding: 5,\n    display: 'flex',\n    flexDirection: \"row\",\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  container: {\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    borderWidth: 3,\n    borderColor: \"#E0E0E1\",\n    height: 150,\n    width: 150,\n    padding: 10,\n    alignItems: 'center',\n    alignContent: 'center'\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","useState","Draggable","DropdownQuestion","item","options","pictures","answers","map","ans","id","uri","picture","texts","text","containerRef","createRef","width","height","px","py","PositionContainer","setPositionContainer","handleLayoutChange","current","measure","fx","fy","handlecontainersLayout","LayoutEvent","nativeEvent","console","log","layout","styles","container","question","row","index","Math","round","random","length","splice","position","Dimensions","get","StyleSheet","create","display","flexDirection","gap","alignContent","margin","padding","borderWidth","borderRadius","borderColor","fontSize","alignSelf","borderBottomWidth","borderBottomColor","flexWrap","justifyContent","alignItems"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Dimensions, Image, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable, { position } from \"./Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\n\nconst DropdownQuestion =  ({item, options}: DropdownQuestionProps) => {\n    const pictures = item.answers.map(ans =>  { return {id: ans.id, uri: ans.picture}});\n    const texts = item.answers.map(ans =>  { return {id: ans.id, text: ans.text}});\n\n    const containerRef = React.createRef<View>();\n\n    const [PositionContainer, setPositionContainer] = useState<position>({width: 0, height: 0, px: 0, py: 0})\n    const handleLayoutChange = () => {\n        containerRef.current?.measure( (fx, fy, width, height, px, py) => \n            setPositionContainer({width: width, height: height, px: px, py: py}));\n    }\n\n    const handlecontainersLayout = ({ nativeEvent: LayoutEvent }) =>{\n        console.log('====================================');\n        console.log(LayoutEvent.layout);\n        console.log('====================================');\n    }\n\n    return (\n        <View style={styles.container} ref={containerRef}  onLayout={handleLayoutChange}>\n            <Text style={styles.question}>{item.text}</Text>\n            <View  style={styles.row}>\n                {item.answers.map(ans => {\n                const index = Math.round(Math.random()*(texts.length-1));\n                const text = texts.splice(index, 1)[0];\n                return (\n                    <View key={ans.id} onLayout={handlecontainersLayout} style={styles.container}>\n                        <Text>{text.text}</Text>\n                    </View>\n                );})} \n            </View>\n            <View style={styles.row}  >\n                {item.answers.map(ans => {\n                    const index  = Math.round(Math.random()*(pictures.length-1));\n                    const picture = pictures.splice(index, 1)[0];\n                return (\n                    <Draggable key={ans.id} containers={[{position: {height: 150, px: Dimensions.get('window').width*0.9 - 150, py: 100, width: 150}}]} \n                        itemView={<Image source={{uri: picture.uri, width:100, height:100}} />}/>\n                );})}\n            </View>\n        </View>\n     );\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        alignContent: 'center',\n        margin: 5,\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n        width: \"90%\",\n        borderColor:\"#E0E0E0\",\n    },\n    question: {\n        fontSize: 40,\n        alignSelf: \"center\",\n        borderBottomWidth: 2,  \n        borderBottomColor: \"#E0E0E0\",\n    },\n    row: {\n        padding:5,\n        display: 'flex',\n        flexDirection:\"row\",\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n    },\n    container: {\n        flexDirection: 'column',\n        flexWrap: 'nowrap',\n        borderWidth: 3,  \n        borderColor: \"#E0E0E1\",\n        height: 150,\n        width: 150,\n        padding: 10,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}