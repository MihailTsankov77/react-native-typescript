{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Draggable from \"./.newFolder/CustomComponents/CustomElements/Draggable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function DropdownQuestion(_ref) {\n  var item = _ref.item,\n      options = _ref.options;\n  var pictures = item.answers.map(function (ans) {\n    return _defineProperty({}, ans.id, ans.picture);\n  });\n  var texts = item.answers.map(function (ans) {\n    return _defineProperty({}, ans.id, ans.text);\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.question,\n      children: item.text\n    }), item.answers.map(function (ans) {\n      var index1 = Math.round(Math.random() * pictures.length);\n      return _jsx(Draggable, {\n        dropArea: {\n          position: {\n            height: 100,\n            px: 0,\n            py: 100,\n            width: 100\n          }\n        },\n        itemView: _jsx(Image, {\n          source: {\n            uri: ans.picture,\n            width: 100,\n            height: 100\n          }\n        })\n      });\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n    alignContent: 'center',\n    margin: 5,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25,\n    width: \"90%\",\n    borderColor: \"#E0E0E0\"\n  },\n  question: {\n    fontSize: 40,\n    alignSelf: \"center\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#E0E0E0\"\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","Draggable","DropdownQuestion","item","options","pictures","answers","map","ans","id","picture","texts","text","styles","container","question","index1","Math","round","random","length","position","height","px","py","width","uri","StyleSheet","create","display","flexDirection","gap","alignContent","margin","padding","borderWidth","borderRadius","borderColor","fontSize","alignSelf","borderBottomWidth","borderBottomColor"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport { Image, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable from \"./.newFolder/CustomComponents/CustomElements/Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\n\nconst DropdownQuestion =  ({item, options}: DropdownQuestionProps) => {\n    const pictures = item.answers.map(ans =>  { return {[ans.id]: ans.picture}});\n    const texts = item.answers.map(ans =>  { return {[ans.id]: ans.text}});\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.question}>{item.text}</Text>\n            {item.answers.map(ans => {\n                const index1 = Math.round(Math.random()*pictures.length);\n\n            return (\n            <Draggable dropArea={{position: {height: 100, px: 0, py: 100, width: 100}}} itemView={<Image source={{uri: ans.picture, width:100, height:100}} />}/>\n            );})}\n        </View>\n     );\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        alignContent: 'center',\n        margin: 5,\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n        width: \"90%\",\n        borderColor:\"#E0E0E0\",\n    },\n    question: {\n        fontSize: 40,\n        alignSelf: \"center\",\n        borderBottomWidth: 2,  \n        borderBottomColor: \"#E0E0E0\",\n    }\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAMA,OAAOC,SAAP;;;;AAYA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,OAA4C;EAAA,IAA1CC,IAA0C,QAA1CA,IAA0C;EAAA,IAApCC,OAAoC,QAApCA,OAAoC;EAClE,IAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAK;IAAE,2BAASA,GAAG,CAACC,EAAb,EAAkBD,GAAG,CAACE,OAAtB;EAA+B,CAA1D,CAAjB;EACA,IAAMC,KAAK,GAAGR,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAK;IAAE,2BAASA,GAAG,CAACC,EAAb,EAAkBD,GAAG,CAACI,IAAtB;EAA4B,CAAvD,CAAd;EAEA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,QAApB;MAAA,UAA+BZ,IAAI,CAACS;IAApC,EADJ,EAEKT,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAI;MACrB,IAAMQ,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcd,QAAQ,CAACe,MAAlC,CAAf;MAEJ,OACA,KAAC,SAAD;QAAW,QAAQ,EAAE;UAACC,QAAQ,EAAE;YAACC,MAAM,EAAE,GAAT;YAAcC,EAAE,EAAE,CAAlB;YAAqBC,EAAE,EAAE,GAAzB;YAA8BC,KAAK,EAAE;UAArC;QAAX,CAArB;QAA4E,QAAQ,EAAE,KAAC,KAAD;UAAO,MAAM,EAAE;YAACC,GAAG,EAAElB,GAAG,CAACE,OAAV;YAAmBe,KAAK,EAAC,GAAzB;YAA8BH,MAAM,EAAC;UAArC;QAAf;MAAtF,EADA;IAEG,CALF,CAFL;EAAA,EADJ;AAWH,CAfD;;AAiBA,IAAMT,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;EAC7Bd,SAAS,EAAE;IACPe,OAAO,EAAC,MADD;IAEPC,aAAa,EAAE,QAFR;IAGPC,GAAG,EAAE,EAHE;IAIPC,YAAY,EAAE,QAJP;IAKPC,MAAM,EAAE,CALD;IAMPC,OAAO,EAAE,EANF;IAOPC,WAAW,EAAE,CAPN;IAQPC,YAAY,EAAE,EARP;IASPX,KAAK,EAAE,KATA;IAUPY,WAAW,EAAC;EAVL,CADkB;EAa7BtB,QAAQ,EAAE;IACNuB,QAAQ,EAAE,EADJ;IAENC,SAAS,EAAE,QAFL;IAGNC,iBAAiB,EAAE,CAHb;IAINC,iBAAiB,EAAE;EAJb;AAbmB,CAAlB,CAAf;AAqBA,eAAevC,gBAAf"},"metadata":{},"sourceType":"module"}