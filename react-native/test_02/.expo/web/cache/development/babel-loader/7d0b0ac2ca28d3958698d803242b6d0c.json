{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport function isSmallScreen(minWidth) {\n  return Platform.OS !== 'web' || Dimensions.get('window').width < minWidth;\n}\nexport function getSizeF(r3, r2, r1) {\n  var defaultValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var breakPoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 500;\n  var breakPoint2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 500;\n  return function (len) {\n    return isSmallScreen(breakPoint) || len === 'r1' ? r1 : len === 'r2' || Dimensions.get('window').width < breakPoint2 ? r2 : len === 'r3' ? r3 : defaultValue;\n  };\n}\nexport function convertEnumToTuple(enumeration) {\n  try {\n    var enumArr = Object.values(enumeration);\n    var enumToArr = [];\n\n    for (var i = 0; i < enumArr.length / 2; i++) {\n      enumToArr.push([enumArr[i], enumArr[enumArr.length / 2 + i]]);\n    }\n\n    return enumToArr;\n  } catch (_unused) {\n    throw \"Error not enum in convertEnumToTuple function!\";\n  }\n}\nexport var notImplemeneted = function notImplemeneted(text) {\n  throw \"Not parse onChange Function in \" + text;\n};\nexport function mergeSort(arr) {\n  var half = arr.length / 2;\n\n  if (arr.length <= 1) {\n    return arr;\n  }\n\n  var left = arr.splice(0, half);\n  var right = arr;\n  return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right) {\n  var sortedArr = [];\n\n  while (left.length && right.length) {\n    if (left[0] < right[0]) {\n      sortedArr.push(left.shift());\n    } else {\n      sortedArr.push(right.shift());\n    }\n  }\n\n  return [].concat(sortedArr, _toConsumableArray(left), _toConsumableArray(right));\n}","map":{"version":3,"names":["isSmallScreen","minWidth","Platform","OS","Dimensions","get","width","getSizeF","r3","r2","r1","defaultValue","breakPoint","breakPoint2","len","convertEnumToTuple","enumeration","enumArr","Object","values","enumToArr","i","length","push","notImplemeneted","text","mergeSort","arr","half","left","splice","right","merge","sortedArr","shift"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/.newFolder/CustomComponents/shared/shared-functions.tsx"],"sourcesContent":["import { Dimensions, Platform } from \"react-native\";\nimport { onChangeFunction, RowLenght } from \"./shared-interfaces\";\n\ntype sizeType = string | number;\n\nexport function isSmallScreen(minWidth: number){\n    return Platform.OS!=='web' || Dimensions.get('window').width < minWidth;\n}\n\nexport function getSizeF(r3: sizeType, r2: sizeType, r1: sizeType, defaultValue: sizeType = 0, breakPoint: number = 500, breakPoint2: number = 500){\n    return (len: RowLenght | undefined)=>{\n        return (isSmallScreen(breakPoint) || len==='r1')? r1 : (len === 'r2' || Dimensions.get('window').width < breakPoint2)? r2: (len === 'r3')? r3: defaultValue;\n    }\n}\n\nexport function convertEnumToTuple(enumeration: any): [string, number][]{\n    try{\n        const enumArr: (string | number)[] = Object.values(enumeration)\n        const enumToArr: [string, number][] = [];\n        for(let i = 0; i < enumArr.length/2; i++)\n            enumToArr.push([enumArr[i] as string, enumArr[enumArr.length/2 +i] as number]);\n        return enumToArr;\n    }catch{\n        throw \"Error not enum in convertEnumToTuple function!\";\n    }\n}\n\nexport const notImplemeneted: onChangeFunction = (text: string) => {\n    throw `Not parse onChange Function in ${text}`;\n}\n\nexport function mergeSort <T> (arr: Array<T>): Array{\n    const half = arr.length / 2;\n  \n    // the base case is array length <=1\n    if (arr.length <= 1) {\n      return arr;\n    }\n  \n    const left = arr.splice(0, half); // the first half of the array\n    const right = arr;\n    return merge<T>(mergeSort(left), mergeSort(right));\n  }\n\n  function merge<T>(left: Array<T> , right: Array<T>) {\n    let sortedArr = []; // the sorted elements will go here\n  \n    while (left.length && right.length) {\n      // insert the smallest element to the sortedArr\n      if (left[0] < right[0]) {\n        sortedArr.push(left.shift());\n      } else {\n        sortedArr.push(right.shift());\n      }\n    }\n  \n    // use spread operator and create a new array, combining the three arrays\n    return [...sortedArr, ...left, ...right];\n  }\n\n//****************    SCTICKY NAVBAR     ***************/\n\n// handleScroll = (event: { nativeEvent: { contentOffset: { y: number; }; }; }) => {   \n//     if(event.nativeEvent.contentOffset.y >= 200){\n//       this.setState({isScrolled: true});\n//     }\n//     if(event.nativeEvent.contentOffset.y <= 50){\n//       this.setState({isScrolled: false});\n//     } \n// }"],"mappings":";;;AAKA,OAAO,SAASA,aAAT,CAAuBC,QAAvB,EAAwC;EAC3C,OAAOC,QAAQ,CAACC,EAAT,KAAc,KAAd,IAAuBC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiCL,QAA/D;AACH;AAED,OAAO,SAASM,QAAT,CAAkBC,EAAlB,EAAgCC,EAAhC,EAA8CC,EAA9C,EAA4I;EAAA,IAAhFC,YAAgF,uEAAvD,CAAuD;EAAA,IAApDC,UAAoD,uEAA/B,GAA+B;EAAA,IAA1BC,WAA0B,uEAAJ,GAAI;EAC/I,OAAO,UAACC,GAAD,EAA8B;IACjC,OAAQd,aAAa,CAACY,UAAD,CAAb,IAA6BE,GAAG,KAAG,IAApC,GAA2CJ,EAA3C,GAAiDI,GAAG,KAAK,IAAR,IAAgBV,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiCO,WAAlD,GAAgEJ,EAAhE,GAAqEK,GAAG,KAAK,IAAT,GAAgBN,EAAhB,GAAoBG,YAA/I;EACH,CAFD;AAGH;AAED,OAAO,SAASI,kBAAT,CAA4BC,WAA5B,EAAiE;EACpE,IAAG;IACC,IAAMC,OAA4B,GAAGC,MAAM,CAACC,MAAP,CAAcH,WAAd,CAArC;IACA,IAAMI,SAA6B,GAAG,EAAtC;;IACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,OAAO,CAACK,MAAR,GAAe,CAAlC,EAAqCD,CAAC,EAAtC;MACID,SAAS,CAACG,IAAV,CAAe,CAACN,OAAO,CAACI,CAAD,CAAR,EAAuBJ,OAAO,CAACA,OAAO,CAACK,MAAR,GAAe,CAAf,GAAkBD,CAAnB,CAA9B,CAAf;IADJ;;IAEA,OAAOD,SAAP;EACH,CAND,CAMC,gBAAK;IACF,MAAM,gDAAN;EACH;AACJ;AAED,OAAO,IAAMI,eAAiC,GAAG,SAApCA,eAAoC,CAACC,IAAD,EAAkB;EAC/D,0CAAwCA,IAAxC;AACH,CAFM;AAIP,OAAO,SAASC,SAAT,CAAwBC,GAAxB,EAA6C;EAChD,IAAMC,IAAI,GAAGD,GAAG,CAACL,MAAJ,GAAa,CAA1B;;EAGA,IAAIK,GAAG,CAACL,MAAJ,IAAc,CAAlB,EAAqB;IACnB,OAAOK,GAAP;EACD;;EAED,IAAME,IAAI,GAAGF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcF,IAAd,CAAb;EACA,IAAMG,KAAK,GAAGJ,GAAd;EACA,OAAOK,KAAK,CAAIN,SAAS,CAACG,IAAD,CAAb,EAAqBH,SAAS,CAACK,KAAD,CAA9B,CAAZ;AACD;;AAED,SAASC,KAAT,CAAkBH,IAAlB,EAAmCE,KAAnC,EAAoD;EAClD,IAAIE,SAAS,GAAG,EAAhB;;EAEA,OAAOJ,IAAI,CAACP,MAAL,IAAeS,KAAK,CAACT,MAA5B,EAAoC;IAElC,IAAIO,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAnB,EAAwB;MACtBE,SAAS,CAACV,IAAV,CAAeM,IAAI,CAACK,KAAL,EAAf;IACD,CAFD,MAEO;MACLD,SAAS,CAACV,IAAV,CAAeQ,KAAK,CAACG,KAAN,EAAf;IACD;EACF;;EAGD,iBAAWD,SAAX,qBAAyBJ,IAAzB,sBAAkCE,KAAlC;AACD"},"metadata":{},"sourceType":"module"}