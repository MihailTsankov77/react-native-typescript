{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Navbar from \"./Components/.newFolder/CustomComponents/CustomNavbar\";\nimport Btn from \"./Components/.newFolder/CustomComponents/CustomButton\";\nimport { QuestionRepo } from \"./dao/repository\";\nimport AddQuestionView from \"./Components/AddQuestionView\";\nimport StartTest from \"./Components/StartTest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Views;\n\n(function (Views) {\n  Views[Views[\"HomePage\"] = 0] = \"HomePage\";\n  Views[Views[\"StartTest\"] = 1] = \"StartTest\";\n})(Views || (Views = {}));\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      views: Views.HomePage,\n      isScrolled: false,\n      questions: [],\n      edited: undefined\n    };\n\n    _this.handleCreateQuestions = function () {\n      var _ref = _asyncToGenerator(function* (question) {\n        if (!_this.state.edited) {\n          var created = yield QuestionRepo.create(question);\n\n          _this.setState(function (_ref2) {\n            var questions = _ref2.questions;\n            return {\n              questions: questions.concat(created)\n            };\n          });\n\n          console.log(_this.state);\n        } else {\n          _this.handleUpdate(question);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleUpdate = function () {\n      var _ref3 = _asyncToGenerator(function* (question) {\n        var updated = yield QuestionRepo.update(question);\n\n        _this.setState(function (_ref4) {\n          var questions = _ref4.questions;\n          return {\n            questions: questions.map(function (qu) {\n              return qu.id === updated.id ? updated : qu;\n            }),\n            edited: undefined\n          };\n        });\n      });\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteQuestion = function () {\n      var _ref5 = _asyncToGenerator(function* (question) {\n        yield QuestionRepo.delete(question.id);\n\n        _this.setState(function (_ref6) {\n          var questions = _ref6.questions;\n          return {\n            questions: questions.filter(function (qu) {\n              return qu.id !== question.id;\n            })\n          };\n        });\n      });\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEditQuestion = function (question) {\n      _this.setState({\n        edited: question\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(function* () {\n        var allQuestions = yield QuestionRepo.findAll();\n        this.setState({\n          questions: allQuestions\n        });\n      });\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log(prevState);\n    }\n  }, {\n    key: \"handleSwitchView\",\n    value: function handleSwitchView() {\n      switch (this.state.views) {\n        case Views.HomePage:\n          return _jsx(AddQuestionView, {\n            onCreate: this.handleCreateQuestions,\n            onDelete: this.handleDeleteQuestion,\n            onEdit: this.handleEditQuestion,\n            onPositionMove: this.handleUpdate,\n            edited: this.state.edited,\n            questions: this.state.questions\n          });\n\n        case Views.StartTest:\n          return _jsx(StartTest, {\n            questions: this.state.questions\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('====================================');\n      console.log(this.state);\n      console.log('====================================');\n      return _jsxs(_Fragment, {\n        children: [_jsx(Button, {\n          title: \"refresh\",\n          onPress: function onPress() {\n            return _this2.setState({});\n          }\n        }), _jsxs(View, {\n          children: [_jsxs(Navbar, {\n            title: \"Mudele Test\",\n            children: [_jsx(Btn, {\n              value: \"Create Questions\",\n              event: function event() {\n                return _this2.setState({\n                  views: Views.HomePage\n                });\n              },\n              bgColor: \"gray\"\n            }), _jsx(Btn, {\n              value: \"Start Test\",\n              event: function event() {\n                return _this2.setState({\n                  views: Views.StartTest\n                });\n              },\n              bgColor: \"gray\"\n            })]\n          }), _jsx(ScrollView, {\n            style: {\n              height: \"fit-content\"\n            },\n            children: this.handleSwitchView()\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","Navbar","Btn","QuestionRepo","AddQuestionView","StartTest","Views","App","state","views","HomePage","isScrolled","questions","edited","undefined","handleCreateQuestions","question","created","create","setState","concat","console","log","handleUpdate","updated","update","map","qu","id","handleDeleteQuestion","delete","filter","handleEditQuestion","allQuestions","findAll","prevProps","prevState","snapshot","height","handleSwitchView"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/App.tsx"],"sourcesContent":["import React, { Component, ComponentType } from \"react\";\nimport { Button, SafeAreaView, ScrollView, View } from \"react-native\";\nimport AddMovieForm from \"./Components/AddQuestionsForm\";\nimport List from \"./Components/.newFolder/CustomComponents/CustomCardList\";\nimport Navbar from \"./Components/.newFolder/CustomComponents/CustomNavbar\";\nimport Btn from \"./Components/.newFolder/CustomComponents/CustomButton\";\nimport WatchedCard from \"./Components/QuestionCard\";\nimport AddQuestionsForm from \"./Components/AddQuestionsForm\";\nimport { QuestionRepo } from \"./dao/repository\";\nimport Question from \"./modules/Question\";\nimport AddQuestionView from \"./Components/AddQuestionView\";\nimport StartTest from \"./Components/StartTest\";\n\nenum Views {\n  HomePage,\n  StartTest,\n}\n\ninterface AppState{\n  \n  views: Views;\n  isScrolled: boolean;\n  questions: Question[];\n  edited: Question | undefined;\n  \n}\n\nclass App extends Component<{},AppState> {\n\n  state: Readonly<AppState> ={\n  \n    views: Views.HomePage,\n    isScrolled: false,\n    \n    questions: [],\n    edited: undefined,\n  }\n \n\n  async componentDidMount() {\n    const allQuestions = await QuestionRepo.findAll();\n    this.setState({questions: allQuestions});\n  }\n\n  \n  componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<AppState>, snapshot?: any): void {\n    console.log(prevState);\n   \n  }\n\n  handleCreateQuestions = async (question: Question) =>{\n    if(!this.state.edited){\n      const created = await QuestionRepo.create(question);\n      this.setState(({questions}) => ({questions: questions.concat(created)}));\n      console.log(this.state);\n    }else{\n       this.handleUpdate(question);\n    }\n  }\n\n  handleUpdate = async (question: Question) =>{\n    const updated = await QuestionRepo.update(question);\n    this.setState(({questions}) => ({questions: questions.map((qu) => qu.id === updated.id? updated: qu), edited: undefined}));\n  }\n\n  handleDeleteQuestion = async (question: Question) =>{\n      await QuestionRepo.delete(question.id!);\n      this.setState(({questions}) => ({questions: questions.filter((qu) => qu.id!== question.id)}));\n  }\n  \n  handleEditQuestion =  (question: Question)=>{\n    this.setState({edited: question});\n  }\n\n \n  handleSwitchView(){\n    switch(this.state.views){\n      case Views.HomePage:\n        return <AddQuestionView onCreate={this.handleCreateQuestions} onDelete={this.handleDeleteQuestion} onEdit={this.handleEditQuestion} onPositionMove={this.handleUpdate} edited={this.state.edited} questions={this.state.questions}/>\n      case Views.StartTest:\n        return <StartTest questions={this.state.questions}/>\n      \n    }\n  }\n  \n  render(): React.ReactNode {\n\n    console.log('====================================');\n    console.log(this.state);\n    console.log('====================================');\n    return (<>\n      <Button title=\"refresh\" onPress={()=>this.setState({})}/>\n      <View>\n       <Navbar title=\"Mudele Test\" >\n          <Btn value=\"Create Questions\" event={() => this.setState({views: Views.HomePage})} bgColor='gray'/>\n          <Btn value=\"Start Test\" event={() => this.setState({views: Views.StartTest})} bgColor='gray'/>\n      </Navbar>\n      <ScrollView  style={{height: \"fit-content\"}}>\n        {this.handleSwitchView()}\n      </ScrollView> \n      </View>\n      </>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}