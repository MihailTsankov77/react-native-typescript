{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"onChange\", \"bgColor\", \"color\", \"borderColor\", \"btnStyleProps\", \"prestine\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport { SaveFormat } from 'expo-image-manipulator';\nimport * as ImagePickerApi from 'expo-image-picker';\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport InputContainer, { inputStyle } from \"./CustomElements/CustomInputContainer\";\nimport Btn from \"./CustomButton\";\nimport { CustomStyle } from \"./shared/shared-styles\";\nimport { getSizeF, isSmallScreen, notImplemeneted } from \"./shared/shared-functions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getSizeButton = getSizeF(200, '75%', '100%', 200, 450, 1130);\n\nvar ImagePicker = function ImagePicker(_ref) {\n  var value = _ref.value,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? notImplemeneted : _ref$onChange,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === void 0 ? \"rgba(236,236,236, 0.9)\" : _ref$bgColor,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"grey\" : _ref$color,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? \"rgba(230,230,230, 1)\" : _ref$borderColor,\n      _ref$btnStyleProps = _ref.btnStyleProps,\n      btnStyleProps = _ref$btnStyleProps === void 0 ? {\n    bgColor: \"lightblue\",\n    color: \"white\"\n  } : _ref$btnStyleProps,\n      _ref$prestine = _ref.prestine,\n      prestine = _ref$prestine === void 0 ? true : _ref$prestine,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var openImagePickerAsync = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePickerApi.requestMediaLibraryPermissionsAsync();\n\n      if (permissionResult.granted === false) {\n        alert('Permission to access camera roll is required!');\n        return;\n      }\n\n      var pickerResult = yield ImagePickerApi.launchImageLibraryAsync();\n\n      if (pickerResult.cancelled === true) {\n        return;\n      }\n\n      var manipResult = yield ImageManipulator.manipulateAsync(pickerResult.uri, [], {\n        base64: true,\n        format: SaveFormat.PNG\n      });\n      onChange(\"data:image/xxx;base64,\" + manipResult.base64);\n    });\n\n    return function openImagePickerAsync() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var containerStyle = isSmallScreen(450) ? ImagePickerStyle.containerSmall : ImagePickerStyle.containerBig;\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, ImagePickerStyle.container), containerStyle),\n    children: [_jsx(View, {\n      style: ImagePickerStyle.inputsOuterContainer,\n      children: _jsx(InputContainer, _objectSpread(_objectSpread({\n        color: color\n      }, rest), {}, {\n        child: _jsxs(View, {\n          style: ImagePickerStyle.inputsContainer,\n          children: [!isSmallScreen(450) && _jsx(View, {\n            style: ImagePickerStyle.inputContainer,\n            children: _jsx(TextInput, {\n              onChangeText: onChange,\n              value: value,\n              style: _objectSpread(_objectSpread({}, inputStyle.input), {}, {\n                backgroundColor: bgColor,\n                borderColor: borderColor\n              })\n            })\n          }), _jsx(View, {\n            style: {\n              width: getSizeButton('r3')\n            },\n            children: _jsx(Btn, _objectSpread(_objectSpread({}, btnStyleProps), {}, {\n              value: \"Upload\",\n              event: openImagePickerAsync,\n              len: \"r1\"\n            }))\n          })]\n        }),\n        prestine: prestine,\n        value: \"\"\n      }))\n    }), _jsx(Text, {\n      children: value && _jsx(View, {\n        style: ImagePickerStyle.imageContainer,\n        children: _jsx(Image, {\n          source: {\n            uri: value\n          },\n          style: _objectSpread(_objectSpread({}, ImagePickerStyle.image), {}, {\n            borderColor: borderColor\n          })\n        })\n      })\n    })]\n  });\n};\n\nvar ImageSize = isSmallScreen(550) ? 140 : 100;\nvar ImagePickerStyle = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    display: 'flex'\n  },\n  containerBig: {\n    flexFlow: \"row nowrap\",\n    justifyContent: 'space-between'\n  },\n  containerSmall: {\n    flexFlow: \"column-reverse wrap\",\n    alignItems: 'center'\n  },\n  image: {\n    borderRadius: ImageSize,\n    width: ImageSize,\n    height: ImageSize,\n    borderWidth: ImageSize / 50\n  },\n  imageContainer: {\n    width: \"10%\",\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  inputsContainer: _objectSpread(_objectSpread({\n    padding: 5\n  }, CustomStyle.row), {}, {\n    width: \"100%\"\n  }),\n  inputsOuterContainer: {\n    width: \"85%\"\n  },\n  inputContainer: {\n    marginRight: 10,\n    width: \"75%\"\n  },\n  btnContainer: {\n    alignContent: \"center\"\n  }\n});\nexport default ImagePicker;","map":{"version":3,"names":["ImageManipulator","SaveFormat","ImagePickerApi","React","InputContainer","inputStyle","Btn","CustomStyle","getSizeF","isSmallScreen","notImplemeneted","getSizeButton","ImagePicker","value","onChange","bgColor","color","borderColor","btnStyleProps","prestine","rest","openImagePickerAsync","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","cancelled","manipResult","manipulateAsync","uri","base64","format","PNG","containerStyle","ImagePickerStyle","containerSmall","containerBig","container","inputsOuterContainer","inputsContainer","inputContainer","input","backgroundColor","width","imageContainer","image","ImageSize","StyleSheet","create","display","flexFlow","justifyContent","alignItems","borderRadius","height","borderWidth","alignSelf","padding","row","marginRight","btnContainer","alignContent"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/.newFolder/CustomComponents/CustomImagePicker.tsx"],"sourcesContent":["\n\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport { SaveFormat } from 'expo-image-manipulator';\nimport * as ImagePickerApi from 'expo-image-picker';\nimport React, { useState } from \"react\";\nimport { Image, Platform, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport { Colorable, InputField, onChangeInterface, Resizeable, RowLenght} from \"./shared/shared-interfaces\";\nimport InputContainer, { inputStyle } from \"./CustomElements/CustomInputContainer\";\nimport Btn from \"./CustomButton\";\nimport { CustomStyle } from \"./shared/shared-styles\";\nimport { getSizeF, isSmallScreen, notImplemeneted } from \"./shared/shared-functions\";\n\n\n\ninterface inputProps extends Colorable, Resizeable, InputField, onChangeInterface {\n   btnStyleProps?: Colorable;\n    \n}\nconst getSizeButton = getSizeF(200,'75%', '100%', 200, 450, 1130);\n\nconst ImagePicker = ({ value, onChange = notImplemeneted, bgColor = \"rgba(236,236,236, 0.9)\", color =\"grey\", borderColor = \"rgba(230,230,230, 1)\", \n                    btnStyleProps = {bgColor: \"lightblue\", color: \"white\"}, prestine = true,...rest}: inputProps) => {\n    \n    const openImagePickerAsync = async () => {\n        const permissionResult = await ImagePickerApi.requestMediaLibraryPermissionsAsync();\n    \n        if (permissionResult.granted === false) {\n          alert('Permission to access camera roll is required!');\n          return;\n        }\n    \n        const pickerResult = await ImagePickerApi.launchImageLibraryAsync();\n        \n        if (pickerResult.cancelled === true) {\n          return;\n        }\n        const manipResult = await ImageManipulator.manipulateAsync(\n          pickerResult.uri,\n          [],\n          {base64: true, format: SaveFormat.PNG }\n        );\n       \n        onChange(`data:image/xxx;base64,${manipResult.base64}`);\n          \n      };\n      const containerStyle = (isSmallScreen(450))? ImagePickerStyle.containerSmall : ImagePickerStyle.containerBig;\n   \n    return (\n        <View style={{...ImagePickerStyle.container, ...containerStyle}}>\n        <View style={ImagePickerStyle.inputsOuterContainer}>\n        \n            <InputContainer color={color} {...rest}\n\n                child={\n                        \n                    <View style={ImagePickerStyle.inputsContainer}>\n                        {!isSmallScreen(450)&&\n                            <View style={ImagePickerStyle.inputContainer}>\n                                <TextInput\n                                    onChangeText={onChange} value={value} \n                                    style={{...inputStyle.input, backgroundColor: bgColor, borderColor: borderColor}}/>\n                            </View>\n                        }\n                            \n                            <View style={{width: getSizeButton('r3')}}>\n                                <Btn {...btnStyleProps} value=\"Upload\" event={openImagePickerAsync} len=\"r1\"  />\n                            </View>\n                          \n                            </View>\n                    \n\n                    } \n                prestine={prestine} value={\"\"} />\n            </View>\n            <Text>{(value)&&\n                <View style={ImagePickerStyle.imageContainer}>\n                        <Image source={{uri: value}} style={{...ImagePickerStyle.image, borderColor: borderColor}}/>\n                    </View>\n            }</Text>\n            \n                    </View>\n    );\n}\n\nconst ImageSize = isSmallScreen(550)? 140: 100;\n\nconst ImagePickerStyle = StyleSheet.create({\n\n\n    container:{\n        width: \"100%\",\n        display: 'flex',\n    },\n\n    containerBig:{\n        flexFlow: \"row nowrap\",\n        justifyContent: 'space-between',\n    },\n    containerSmall:{\n        flexFlow: \"column-reverse wrap\",\n        alignItems:'center',\n    },\n\n    image:{\n        borderRadius: ImageSize,\n        width: ImageSize,\n        height: ImageSize,\n        borderWidth: ImageSize/50,\n    },\n\n    imageContainer:{\n        width: \"10%\",\n        alignItems:'center',\n        alignSelf: 'center',\n    },\n\n    inputsContainer:{\n        padding: 5,\n        ...CustomStyle.row,\n        \n        width: \"100%\",\n    },\n    inputsOuterContainer:{\n       \n        width: \"85%\",\n    },\n    inputContainer:{\n        marginRight: 10,\n        width: \"75%\",\n    },\n\n    btnContainer:{\n        \n       alignContent:\"center\",\n    },\n\n    \n   \n});\n\n\nexport default ImagePicker;"],"mappings":"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"},"metadata":{},"sourceType":"module"}