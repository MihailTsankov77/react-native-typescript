{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Draggable from \"./Draggable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownQuestion = function (_Component) {\n  _inherits(DropdownQuestion, _Component);\n\n  var _super = _createSuper(DropdownQuestion);\n\n  function DropdownQuestion() {\n    var _this;\n\n    _classCallCheck(this, DropdownQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dropAreasPositions: []\n    };\n    _this.dropAreaRefs = Array(10).fill(React.createRef());\n\n    _this.handleDropAreasLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var layout = nativeEvent.layout;\n\n      _this.setState({\n        dropAreasPositions: _this.state.dropAreasPositions.concat({\n          px: _this.state.positionContainer.px + layout.x,\n          py: _this.state.positionContainer.py + layout.y,\n          width: layout.width,\n          height: layout.height\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DropdownQuestion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          options = _this$props.options;\n      var pictures = item.answers.map(function (ans) {\n        return {\n          id: ans.id,\n          uri: ans.picture\n        };\n      });\n      var texts = item.answers.map(function (ans) {\n        return {\n          id: ans.id,\n          text: ans.text\n        };\n      });\n      return _jsxs(View, {\n        style: styles.container,\n        ref: this.DropAreaRef,\n        onLayout: this.handleLayoutChange,\n        children: [_jsx(Text, {\n          style: styles.question,\n          children: item.text\n        }), _jsx(View, {\n          style: styles.row,\n          children: item.answers.map(function (ans) {\n            var index = Math.round(Math.random() * (texts.length - 1));\n            var text = texts.splice(index, 1)[0];\n            return _jsx(View, {\n              onLayout: _this2.handleDropAreasLayout,\n              style: styles.dropArea,\n              children: _jsx(Text, {\n                children: text.text\n              })\n            }, ans.id);\n          })\n        }), _jsx(View, {\n          style: styles.row,\n          children: item.answers.map(function (ans) {\n            var index = Math.round(Math.random() * (pictures.length - 1));\n            var picture = pictures.splice(index, 1)[0];\n            return _jsx(Draggable, {\n              dropAreas: _this2.state.dropAreasPositions,\n              itemView: _jsx(Image, {\n                source: {\n                  uri: picture.uri,\n                  width: 100,\n                  height: 100\n                }\n              })\n            }, ans.id);\n          })\n        })]\n      });\n    }\n  }]);\n\n  return DropdownQuestion;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n    alignContent: 'center',\n    margin: 5,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 25,\n    width: \"90%\",\n    borderColor: \"#E0E0E0\"\n  },\n  question: {\n    fontSize: 40,\n    alignSelf: \"center\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#E0E0E0\"\n  },\n  row: {\n    padding: 5,\n    display: 'flex',\n    flexDirection: \"row\",\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  dropArea: {\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    borderWidth: 3,\n    borderColor: \"#E0E0E1\",\n    height: 150,\n    width: 150,\n    padding: 10,\n    alignItems: 'center',\n    alignContent: 'center'\n  }\n});\nexport default DropdownQuestion;","map":{"version":3,"names":["React","Component","Draggable","DropdownQuestion","state","dropAreasPositions","dropAreaRefs","Array","fill","createRef","handleDropAreasLayout","nativeEvent","layout","setState","concat","px","positionContainer","x","py","y","width","height","props","item","options","pictures","answers","map","ans","id","uri","picture","texts","text","styles","container","DropAreaRef","handleLayoutChange","question","row","index","Math","round","random","length","splice","dropArea","StyleSheet","create","display","flexDirection","gap","alignContent","margin","padding","borderWidth","borderRadius","borderColor","fontSize","alignSelf","borderBottomWidth","borderBottomColor","flexWrap","justifyContent","alignItems"],"sources":["/Users/mihail.tsankov/Desktop/bootcamp/git/react-native-typescript/react-native/test_02/Components/DropdownQuestion.tsx"],"sourcesContent":["\nimport React, { Component, useState } from \"react\";\nimport { Dimensions, Image, LayoutChangeEvent, StyleSheet, Text, View } from \"react-native\";\nimport Answer from \"../modules/Answer\";\nimport Question, { TypeAnswers } from \"../modules/Question\";\nimport Btn from \"./.newFolder/CustomComponents/CustomButton\";\nimport Card from \"./.newFolder/CustomComponents/CustomCard\";\nimport Draggable, { position } from \"./Draggable\";\nimport { Selected } from \"./StartTest\";\n\ninterface DropdownQuestionProps {\n    item: Question;\n    options: {\n        selectedAnswers: Selected[];\n        onSelectAnswer: (item: Answer, itemId: number)=>void;\n    }\n}\n\ninterface DropdownQuestionState {\n    dropAreasPositions: position[];\n}\n\nclass DropdownQuestion extends Component<DropdownQuestionProps, DropdownQuestionState> {\n    \n    state: Readonly<DropdownQuestionState> ={\n        dropAreasPositions: [],\n    }\n    \n    dropAreaRefs = Array(10).fill(React.createRef<View>()) ;\n\n    \n\n    handleDropAreasLayout = ({ nativeEvent }:  LayoutChangeEvent) =>{\n        const {layout} = nativeEvent;\n        this.setState({dropAreasPositions: this.state.dropAreasPositions.concat(\n\n            {px: this.state.positionContainer.px + layout.x,\n            py: this.state.positionContainer.py + layout.y,\n            width: layout.width,\n            height: layout.height})});\n    }\n    render() {\n\n        const {item, options} = this.props\n        \n        const pictures = item.answers.map(ans =>  { return {id: ans.id, uri: ans.picture}});\n        const texts = item.answers.map(ans =>  { return {id: ans.id, text: ans.text}});\n\n    \n    return (\n        <View style={styles.container} ref={this.DropAreaRef}  onLayout={this.handleLayoutChange}>\n            <Text style={styles.question}>{item.text}</Text>\n            <View  style={styles.row}>\n                {item.answers.map(ans => {\n                const index = Math.round(Math.random()*(texts.length-1));\n                const text = texts.splice(index, 1)[0];\n                return (\n                    <View key={ans.id} onLayout={this.handleDropAreasLayout} style={styles.dropArea}>\n                        <Text>{text.text}</Text>\n                    </View>\n                );})} \n            </View>\n            <View style={styles.row}  >\n                {item.answers.map(ans => {\n                    const index  = Math.round(Math.random()*(pictures.length-1));\n                    const picture = pictures.splice(index, 1)[0];\n                return (\n                    <Draggable key={ans.id} dropAreas={this.state.dropAreasPositions} \n                        itemView={<Image source={{uri: picture.uri, width:100, height:100}} />}/>\n                );})}\n            </View>\n        </View>\n     );\n    }\n}\n \nconst styles = StyleSheet.create({\n    container: {\n        display:'flex',\n        flexDirection: 'column',\n        gap: 10,\n        alignContent: 'center',\n        margin: 5,\n        padding: 15,\n        borderWidth: 2,  \n        borderRadius: 25,\n        width: \"90%\",\n        borderColor:\"#E0E0E0\",\n    },\n    question: {\n        fontSize: 40,\n        alignSelf: \"center\",\n        borderBottomWidth: 2,  \n        borderBottomColor: \"#E0E0E0\",\n    },\n    row: {\n        padding:5,\n        display: 'flex',\n        flexDirection:\"row\",\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n    },\n    dropArea: {\n        flexDirection: 'column',\n        flexWrap: 'nowrap',\n        borderWidth: 3,  \n        borderColor: \"#E0E0E1\",\n        height: 150,\n        width: 150,\n        padding: 10,\n        alignItems: 'center',\n        alignContent: 'center',\n    },\n});\n\nexport default DropdownQuestion;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}